<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/css/xml-style.css" type="text/css"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Submodule on 蓝色空间号-新世界的探索者</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Submodule on 蓝色空间号-新世界的探索者</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 20 Mar 2025 12:59:32 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/submodule/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git submodule</title>
      <link>http://localhost:1313/post/git-submodule/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      
      <guid>http://localhost:1313/post/git-submodule/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#J6CDd7QvkohJ3mxEKt3czp31nOe&#34;&gt;Git submodule添加子项目_库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnEitqaRgfOoIdSuxwNhUaIc&#34;&gt;Git归并策略&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnel4BHYYT4Lw7SQHLqNXyue&#34;&gt;添加&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnrHxc9hpZYK1WtRbYlUQ91f&#34;&gt;删除&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入“/”快速插入内容&lt;/p&gt;
&lt;p&gt;添加图标&lt;/p&gt;
&lt;p&gt;添加封面&lt;/p&gt;
&lt;p&gt;展示文档信息&lt;/p&gt;
&lt;p&gt;Git submodule添加子项目_库&lt;/p&gt;
&lt;p&gt;开发过程中，经常会有一些通用的部分希望抽取出来做成一个公共库来提供给别的工程来使用，而公共代码库的版本管理是个麻烦的事情。git submodule命令就可以解决这个问题。&lt;/p&gt;
&lt;p&gt;Git归并策略&lt;/p&gt;
&lt;p&gt;Git归并有两种策略：递归，章鱼。&lt;/p&gt;
&lt;p&gt;1.递归策略：当分支数只有两个的时候。&lt;/p&gt;
&lt;p&gt;2.章鱼策略：当分支数大于两个的时候。&lt;/p&gt;
&lt;p&gt;Git会自动选择归并的方法。&lt;/p&gt;
&lt;p&gt;3.子树策略：是Git另一种归并方法。（submodule）&lt;/p&gt;
&lt;p&gt;它可以把另一个子项目，嵌入到当前项目。而且会非常聪明的合并这些子项目。&lt;/p&gt;
&lt;p&gt;添加&lt;/p&gt;
&lt;p&gt;为当前工程添加submodule，命令如下：&lt;/p&gt;
&lt;p&gt;git submodule add 仓库地址 路径&lt;/p&gt;
&lt;p&gt;其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。&lt;/p&gt;
&lt;p&gt;注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone）&lt;/p&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;p&gt;git submodule add -f &lt;a href=&#34;http://git.cs/Cmblife_iOS_Internal/modulesLib.git&#34;&gt;http://git.cs/Cmblife_iOS_Internal/modulesLib.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-f 是强制的意思，一般不需要加&lt;/p&gt;
&lt;p&gt;命令执行完成，会在当前工程根路径下生成一个名为“.gitmodules”的文件，其中记录了子模块的信息。添加完成以后，再将子模块所在的文件夹添加到工程中即可。&lt;/p&gt;
&lt;p&gt;删除&lt;/p&gt;
&lt;p&gt;submodule的删除稍微麻烦点：首先，要在“.gitmodules”文件中删除相应配置信息。然后，执行“git rm –cached ”命令将子模块所在的文件从git中删除。&lt;/p&gt;
&lt;p&gt;下载的工程带有submodule&lt;/p&gt;
&lt;p&gt;当使用git clone下来的工程中带有submodule时，初始的时候，submodule的内容并不会自动下载下来的，此时，只需执行如下命令：&lt;/p&gt;
&lt;p&gt;git submodule update –init –recursive&lt;/p&gt;
&lt;p&gt;即可将子模块内容下载下来后工程才不会缺少相应的文件。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
