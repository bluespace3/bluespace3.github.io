<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/css/xml-style.css" type="text/css"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术 on 蓝色空间号-新世界的探索者</title><link>https://bluespace3.github.io/</link><description>Recent content in 技术 on 蓝色空间号-新世界的探索者</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 05 Sep 2025 14:48:25 +0000</lastBuildDate><atom:link href="https://bluespace3.github.io/categories/%E6%8A%80%E6%9C%AF/index.xml" rel="self" type="application/rss+xml"/><item><title>* 项目中添加子项目</title><link>https://bluespace3.github.io/post/git/git%E6%B7%BB%E5%8A%A0%E5%AD%90%E9%A1%B9%E7%9B%AE/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/git/git%E6%B7%BB%E5%8A%A0%E5%AD%90%E9%A1%B9%E7%9B%AE/</guid><description>&lt;ul>
&lt;li>项目中添加子项目
&lt;ul>
&lt;li>1、git clone 父项目url&lt;/li>
&lt;li>2、cd 父项目对应目录下：git submodule add &amp;lt;子项目地址&amp;gt;&lt;/li>
&lt;li>3、git commit ;git push&lt;/li>
&lt;li>4、此时子项目下的子项目是空的，需要cd到父目录cmd执行：
git submodule update &amp;ndash;init &amp;ndash;recursive
或者执行：git submodule init 然后执行cd&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>clone含嵌套项目的项目
&lt;ul>
&lt;li>git clone 父项目url &amp;ndash;recurse-submodules
不加&amp;ndash;recurse-submodules，克隆的子项目是空的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>* 一、引入</title><link>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/unnitest%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/unnitest%E7%AC%94%E8%AE%B0/</guid><description>&lt;ul>
&lt;li>一、引入
&lt;ul>
&lt;li>1.导包，import unnitest&lt;/li>
&lt;li>2.编写测试类，继承unnitest&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>二、运行
&lt;ul>
&lt;li>
&lt;p>1.unnitest.main(),运行全部用例&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2.测试套：testsuite&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建：suite=unnitest.Testsuite()&lt;/p>
&lt;/li>
&lt;li>
&lt;p>测试套添加用例：suite.addtTest（类（方法））&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="images/1742460595596.png" alt="1742460595596">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行：runner=unnitest.TextTestRunner()&lt;/p>
&lt;ul>
&lt;li>运行：runner.run(suite)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>*运行必须在命令行运行否则是运行全部用例&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>三、生成报告&lt;/p>
&lt;p>&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460643666.png" alt="1742460643666">&lt;/p>
&lt;ul>
&lt;li>1.将HTMLTestRunner.py文件放到项目文件夹下&lt;/li>
&lt;li>2.导包：如左图&lt;/li>
&lt;li>3.创建测试套，参考上方&lt;/li>
&lt;li>4.创建测试报告文件，且以测试套运行（参考左图）&lt;/li>
&lt;li>&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460677985.png" alt="1742460677985">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>与pytest的异同&lt;/li>
&lt;li>&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460760547.png" alt="1742460760547">
&lt;ul>
&lt;li>pytest以mark方式组织用例（而非套件）&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460791823.png" alt="1742460791823">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>面试相关&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460820437.png" alt="1742460820437">&lt;/li>
&lt;li>pycharm关闭pytest测试模式&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460849632.png" alt="1742460849632">&lt;/li>
&lt;/ul></description></item><item><title>> [数据库](https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E5%BA%93&amp;spm=1001.2101.3001.7020)的查询是数据库使用中比较重要的环节，前面的基础查询比较简单，不做介绍，可自行查阅。本文主要介绍复合查询，并结合用例进行讲解。</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/mysql----%E5%A4%8D%E5%90%88%E6%9F%A5%E8%AF%A2/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/mysql----%E5%A4%8D%E5%90%88%E6%9F%A5%E8%AF%A2/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E5%BA%93&amp;amp;spm=1001.2101.3001.7020">数据库&lt;/a>的查询是数据库使用中比较重要的环节，前面的基础查询比较简单，不做介绍，可自行查阅。本文主要介绍复合查询，并结合用例进行讲解。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>本文的用例依据Soctt模式的经典测试表，可以自行下载，也可以自己创建&lt;br>
链接：点这里跳转&lt;br>
自行创建步骤如下：&lt;/p>&lt;/blockquote>
&lt;h2 id="0预备工作">
&lt;a class="header-anchor" href="#0%e9%a2%84%e5%a4%87%e5%b7%a5%e4%bd%9c">&lt;/a>
0、预备工作
&lt;/h2>&lt;h3 id="01-建表">
&lt;a class="header-anchor" href="#01-%e5%bb%ba%e8%a1%a8">&lt;/a>
0.1 建表
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">创建&lt;/span> &lt;span class="n">dept&lt;/span> &lt;span class="err">表（部门表）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CREATE&lt;/span> &lt;span class="n">TABLE&lt;/span> &lt;span class="nf">dept&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deptno&lt;/span> &lt;span class="n">INT&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">KEY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dname&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loc&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">创建&lt;/span> &lt;span class="n">emp&lt;/span> &lt;span class="err">表（员工表）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CREATE&lt;/span> &lt;span class="n">TABLE&lt;/span> &lt;span class="nf">emp&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">empno&lt;/span> &lt;span class="n">INT&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">KEY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">员工编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ename&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">员工姓名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">job&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">职位&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mgr&lt;/span> &lt;span class="n">INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">上级经理编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hiredate&lt;/span> &lt;span class="n">DATE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">入职日期&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sal&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">工资&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">comm&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">奖金&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deptno&lt;/span> &lt;span class="n">INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FOREIGN&lt;/span> &lt;span class="nf">KEY&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">deptno&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">REFERENCES&lt;/span> &lt;span class="nf">dept&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">deptno&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">创建&lt;/span> &lt;span class="n">salgrade&lt;/span> &lt;span class="err">表（工资等级表）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CREATE&lt;/span> &lt;span class="n">TABLE&lt;/span> &lt;span class="nf">salgrade&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="n">INT&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">KEY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">工资等级&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">losal&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">最低工资&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hisal&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">最高工资&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1234567891011121314151617181920212223242526&lt;/span>&lt;span class="n">AI写代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="02-插入测试数据">
&lt;a class="header-anchor" href="#02-%e6%8f%92%e5%85%a5%e6%b5%8b%e8%af%95%e6%95%b0%e6%8d%ae">&lt;/a>
0.2 插入测试数据
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">插入&lt;/span> &lt;span class="n">dept&lt;/span> &lt;span class="err">表数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INSERT&lt;/span> &lt;span class="n">INTO&lt;/span> &lt;span class="nf">dept&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">deptno&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ACCOUNTING&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">NEW&lt;/span> &lt;span class="n">YORK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">RESEARCH&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">DALLAS&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALES&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CHICAGO&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">OPERATIONS&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">BOSTON&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">插入&lt;/span> &lt;span class="n">emp&lt;/span> &lt;span class="err">表数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INSERT&lt;/span> &lt;span class="n">INTO&lt;/span> &lt;span class="nf">emp&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">empno&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ename&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">job&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mgr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hiredate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">comm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deptno&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7369&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SMITH&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7902&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1980&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">800.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7499&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ALLEN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">02&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1600.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">300.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7521&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">WARD&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">02&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1250.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">500.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7566&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">JONES&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MANAGER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">02&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2975.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7654&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MARTIN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1250.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1400.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">BLAKE&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MANAGER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">05&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2850.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7782&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLARK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MANAGER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">06&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2450.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7788&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SCOTT&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ANALYST&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7566&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1982&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">3000.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">KING&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">PRESIDENT&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5000.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7844&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">TURNER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">08&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1500.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7876&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ADAMS&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7788&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1983&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1100.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7900&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">JAMES&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">03&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">950.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7902&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">FORD&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ANALYST&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7566&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">03&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">3000.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7934&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MILLER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7782&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1982&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1300.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">插入&lt;/span> &lt;span class="n">salgrade&lt;/span> &lt;span class="err">表数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INSERT&lt;/span> &lt;span class="n">INTO&lt;/span> &lt;span class="nf">salgrade&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">grade&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">losal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hisal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">700&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1200&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1201&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1400&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1401&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9999&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">12345678910111213141516171819202122232425262728293031&lt;/span>&lt;span class="n">AI写代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建好以后，如果表的内容和下图一样，那基本就没问题了&lt;/p></description></item><item><title>📝 2025-07-13 近期优化与变更</title><link>https://bluespace3.github.io/post/%E9%87%8F%E5%8C%96%E9%A1%B9%E7%9B%AE/ai%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93%E5%86%B3%E7%AD%96%E7%B3%BB%E7%BB%9F%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E9%87%8F%E5%8C%96%E9%A1%B9%E7%9B%AE/ai%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93%E5%86%B3%E7%AD%96%E7%B3%BB%E7%BB%9F%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/</guid><description>&lt;h2 id="-2025-07-13-近期优化与变更">
&lt;a class="header-anchor" href="#-2025-07-13-%e8%bf%91%e6%9c%9f%e4%bc%98%e5%8c%96%e4%b8%8e%e5%8f%98%e6%9b%b4">&lt;/a>
📝 2025-07-13 近期优化与变更
&lt;/h2>&lt;ul>
&lt;li>API支持ETF与A股评分体系分离，ETF基本面恒为0，ETF评分=技术面50分+AI消息面50分。&lt;/li>
&lt;li>评分体系与决策等级优化，买入阈值降至50分，持有30分，谨慎持有10分，卖出&amp;lt;10分。&lt;/li>
&lt;li>日志与邮件内容去重，每只股票仅保留最新信号。&lt;/li>
&lt;li>集成自动邮件功能，主程序运行后自动发送HTML决策报告。&lt;/li>
&lt;li>数据兼容性增强，分析引擎支持成交量列名为vol或volume。&lt;/li>
&lt;li>文档补充与完善，详细说明系统架构、评分体系、部署与接口。&lt;/li>
&lt;li>用户体验提升，聚合报告美化，策略可读性提升。&lt;/li>
&lt;/ul>
&lt;h2 id="-概述">
&lt;a class="header-anchor" href="#-%e6%a6%82%e8%bf%b0">&lt;/a>
📋 概述
&lt;/h2>&lt;p>本文档详细说明了量化交易系统的各个模块、类、方法和接口，为开发者提供完整的API参考。&lt;/p>
&lt;h2 id="-系统架构">
&lt;a class="header-anchor" href="#-%e7%b3%bb%e7%bb%9f%e6%9e%b6%e6%9e%84">&lt;/a>
🏗️ 系统架构
&lt;/h2>&lt;h3 id="核心模块">
&lt;a class="header-anchor" href="#%e6%a0%b8%e5%bf%83%e6%a8%a1%e5%9d%97">&lt;/a>
核心模块
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">├──&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="c1"># 配置管理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">├──&lt;/span> &lt;span class="n">data_loader&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="c1"># 数据加载器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">├──&lt;/span> &lt;span class="n">analysis_engine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="c1"># 分析引擎&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">├──&lt;/span> &lt;span class="n">strategy_engine&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="c1"># 策略引擎&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">└──&lt;/span> &lt;span class="n">gemini_analyzer&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span> &lt;span class="c1"># AI分析器&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="-配置模块-configpy">
&lt;a class="header-anchor" href="#-%e9%85%8d%e7%bd%ae%e6%a8%a1%e5%9d%97-configpy">&lt;/a>
📊 配置模块 (config.py)
&lt;/h2>&lt;h3 id="类和方法">
&lt;a class="header-anchor" href="#%e7%b1%bb%e5%92%8c%e6%96%b9%e6%b3%95">&lt;/a>
类和方法
&lt;/h3>&lt;h4 id="配置常量">
&lt;a class="header-anchor" href="#%e9%85%8d%e7%bd%ae%e5%b8%b8%e9%87%8f">&lt;/a>
配置常量
&lt;/h4>&lt;h1 id="股票池配置">
&lt;a class="header-anchor" href="#%e8%82%a1%e7%a5%a8%e6%b1%a0%e9%85%8d%e7%bd%ae">&lt;/a>
股票池配置
&lt;/h1>&lt;p>STOCK_POOL = {
&amp;ldquo;000001.SZ&amp;rdquo;: &amp;ldquo;平安银行&amp;rdquo;,
&amp;ldquo;600519.SH&amp;rdquo;: &amp;ldquo;贵州茅台&amp;rdquo;,
# &amp;hellip;
}&lt;/p>
&lt;h1 id="api配置">
&lt;a class="header-anchor" href="#api%e9%85%8d%e7%bd%ae">&lt;/a>
API配置
&lt;/h1>&lt;p>GEMINI_API_URL = &amp;ldquo;&lt;a href="https://rglnawodplak.ap-southeast-1.clawcloudrun.com/">https://rglnawodplak.ap-southeast-1.clawcloudrun.com/&lt;/a>****&lt;em>&lt;strong>t/completions&amp;rdquo;
GEMINI_API_KEY = &amp;ldquo;&lt;/strong>&lt;/em>&amp;rdquo;&lt;/p>
&lt;h1 id="数据路径">
&lt;a class="header-anchor" href="#%e6%95%b0%e6%8d%ae%e8%b7%af%e5%be%84">&lt;/a>
数据路径
&lt;/h1>&lt;p>DATA_PATH = &amp;ldquo;data&amp;rdquo;&lt;/p>
&lt;h2 id="-数据加载器-data_loaderpy">
&lt;a class="header-anchor" href="#-%e6%95%b0%e6%8d%ae%e5%8a%a0%e8%bd%bd%e5%99%a8-data_loaderpy">&lt;/a>
📈 数据加载器 (data_loader.py)
&lt;/h2>&lt;h3 id="dataloader-类">
&lt;a class="header-anchor" href="#dataloader-%e7%b1%bb">&lt;/a>
DataLoader 类
&lt;/h3>&lt;h4 id="方法">
&lt;a class="header-anchor" href="#%e6%96%b9%e6%b3%95">&lt;/a>
方法
&lt;/h4>&lt;h5 id="__init__self">
&lt;a class="header-anchor" href="#__init__self">&lt;/a>
&lt;code>__init__(self)&lt;/code>
&lt;/h5>&lt;p>初始化数据加载器。&lt;/p></description></item><item><title>📝 2025-07-13 近期优化与变更</title><link>https://bluespace3.github.io/post/%E9%87%8F%E5%8C%96%E9%A1%B9%E7%9B%AE/ai%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93%E5%86%B3%E7%AD%96%E7%B3%BB%E7%BB%9F%E6%96%B9%E6%A1%88/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E9%87%8F%E5%8C%96%E9%A1%B9%E7%9B%AE/ai%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93%E5%86%B3%E7%AD%96%E7%B3%BB%E7%BB%9F%E6%96%B9%E6%A1%88/</guid><description>&lt;h2 id="-2025-07-13-近期优化与变更">
&lt;a class="header-anchor" href="#-2025-07-13-%e8%bf%91%e6%9c%9f%e4%bc%98%e5%8c%96%e4%b8%8e%e5%8f%98%e6%9b%b4">&lt;/a>
📝 2025-07-13 近期优化与变更
&lt;/h2>&lt;ul>
&lt;li>新增布林带、KDJ、成交量、ATR、威廉指标，技术指标体系更丰富。&lt;/li>
&lt;li>评分体系优化：技术面40分、基本面35分、情绪面25分，ETF与A股评分规则分离，ETF基本面恒为0，ETF评分=技术面50分+AI消息面50分。&lt;/li>
&lt;li>决策等级优化：5级决策（重仓买入、买入、持有、谨慎持有、卖出），买入阈值降至50分，持有30分，谨慎持有10分，卖出&amp;lt;10分。&lt;/li>
&lt;li>日志与邮件去重：每只股票仅保留最新信号，输出和报告更简明。&lt;/li>
&lt;li>自动邮件集成：主程序运行后自动发送HTML格式决策报告，内容美化，信号带emoji和中文名。&lt;/li>
&lt;li>数据兼容性增强：分析引擎支持成交量列名为vol或volume。&lt;/li>
&lt;li>AI分析优化：ETF和A股分开提示，ETF基本面恒为0，AI消息面更关注资金流和行业新闻。&lt;/li>
&lt;li>文档完善：补充README、部署、API、策略等文档，详细说明系统架构、评分体系、部署与接口。&lt;/li>
&lt;li>用户体验提升：聚合报告美化，策略可读性提升，项目说明更精炼。&lt;/li>
&lt;/ul>
&lt;p>本文档详细阐述了本量化交易系统的核心决策逻辑。系统通过对技术面、基本面和AI市场情绪面三个维度进行独立的量化评分，最终加权汇总，生成交易信号。&lt;/p>
&lt;p>&lt;strong>总分 = 技术面得分 + 基本面得分 + AI市场情绪面得分&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>重仓买入阈值&lt;/strong>: 总分 &amp;gt;= 80&lt;/li>
&lt;li>&lt;strong>买入阈值&lt;/strong>: 总分 &amp;gt;= 60&lt;/li>
&lt;li>&lt;strong>持有阈值&lt;/strong>: 总分 &amp;gt;= 20&lt;/li>
&lt;li>&lt;strong>谨慎持有阈值&lt;/strong>: 总分 &amp;gt;= -10&lt;/li>
&lt;li>&lt;strong>卖出阈值&lt;/strong>: 总分 &amp;lt; -10&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="etf评分体系指数基金etf专用">
&lt;a class="header-anchor" href="#etf%e8%af%84%e5%88%86%e4%bd%93%e7%b3%bb%e6%8c%87%e6%95%b0%e5%9f%ba%e9%87%91etf%e4%b8%93%e7%94%a8">&lt;/a>
ETF评分体系（指数基金/ETF专用）
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>技术面&lt;/strong>：50分（均线、成交量、波动率等为主，弱化KDJ等短线指标）&lt;/li>
&lt;li>&lt;strong>AI消息面&lt;/strong>：50分（重点关注资金流向、申购赎回、行业轮动、指数调整等）&lt;/li>
&lt;li>&lt;strong>基本面&lt;/strong>：恒为0分（ETF不参与基本面打分）&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>总分 = 技术面得分（归一化到50分） + AI消息面得分（归一化到50分）&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>归一化方法：技术面原始得分/40×50，AI消息面原始得分/25×50，四舍五入取整。&lt;/li>
&lt;li>ETF决策流程与A股一致，但分数分布和信号解释更侧重资金流和行业轮动。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="一-技术面分析-总权重-40分">
&lt;a class="header-anchor" href="#%e4%b8%80-%e6%8a%80%e6%9c%af%e9%9d%a2%e5%88%86%e6%9e%90-%e6%80%bb%e6%9d%83%e9%87%8d-40%e5%88%86">&lt;/a>
一、 技术面分析 (总权重: 40分)
&lt;/h2>&lt;p>技术面分析旨在捕捉市场的短期趋势和动量。它由四个核心指标构成，各自有独立的评分和权重。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">指标&lt;/th>
&lt;th style="text-align: left">权重&lt;/th>
&lt;th style="text-align: left">触发条件&lt;/th>
&lt;th style="text-align: left">得分&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>MACD趋势&lt;/strong>&lt;/td>
&lt;td style="text-align: left">15分&lt;/td>
&lt;td style="text-align: left">看涨金叉 (DIF上穿DEA，且DIF&amp;gt;0)&lt;/td>
&lt;td style="text-align: left">+15&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">看跌死叉 (DIF下穿DEA，且DIF&amp;lt;0)&lt;/td>
&lt;td style="text-align: left">-15&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">多头排列 (DIF&amp;gt;DEA)&lt;/td>
&lt;td style="text-align: left">+8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">空头排列 (DIF&amp;lt;DEA)&lt;/td>
&lt;td style="text-align: left">-8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>RSI动量&lt;/strong>&lt;/td>
&lt;td style="text-align: left">10分&lt;/td>
&lt;td style="text-align: left">RSI &amp;lt; 30 (超卖区)&lt;/td>
&lt;td style="text-align: left">+10&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">RSI &amp;gt; 70 (超买区)&lt;/td>
&lt;td style="text-align: left">-10&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">RSI &amp;lt; 40 (偏弱)&lt;/td>
&lt;td style="text-align: left">+5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">RSI &amp;gt; 60 (偏强)&lt;/td>
&lt;td style="text-align: left">-5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>布林带&lt;/strong>&lt;/td>
&lt;td style="text-align: left">8分&lt;/td>
&lt;td style="text-align: left">价格触及下轨&lt;/td>
&lt;td style="text-align: left">+8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">价格触及上轨&lt;/td>
&lt;td style="text-align: left">-8&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">价格在中轨下方&lt;/td>
&lt;td style="text-align: left">+3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">价格在中轨上方&lt;/td>
&lt;td style="text-align: left">-3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;strong>KDJ指标&lt;/strong>&lt;/td>
&lt;td style="text-align: left">7分&lt;/td>
&lt;td style="text-align: left">KDJ超卖 (K&amp;lt;20, D&amp;lt;20)&lt;/td>
&lt;td style="text-align: left">+7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">KDJ超买 (K&amp;gt;80, D&amp;gt;80)&lt;/td>
&lt;td style="text-align: left">-7&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">KDJ金叉 (K&amp;gt;D)&lt;/td>
&lt;td style="text-align: left">+3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">&lt;/td>
&lt;td style="text-align: left">KDJ死叉 (K&amp;lt;D)&lt;/td>
&lt;td style="text-align: left">-3&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>最终报告形式&lt;/strong>: &lt;code>技术面得分: [总分] | 原因: [综合原因] (MACD: [得分], RSI: [得分], 布林带: [得分], KDJ: [得分])&lt;/code>&lt;/p></description></item><item><title>docker pull ubuntu 载入ubuntu 镜像</title><link>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>docker pull ubuntu 载入ubuntu 镜像&lt;/p>
&lt;p>docker pull training/webapp # 载入镜像&lt;/p>
&lt;p>docker pull python:3.7 安装python镜像&lt;/p>
&lt;p>docker pull nginx 安装nginx镜像&lt;/p>
&lt;p>docker run -it python:3.7 /bin/bash 进入python镜像&lt;/p>
&lt;p>连接不上时，终端输入：&lt;/p>
&lt;p>1.cd &amp;ldquo;C:\Program Files\Docker\Docker&amp;rdquo;&lt;/p>
&lt;p>2.DockerCli.exe -SwitchDaemon&lt;/p>
&lt;p>docker run -it ubuntu /bin/bash 启用进入容器&lt;/p>
&lt;p>exit退出容器&lt;/p>
&lt;p>docker run -d -P training/webapp python app.py 后台启用容器并随机映射到本机端口&lt;/p>
&lt;p>docker run -d -p 5000:5000 training/webapp python app.py后台启用容器并指定映射到&lt;/p>
&lt;p>docker logs -f id 查看应用日志&lt;/p>
&lt;p>docker logs -f -t &amp;ndash;tail=100 dockerid 动态查看最新100条日志&lt;/p>
&lt;p>docker top id 查看容器内部应用进程&lt;/p>
&lt;p>docker ps -a 查看所有容器(可查容器id)&lt;/p></description></item><item><title>Gemma 3 被谷歌称为目前最强的开源视觉模型之一。 该模型支持超过35种语言，能够分析文本、图像和短视频。值得注意的是，Gemma 3 的视觉编码器经过升级，支持高分辨率和非方形图像，并引入了 ShieldGemma 2 图像安全分类器，用于过滤被分类为性暗示、危险或暴力的内容。这些特性使得 Gemma 3 成为当前最强大的开源视觉模型之一。</title><link>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/gemma-3%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/gemma-3%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</guid><description>&lt;p>Gemma 3 被谷歌称为目前最强的开源视觉模型之一。 该模型支持超过35种语言，能够分析文本、图像和短视频。值得注意的是，Gemma 3 的视觉编码器经过升级，支持高分辨率和非方形图像，并引入了 ShieldGemma 2 图像安全分类器，用于过滤被分类为性暗示、危险或暴力的内容。这些特性使得 Gemma 3 成为当前最强大的开源视觉模型之一。&lt;/p>
&lt;h4 id="最新的-gemma-3-多模态开源模型新功能">
&lt;a class="header-anchor" href="#%e6%9c%80%e6%96%b0%e7%9a%84-gemma-3-%e5%a4%9a%e6%a8%a1%e6%80%81%e5%bc%80%e6%ba%90%e6%a8%a1%e5%9e%8b%e6%96%b0%e5%8a%9f%e8%83%bd">&lt;/a>
最新的 Gemma 3 多模态开源模型新功能
&lt;/h4>&lt;p>使用世界上最好的单加速器模型进行构建： Gemma 3 以其尺寸提供最先进的性能，在 LMArena 排行榜的初步人类偏好评估中胜过 Llama3-405B、DeepSeek-V3 和 o3-mini。这可以帮助您创建可安装在单个 GPU 或 TPU 主机上的引人入胜的用户体验。
以 140 种语言走向全球：构建使用客户语言的应用程序。Gemma 3 提供对超过 35 种语言的开箱即用支持和对超过 140 种语言的预训练支持。
打造具备高级文本和视觉推理能力的AI：轻松构建分析图片、文本、短视频等应用，开启交互智能化新可能1。
使用扩展的上下文窗口处理复杂任务： Gemma 3 提供 128k 令牌上下文窗口，让您的应用程序处理和理解大量信息。
使用函数调用创建 AI 驱动的工作流程： Gemma 3 支持函数调用和结构化输出，以帮助您自动执行任务并构建代理体验。
通过量化模型更快地实现高性能： Gemma 3 引入了官方量化版本，减少了模型大小和计算要求，同时保持了高精度。&lt;/p>
&lt;p>本地安装，单显卡可以选择1b，4b，12b，27b，推荐选择27b，因为Gemma 3 27B 处于帕累托最佳点.&lt;/p>
&lt;h4 id="本地部署gemma-3开源大模型">
&lt;a class="header-anchor" href="#%e6%9c%ac%e5%9c%b0%e9%83%a8%e7%bd%b2gemma-3%e5%bc%80%e6%ba%90%e5%a4%a7%e6%a8%a1%e5%9e%8b">&lt;/a>
&lt;strong>本地部署Gemma 3开源大模型：&lt;/strong>
&lt;/h4>&lt;p>1、下载官方 Ollama 【 &lt;strong>&lt;a href="https://ollama.com/">点击前往&lt;/a>&lt;/strong> 】 ，并通过下方的安装命令执行下载：&lt;/p>
&lt;p>普通用户建议选择4b和12b，显卡好的可以上27b&lt;/p></description></item><item><title>GitLab CI/CD 简介</title><link>https://bluespace3.github.io/post/git/gitlab%E9%85%8D%E7%BD%AEcicd%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/git/gitlab%E9%85%8D%E7%BD%AEcicd%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>&lt;h2 id="gitlab-cicd-简介">
&lt;a class="header-anchor" href="#gitlab-cicd-%e7%ae%80%e4%bb%8b">&lt;/a>
GitLab CI/CD 简介
&lt;/h2>&lt;p>GitLab CI/CD 是 GitLab 内置的持续集成/持续部署工具，它允许开发者在代码提交后自动执行一系列任务，如构建、测试和部署。通过配置 CI/CD 流程，可以大大提高开发效率，减少人为错误，并确保代码质量。&lt;/p>
&lt;h3 id="cicd-核心概念">
&lt;a class="header-anchor" href="#cicd-%e6%a0%b8%e5%bf%83%e6%a6%82%e5%bf%b5">&lt;/a>
CI/CD 核心概念
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>持续集成 (CI)&lt;/strong>: 开发人员频繁地将代码集成到主分支，每次集成都通过自动化构建和测试来验证，从而尽早发现问题。&lt;/li>
&lt;li>&lt;strong>持续交付 (CD)&lt;/strong>: 确保代码随时可以部署到生产环境，通常包括自动化测试和部署流程。&lt;/li>
&lt;li>&lt;strong>持续部署 (CD)&lt;/strong>: 将持续交付更进一步，自动将通过测试的代码部署到生产环境。&lt;/li>
&lt;/ul>
&lt;h2 id="gitlab-ciyml-配置文件">
&lt;a class="header-anchor" href="#gitlab-ciyml-%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6">&lt;/a>
.gitlab-ci.yml 配置文件
&lt;/h2>&lt;p>GitLab CI/CD 的核心是 &lt;code>.gitlab-ci.yml&lt;/code> 文件，它定义了 CI/CD 流水线的结构和行为。该文件需要放在项目的根目录下。&lt;/p>
&lt;h3 id="基本结构">
&lt;a class="header-anchor" href="#%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84">&lt;/a>
基本结构
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 定义阶段&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 定义作业&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build_job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Building the app&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">make build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test_job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Running tests&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">make test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy_job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Deploying the app&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">make deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="关键组件">
&lt;a class="header-anchor" href="#%e5%85%b3%e9%94%ae%e7%bb%84%e4%bb%b6">&lt;/a>
关键组件
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>stages&lt;/strong>: 定义流水线的阶段，按顺序执行。&lt;/li>
&lt;li>&lt;strong>jobs&lt;/strong>: 定义在特定阶段执行的任务。&lt;/li>
&lt;li>&lt;strong>script&lt;/strong>: 在作业中执行的命令。&lt;/li>
&lt;li>&lt;strong>only/except&lt;/strong>: 控制作业何时运行（例如，只在特定分支上运行）。&lt;/li>
&lt;/ol>
&lt;h2 id="gitlab-runner">
&lt;a class="header-anchor" href="#gitlab-runner">&lt;/a>
GitLab Runner
&lt;/h2>&lt;p>GitLab Runner 是执行 CI/CD 作业的代理，它可以安装在不同的环境中，如 Linux、Windows、macOS 等。&lt;/p></description></item><item><title>tags: ["pytest", "python"]</title><link>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bpytest%E9%A1%B9%E7%9B%AE/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bpytest%E9%A1%B9%E7%9B%AE/</guid><description>&lt;h2 id="tags-pytest-python">
&lt;a class="header-anchor" href="#tags-pytest-python">&lt;/a>
tags: [&amp;ldquo;pytest&amp;rdquo;, &amp;ldquo;python&amp;rdquo;]
&lt;/h2>&lt;h1 id="快速上手pytest接口测试">
&lt;a class="header-anchor" href="#%e5%bf%ab%e9%80%9f%e4%b8%8a%e6%89%8bpytest%e6%8e%a5%e5%8f%a3%e6%b5%8b%e8%af%95">&lt;/a>
快速上手Pytest接口测试
&lt;/h1>&lt;h1 id="背景">
&lt;a class="header-anchor" href="#%e8%83%8c%e6%99%af">&lt;/a>
背景
&lt;/h1>&lt;p>以前有分享过httprunner+pytest相关的使用方法，并且一直使用httprunner编写用自动化脚本，以前的经验可以快速帮我们上手pytest框架。为了快速上手pytest，HttpRunner 与Pytest 在编写自动化脚本异同点对比：&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h1 id="项目初始化">
&lt;a class="header-anchor" href="#%e9%a1%b9%e7%9b%ae%e5%88%9d%e5%a7%8b%e5%8c%96">&lt;/a>
项目初始化
&lt;/h1>&lt;p>克隆项目◦ git clone &lt;a href="mailto:git@gitlab.guangpuyun.cn">git@gitlab.guangpuyun.cn&lt;/a>:clinic-diag/test/poct_api_test.git
了解项目结构&lt;/p>
&lt;p>&lt;img src="https://bluespace3.github.io/images/528752a3cec6442b7fb16aabcf1f313f94a9b0c3c9a71d46f85a3bb0ab45bcc6.jpg" alt="">&lt;/p>
&lt;h1 id="安装依赖">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85%e4%be%9d%e8%b5%96">&lt;/a>
安装依赖
&lt;/h1>&lt;p>◦ 项目根目录下打开终端，执行pip install -r requirements.txt&lt;/p>
&lt;h1 id="测试用例格式">
&lt;a class="header-anchor" href="#%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b%e6%a0%bc%e5%bc%8f">&lt;/a>
测试用例格式
&lt;/h1>&lt;ol>
&lt;li>用例文件以test_开头或_test结尾◦ 建议以场景命名-如四合一的快速检测：test_zk_quicktest.py&lt;/li>
&lt;li>用例集合——类，以Test开头（可以无）◦ 包含1个或多个测试用例函数&lt;/li>
&lt;li>测试用例函数以test_开头◦ 一个函数代表一条用例- $_-&amp;gt;$ 一个明确的测试点&lt;/li>
&lt;/ol>
&lt;h1 id="用例转换">
&lt;a class="header-anchor" href="#%e7%94%a8%e4%be%8b%e8%bd%ac%e6%8d%a2">&lt;/a>
用例转换
&lt;/h1>&lt;p>1、运行脚本utils/swaager.py——爬取swagger文档资源,存放于/api/swaggerApi目录
2、运行脚本api/generateTestCases.py，生成基础用例，存放于/api目录
3、基础用例结构&lt;/p>
&lt;p>此时只是生成了接口的对象，还需要编写实现逻辑和传参进一步实现该对象，完成测试用例编写（见用例编写）&lt;/p>
&lt;p>&lt;img src="https://bluespace3.github.io/images/e2e3d30579d03e71fcd65320f80da7a2b548bfc1056245fa3d54b9669e3ce7c3.jpg" alt="">&lt;/p>
&lt;h1 id="用例编写">
&lt;a class="header-anchor" href="#%e7%94%a8%e4%be%8b%e7%bc%96%e5%86%99">&lt;/a>
用例编写
&lt;/h1>&lt;ol>
&lt;li>在/test对应的目录下新建用例文件，命名以test_开头，表明测试场景&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://bluespace3.github.io/mages/3dcd5da9b6d6fde4508a1aada61ca3d3486938faed0f48a273a4a4ac026db38f.jpg" alt="">&lt;/p>
&lt;ol start="2">
&lt;li>导入必要的包和基础用例，如：&lt;/li>
&lt;/ol>
&lt;p>from utils.logger import loggerfrom api.poctMina.addcartusingPosT import YsbMallCartController&lt;/p>
&lt;h1 id="3-编写测试用例">
&lt;a class="header-anchor" href="#3-%e7%bc%96%e5%86%99%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b">&lt;/a>
3. 编写测试用例
&lt;/h1>&lt;p>from utils.logger import logger fron api.poctMina.addCartUsinqPosT import YsbMallCartController def test_addCartUsing(getTokenBySecret,pytestconfig): 用例名称-体现在报告上 addCartUsing $\mathbf{\sigma}=\mathbf{\sigma}$ YsbHallCartController ( addcartUsing.base_url $\mathbf{\sigma}=\mathbf{\sigma}$ pytestconfig.getini(&amp;lsquo;poct-host&amp;rsquo;) 构造url addCartUsinq.data[&amp;lsquo;addNum&amp;rsquo;]=1 addCartUsing.data[&amp;lsquo;packageId&amp;rsquo;] $=2\dot{0}\dot{\Theta}$ addCartUsing.data[*token&amp;rsquo;]=getTokenBySecret(store=3o15659) 构造传参 response_data=addcartUsing.addcart() .json() 获取返回值 logger.info(response_data) assert response_data[&amp;lsquo;code&amp;rsquo;] $\scriptstyle==$ &amp;lsquo;40001&amp;rsquo; 断言&lt;/p></description></item><item><title>title: "Git submodule"</title><link>https://bluespace3.github.io/post/git/git-submodule/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/git/git-submodule/</guid><description>&lt;hr>
&lt;p>title: &amp;ldquo;Git submodule&amp;rdquo;&lt;/p>
&lt;p>categories: [&amp;ldquo;技术&amp;rdquo;, &amp;ldquo;git&amp;rdquo;, &amp;ldquo;hugo&amp;rdquo;]&lt;/p>
&lt;p>date: 2025-03-20T12:59:32+08:00&lt;/p>
&lt;p>draft: false&lt;/p>
&lt;h2 id="tags-submodule-git-教程">
&lt;a class="header-anchor" href="#tags-submodule-git-%e6%95%99%e7%a8%8b">&lt;/a>
tags: [&amp;ldquo;submodule&amp;rdquo;, &amp;ldquo;Git&amp;rdquo;, &amp;ldquo;教程&amp;rdquo;]
&lt;/h2>&lt;ul>
&lt;li>
&lt;ul>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#J6CDd7QvkohJ3mxEKt3czp31nOe">Git submodule添加子项目_库&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnEitqaRgfOoIdSuxwNhUaIc">Git归并策略&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnel4BHYYT4Lw7SQHLqNXyue">添加&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnrHxc9hpZYK1WtRbYlUQ91f">删除&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>输入“/”快速插入内容&lt;/p>
&lt;p>添加图标&lt;/p>
&lt;p>添加封面&lt;/p>
&lt;p>展示文档信息&lt;/p>
&lt;p>Git submodule添加子项目_库&lt;/p>
&lt;p>开发过程中，经常会有一些通用的部分希望抽取出来做成一个公共库来提供给别的工程来使用，而公共代码库的版本管理是个麻烦的事情。git submodule命令就可以解决这个问题。&lt;/p>
&lt;p>Git归并策略&lt;/p>
&lt;p>Git归并有两种策略：递归，章鱼。&lt;/p>
&lt;p>1.递归策略：当分支数只有两个的时候。&lt;/p>
&lt;p>2.章鱼策略：当分支数大于两个的时候。&lt;/p>
&lt;p>Git会自动选择归并的方法。&lt;/p>
&lt;p>3.子树策略：是Git另一种归并方法。（submodule）&lt;/p>
&lt;p>它可以把另一个子项目，嵌入到当前项目。而且会非常聪明的合并这些子项目。&lt;/p>
&lt;p>添加&lt;/p>
&lt;p>为当前工程添加submodule，命令如下：&lt;/p>
&lt;p>git submodule add 仓库地址 路径&lt;/p>
&lt;p>其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。&lt;/p>
&lt;p>注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone）&lt;/p>
&lt;p>示例:&lt;/p>
&lt;p>git submodule add -f &lt;a href="http://git.cs/Cmblife_iOS_Internal/modulesLib.git">http://git.cs/Cmblife_iOS_Internal/modulesLib.git&lt;/a>&lt;/p>
&lt;p>-f 是强制的意思，一般不需要加&lt;/p>
&lt;p>命令执行完成，会在当前工程根路径下生成一个名为“.gitmodules”的文件，其中记录了子模块的信息。添加完成以后，再将子模块所在的文件夹添加到工程中即可。&lt;/p>
&lt;p>删除&lt;/p>
&lt;p>submodule的删除稍微麻烦点：首先，要在“.gitmodules”文件中删除相应配置信息。然后，执行“git rm –cached ”命令将子模块所在的文件从git中删除。&lt;/p>
&lt;p>下载的工程带有submodule&lt;/p>
&lt;p>当使用git clone下来的工程中带有submodule时，初始的时候，submodule的内容并不会自动下载下来的，此时，只需执行如下命令：&lt;/p>
&lt;p>git submodule update –init –recursive&lt;/p></description></item><item><title>title: "linux安装python"</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/linux%E5%AE%89%E8%A3%85python/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/linux%E5%AE%89%E8%A3%85python/</guid><description>&lt;hr>
&lt;p>title: &amp;ldquo;linux安装python&amp;rdquo;&lt;/p>
&lt;p>categories: [&amp;ldquo;技术&amp;rdquo;, &amp;ldquo;linux&amp;rdquo;, &amp;ldquo;python&amp;rdquo;]
date: 2025-03-20T12:59:32+08:00&lt;/p>
&lt;p>draft: false&lt;/p>
&lt;h2 id="tags-linux-python-教程">
&lt;a class="header-anchor" href="#tags-linux-python-%e6%95%99%e7%a8%8b">&lt;/a>
tags: [&amp;ldquo;linux&amp;rdquo;, &amp;ldquo;python&amp;rdquo;, &amp;ldquo;教程&amp;rdquo;]
&lt;/h2>&lt;p>#依赖包&lt;/p>
&lt;p>yum -y groupinstall &amp;ldquo;Development tools&amp;rdquo;&lt;/p>
&lt;p>yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel&lt;/p>
&lt;p>#下载 Python3&lt;/p>
&lt;p>wget &lt;a href="https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz">https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz&lt;/a>&lt;/p>
&lt;p>#创建文件夹&lt;/p>
&lt;p>mkdir /usr/local/python3&lt;/p>
&lt;p>#解压编译安装&lt;/p>
&lt;p>tar -xvJf Python-3.6.2.tar.xz&lt;/p>
&lt;p>cd Python-3.6.2&lt;/p>
&lt;p>./configure &amp;ndash;prefix=/usr/local/python3&lt;/p>
&lt;p>make &amp;amp;&amp;amp; make install&lt;/p>
&lt;p>#给个软链&lt;/p>
&lt;p>ln -sf /usr/local/python3/bin/python3 /usr/bin/python3&lt;/p>
&lt;p>ln -sf /usr/local/python3/bin/pip3 /usr/bin/pip3&lt;/p></description></item><item><title>title: "linux常用命令"</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;hr>
&lt;p>title: &amp;ldquo;linux常用命令&amp;rdquo;
categories: [&amp;ldquo;技术&amp;rdquo;, &amp;ldquo;linux&amp;rdquo;]
date: 2025-03-20T12:59:32+08:00&lt;/p>
&lt;p>draft: false&lt;/p>
&lt;h2 id="tags-linux常用命令">
&lt;a class="header-anchor" href="#tags-linux%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4">&lt;/a>
tags: [&amp;ldquo;linux常用命令&amp;rdquo;]
&lt;/h2>&lt;h3 id="文章目录">
&lt;a class="header-anchor" href="#%e6%96%87%e7%ab%a0%e7%9b%ae%e5%bd%95">&lt;/a>
文章目录
&lt;/h3>&lt;ul>
&lt;li>一、目录操作
&lt;ul>
&lt;li>1、批量操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>二、文件操作&lt;/li>
&lt;li>三、文件内容操作（查看日志，更改配置文件）
&lt;ul>
&lt;li>1、grep(检索文件内容)&lt;/li>
&lt;li>2、awk(数据统计)&lt;/li>
&lt;li>3、sed(替换文件内容)&lt;/li>
&lt;li>4、管道操作符 &lt;code>|&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>四、系统日志位置&lt;/li>
&lt;li>五、创建与删除软连接&lt;/li>
&lt;li>六、压缩和解压缩&lt;/li>
&lt;li>七、Linux下文件的详细信息&lt;/li>
&lt;li>八、常用的docker容器的命令：&lt;/li>
&lt;li>九、运维常用命令
&lt;ul>
&lt;li>1、查看服务器端口号是否可用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十、yum常用命令&lt;/li>
&lt;li>十一、其他命令
&lt;ul>
&lt;li>1、xargs&lt;/li>
&lt;li>2、curl语法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十二、Linux内核优化&lt;/li>
&lt;li>十三、用户权限操作
&lt;ul>
&lt;li>1、用户操作&lt;/li>
&lt;li>2、添加组&lt;/li>
&lt;li>3、sudo用户权限操作&lt;/li>
&lt;li>4、更换文件所有者&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十四、TOP
&lt;ul>
&lt;li>1、统计信息区&lt;/li>
&lt;li>2、进程信息区&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十五、文件安装
&lt;ul>
&lt;li>1、文件下载(lrzsz)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十六、文章PDF版本&lt;/li>
&lt;/ul>
&lt;p>Linux 系统目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Shell" data-lang="Shell">&lt;span class="line">&lt;span class="cl">├── bin -&amp;gt; usr/bin &lt;span class="c1"># 用于存放二进制命令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── boot &lt;span class="c1"># 内核及引导系统程序所在的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── dev &lt;span class="c1"># 所有设备文件的目录（如磁盘、光驱等）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── etc &lt;span class="c1"># 配置文件默认路径、服务启动命令存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── home &lt;span class="c1"># 用户家目录，root用户为/root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lib -&amp;gt; usr/lib &lt;span class="c1"># 32位库文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lib64 -&amp;gt; usr/lib64 &lt;span class="c1"># 64位库文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── media &lt;span class="c1"># 媒体文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── mnt &lt;span class="c1"># 临时挂载设备目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── opt &lt;span class="c1"># 自定义软件安装存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── proc &lt;span class="c1"># 进程及内核信息存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── root &lt;span class="c1"># Root用户家目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── run &lt;span class="c1"># 系统运行时产生临时文件，存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── sbin -&amp;gt; usr/sbin &lt;span class="c1"># 系统管理命令存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── srv &lt;span class="c1"># 服务启动之后需要访问的数据目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── sys &lt;span class="c1"># 系统使用目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tmp &lt;span class="c1"># 临时文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── usr &lt;span class="c1"># 系统命令和帮助文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── var &lt;span class="c1"># 存放内容易变的文件的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">12345678910111213141516171819&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="一目录操作">
&lt;a class="header-anchor" href="#%e4%b8%80%e7%9b%ae%e5%bd%95%e6%93%8d%e4%bd%9c">&lt;/a>
一、目录操作
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Shell" data-lang="Shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">pwd&lt;/span> 查看当前工作目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">clear 清除屏幕
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~ 当前用户目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> / 根目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> - 上一次访问的目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> .. 上一级目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">123456&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>查看目录内信息&lt;/strong>&lt;/p></description></item><item><title>title: "python的os模块使用"</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E4%B8%AD%E7%9A%84os%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E4%B8%AD%E7%9A%84os%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</guid><description>&lt;hr>
&lt;p>title: &amp;ldquo;python的os模块使用&amp;rdquo;&lt;/p>
&lt;p>categories: [&amp;ldquo;技术&amp;rdquo;, &amp;ldquo;编程&amp;rdquo;, &amp;ldquo;python&amp;rdquo;]
date: 2025-03-20T12:59:32+08:00&lt;/p>
&lt;p>draft: false&lt;/p>
&lt;h2 id="tags-os-python-教程">
&lt;a class="header-anchor" href="#tags-os-python-%e6%95%99%e7%a8%8b">&lt;/a>
tags: [&amp;ldquo;os&amp;rdquo;, &amp;ldquo;python&amp;rdquo;, &amp;ldquo;教程&amp;rdquo;]
&lt;/h2>&lt;ul>
&lt;li>os.listdir(path)
获取文件夹下全部文件，的列表&lt;/li>
&lt;li>os.path.join(path1,path2)
将路径path1和路径path2拼接成新的路径，path1//path2&lt;/li>
&lt;li>base_dir = os.path.dirname(os.path.abspath(&lt;strong>file&lt;/strong>))
获取当前文件的绝对路径&lt;/li>
&lt;li>input_file = os.path.join(base_dir, &lt;strong>&amp;quot;../resource/swaggerApi/clinic-ysb-app_OpenAPI.json&amp;quot;&lt;/strong>)&lt;/li>
&lt;/ul></description></item><item><title>title: "测试平台教程"</title><link>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%88%86%E4%BA%AB/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%88%86%E4%BA%AB/</guid><description>&lt;hr>
&lt;p>title: &amp;ldquo;测试平台教程&amp;rdquo;&lt;/p>
&lt;p>categories: [&amp;ldquo;技术&amp;rdquo;, &amp;ldquo;编程&amp;rdquo;, &amp;ldquo;git&amp;rdquo;]&lt;/p>
&lt;p>author: &amp;ldquo;tian&amp;rdquo;&lt;/p>
&lt;p>date: 2025-03-21T12:59:32+08:00&lt;/p>
&lt;p>draft: false&lt;/p>
&lt;h2 id="tags-测试平台-静态网站-教程">
&lt;a class="header-anchor" href="#tags-%e6%b5%8b%e8%af%95%e5%b9%b3%e5%8f%b0-%e9%9d%99%e6%80%81%e7%bd%91%e7%ab%99-%e6%95%99%e7%a8%8b">&lt;/a>
tags: [&amp;ldquo;测试平台&amp;rdquo;, &amp;ldquo;静态网站&amp;rdquo;, &amp;ldquo;教程&amp;rdquo;]
&lt;/h2>&lt;p>一、基本介绍：（）
桌面端工具（一年左右），使用python的wxpython框架编写，使用pyinstaller打包为桌面exe文件；缺点：体积大，不便于分享；&lt;/p>
&lt;p>&lt;img src="./images/image_0fa5b6bdd33056f5c14c2ba21dca4298.png" alt="">&lt;/p>
&lt;p>web端应用（10月初至今）：flask+vue实现；优点，通过脚本实现热更新；链接形式便于分享。&lt;/p>
&lt;p>&lt;img src="./images/image_554bf84092b63f4dfeef955bec300c72.png" alt="">&lt;/p>
&lt;p>二、功能介绍：&lt;/p>
&lt;p>&lt;img src="./images/image_d8f9cc72d69a56ab872809e6e0c32ca7.png" alt="">&lt;/p>
&lt;p>三、技术实现&lt;/p>
&lt;p>测试平台采用前后端分离的方式实现:&lt;/p>
&lt;ol>
&lt;li>后端由flask框架实现；
（1）flask项目结构&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="./images/image_08bf969bb5e6e6a6c2866b5ecd815b9a.png" alt="">&lt;/p>
&lt;p>（2）在项目入口文件中构建接口
Flask：用于创建一个flask应用,app = Flask(&lt;strong>name&lt;/strong>)
CORS:解决跨域问题，cors = CORS(app)
request:接受请求的参数，request.args.get()；phone = request.json[]
jsonify:以json格式返回结果：jsonify({&amp;ldquo;data&amp;rdquo;: res})
接口的基本组成：&lt;/p>
&lt;p>&lt;img src="./images/image_1e0619b874f00563f4df88a914e7b216.png" alt="">&lt;/p>
&lt;p>构建一个接口的基本步骤：
导包：Flask、CORS、request、jsonify
在app.route()装饰器中定义接口的请求类型、url路径
写一个接口函数
获取入参（可选）
get请求 request.args.get()
post请求 request.json[]
对得到的参数进行基本校验：如参数类型校验、字段长度、是否空、鉴权等。
根据传参进行逻辑处理，调用对应功能，得到结果
构建响应头（可选，返回类型是文件时必须）
构建结果，使用jsonify将返回结果构建成一个js （可选）
return结果
启动flask
app.run(ip,port,debug=True),其中debug=True代表以调试模式启动，代码改动后自动重启；debug默认为False。
包的管理 requirements.txt
代码中引入了的包，需要填写在该文件中，格式：“ 包名==版本号”&lt;/p>
&lt;p>&lt;img src="./images/image_ddafd5dad0788c85d978475b2b619b09.png" alt="">&lt;/p>
&lt;p>（3）采用gunnicorn+gevent部署flask项目
介绍：
一个HTTP 服务器，可以增加项目的并发，通常和gevent一起使用。
安装gunicorn和gevent：
pip install gunicorn -i &lt;a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple&lt;/a>
pip install gevent-i &lt;a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple&lt;/a>
配置文件 gunicorn.conf.py
workers = 10 定义同时开启的处理请求的进程数量，根据网站流量适当调整
worker_class = &amp;ldquo;gevent&amp;rdquo; 采用gevent库，支持异步处理请求，提高吞吐量
bind = &amp;ldquo;0.0.0.0:80&amp;rdquo; 监听IP放宽，以便于Docker之间、Docker和宿主机之间的通信,docker部署固定
采用启动服务：
gunicorn flask_index:app -c ./gunicorn.conf.py
注意：Gunicorn只能运行在Linux环境中，不支持windows平台，因此在windows调试的时候不要用这个方式启动flask；
2. 前端：vue 、node.js（前端的包管理工具，类似python的pip包管理工具）、vue-cli（vue项目的脚手架）、element-ui、echats提供页面交互;&lt;/p></description></item><item><title>Transformer的工作原理</title><link>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/transformer%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/transformer%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/</guid><description>&lt;p>Transformer的工作原理&lt;/p>
&lt;p>拿到句子：从前有个国王，他有个女儿&lt;/p>
&lt;p>1.Token化：分词为得到token:从前|有个|国王|，|他|有个|女儿&lt;/p>
&lt;p>2.词嵌入、词向量：将每个token进行向量化（该token和其他对象的关联关系打分）-&amp;gt;转换成一堆数字,例如国王[0.9（权力）,0.8（城堡），0.7（严肃）&amp;hellip;.]，女儿[&amp;hellip;.]&lt;/p>
&lt;p>3.注意力机制：&lt;/p>
&lt;p>​ 编码器处理：分析问题用注意力划重点（如国王和女儿关系等）&lt;/p>
&lt;p>​ 解码器处理：边编故事边查表，用注意力确保连贯，生成内容。&lt;/p>
&lt;p>整体：进入计算-&amp;gt;注意力机制-&amp;gt;计算token与上下文的关系 ，据概率得到新词&lt;/p>
&lt;p>4.不断生成：再将新词进行上述计算，得到下一个新词。像玩文字无限接龙，每次参考所有历史信息，用注意力决定下一步重点。&lt;/p></description></item><item><title>安装</title><link>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/playwright%E7%9A%84python%E6%96%87%E6%A1%A3/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/playwright%E7%9A%84python%E6%96%87%E6%A1%A3/</guid><description>&lt;h1 id="安装">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85">&lt;/a>
安装
&lt;/h1>&lt;h2 id="引言">
&lt;a class="header-anchor" href="#%e5%bc%95%e8%a8%80">&lt;/a>
引言
&lt;/h2>&lt;p>Playwright 是专门为满足端到端测试的需求而创建的。Playwright 支持包括 Chromium、WebKit 和 Firefox 在内的所有现代渲染引擎。在 Windows、Linux 和 macOS 上进行测试，无论是本地还是在 CI 上，无论是无头模式还是有头模式，都可以使用原生移动设备仿真。&lt;/p>
&lt;p>Playwright 库可以用作通用的浏览器自动化工具，为同步和异步 Python 提供了一套强大的 API 来自动化 Web 应用程序。&lt;/p>
&lt;p>本介绍描述了 Playwright Pytest 插件，这是编写端到端测试的推荐方式。&lt;/p>
&lt;p>&lt;strong>你将学到&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>如何安装 Playwright Pytest&lt;/li>
&lt;li>如何运行示例测试&lt;/li>
&lt;/ul>
&lt;h2 id="安装-playwright-pytest">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85-playwright-pytest">&lt;/a>
安装 Playwright Pytest
&lt;/h2>&lt;p>Playwright 建议使用官方的 Playwright Pytest 插件来编写端到端测试。它提供了上下文隔离，并开箱即用地在多个浏览器配置上运行。&lt;/p>
&lt;p>首先，通过安装 Playwright 并运行示例测试来开始，亲眼看看它是如何工作的。&lt;/p>
&lt;ul>
&lt;li>PyPI&lt;/li>
&lt;li>Anaconda&lt;/li>
&lt;/ul>
&lt;p>安装所需的浏览器：&lt;/p>
&lt;h2 id="添加示例测试">
&lt;a class="header-anchor" href="#%e6%b7%bb%e5%8a%a0%e7%a4%ba%e4%be%8b%e6%b5%8b%e8%af%95">&lt;/a>
添加示例测试
&lt;/h2>&lt;p>在当前工作目录或遵循 &lt;code>test_&lt;/code> 前缀约定的子目录中创建一个文件，例如 &lt;code>test_example.py&lt;/code>，并在其中包含以下代码。确保你的测试名称也遵循 &lt;code>test_&lt;/code> 前缀约定。&lt;/p>
&lt;p>test_example.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">playwright.sync_api&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">expect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_has_title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">goto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://playwright.dev/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 期望标题“包含”一个子字符串。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_have_title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Playwright&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_get_started_link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">goto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://playwright.dev/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 点击“开始”链接。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_by_role&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Get started&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 期望页面有一个名为“安装”的标题。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_by_role&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;heading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Installation&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_be_visible&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行示例测试">
&lt;a class="header-anchor" href="#%e8%bf%90%e8%a1%8c%e7%a4%ba%e4%be%8b%e6%b5%8b%e8%af%95">&lt;/a>
运行示例测试
&lt;/h2>&lt;p>默认情况下，测试将在 Chromium 上运行。这可以通过 CLI 选项进行配置。测试以无头模式运行，这意味着在运行测试时不会打开浏览器 UI。测试结果和测试日志将在终端中显示。&lt;/p></description></item><item><title>背景</title><link>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/pytest%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%96%B9%E6%A1%88/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/pytest%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%96%B9%E6%A1%88/</guid><description>&lt;h2 id="背景">
&lt;a class="header-anchor" href="#%e8%83%8c%e6%99%af">&lt;/a>
背景
&lt;/h2>&lt;p>当前业务核心聚焦于 POCT 领域，设备购买和设备使用等关键功能，已成为测试工作的重点保障对象，但随着系统复杂度的提升,手工的回归测试工作很难全面覆盖。为了确保关键业务功能的质量稳定性，有必要引入自动化测试，增加测试覆盖范围，降低已有功能漏测的风险，提前发现问题。&lt;/p>
&lt;hr>
&lt;h2 id="目标">
&lt;a class="header-anchor" href="#%e7%9b%ae%e6%a0%87">&lt;/a>
目标
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>短期目标：接入自动化测试（截至3月底）&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>前期准备工作
&lt;ul>
&lt;li>预研不同的自动化测试框架，结合中长期目标与现实情况及各个框架的优缺点选择一套合适的自动化框架
&lt;ul>
&lt;li>对比几款常见接口测试框架&lt;/li>
&lt;li>初步选定：pytest + Requests
&lt;ul>
&lt;li>语法简洁容易上手-接入成本低&lt;/li>
&lt;li>灵活，社区支持好，插件丰富-适合复杂测试场景&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>制定初步的方案&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自动化项目方案
&lt;ul>
&lt;li>项目框架搭建&lt;/li>
&lt;li>确定实施方案&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试人员小范围接入自动化项目（跑通流程）
&lt;ul>
&lt;li>三月底能够将三款新设备正向检测流程转化为自动化测试脚本
&lt;ul>
&lt;li>**将慢病设备下单-上传检测结果流程；快速检测单流程接入接口自动化测试（正向检测流程）&lt;/li>
&lt;li>**将免疫、血球设备下单-上传检测结果（正向检测流程）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>中期目标&lt;/strong> ：&lt;strong>自动化项目应用到测试工作流程（截至6月底）&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>覆盖三款新设备装机到检测使用的全部场景&lt;/p>
&lt;ul>
&lt;li>覆盖设备装机到检测过程中的各项操作步骤和关键节点，从设备初始化到实际检测，确保各环节功能正常，数据交互准确，为用户提供稳定可靠的设备使用体验（包括异常流程）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>将自动化流程应用到测试工作流程。&lt;/p>
&lt;ul>
&lt;li>能有效增加测试覆盖率，减少漏测风险。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>脚本的维护流程&lt;/p>
&lt;ul>
&lt;li>在接口变更，需求功能更改后如何维护&lt;/li>
&lt;li>运行失败用例如何维护&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>长期目标：不断完善接口自动化，有效应用到研发测试工作流程（截至12月底）&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>完善涉及用户相关的功能的自动化测试覆盖
&lt;ul>
&lt;li>对从商城购买到设备装机、检测、报告生成打印及检测后的慢病管理，全流程自动化测试，保障用户使用系统过程中的顺畅性，避免因流程问题导致的交易失败或用户体验不佳情况。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将自动化测试无缝应用到现有的研发测试工作流程中。&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>替代大部分回归测试，提高测试效率，进一步减少漏测风险。&lt;/li>
&lt;li>自动化测试成为常态化测试手段,能提前发现问题,有效提升整体工作效率。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;/li>
&lt;/ol>
&lt;h2 id="自动化测试工具选型">
&lt;a class="header-anchor" href="#%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95%e5%b7%a5%e5%85%b7%e9%80%89%e5%9e%8b">&lt;/a>
&lt;strong>自动化测试工具选型&lt;/strong>
&lt;/h2>&lt;ul>
&lt;li>自动化测试框架-pytest + Requests
&lt;ul>
&lt;li>
&lt;p>几款常见接口测试框架对比详情：&lt;/p>
&lt;p>&lt;img src="https://bluespace3.github.io/images/pytest%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%96%B9%E6%A1%88/1743173315631.png" alt="1743173315631">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>pytest + Requests&lt;/p>
&lt;ul>
&lt;li>语法简洁容易上手-接入成本低&lt;/li>
&lt;li>灵活，社区支持好，插件丰富-适合复杂测试场景&lt;/li>
&lt;li>已有相关基础&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>选型依据
　　兼容性、适合复杂流程交互（设备交互）、丰富的社区支持、接入成本&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试管理工具（飞书或tapd）
&lt;ul>
&lt;li>自动化用例管理&lt;a href="https://guangpuyun.feishu.cn/base/XG9ZbshkeaG2NYsdUb5cOYaQnBg?from=from_copylink">接口自动化测试用例&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CI/CD工具&lt;/li>
&lt;li>GitLab CI&lt;/li>
&lt;li>uvicorn+fastapi
&lt;ul>
&lt;li>部署+接口&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="自动化测试用例设计">
&lt;a class="header-anchor" href="#%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b%e8%ae%be%e8%ae%a1">&lt;/a>
&lt;strong>自动化测试用例设计&lt;/strong>
&lt;/h2>&lt;ol>
&lt;li>用例分层设计
&lt;ol>
&lt;li>基础类（/api）
&lt;ul>
&lt;li>根据接口文档生成&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试用例（/tests）
&lt;ul>
&lt;li>基础功能用例（原子级-单个接口测试）
&lt;ul>
&lt;li>&lt;strong>定义&lt;/strong> ：针对单个接口的独立测试，关注接口的输入输出正确性、异常处理能力及边界条件验证。例如，用户登录接口的独立测试需覆盖正常登录、密码错误、账号不存在等场景&lt;/li>
&lt;li>&lt;strong>特点&lt;/strong> ：&lt;/li>
&lt;li>&lt;strong>原子性&lt;/strong> ：每个用例仅验证一个接口的单一功能，不依赖其他接口或业务流程。&lt;/li>
&lt;li>&lt;strong>高复用性&lt;/strong> ：可作为其他复杂用例的构建单元，例如登录接口的测试结果可被后续业务流程用例复用&lt;/li>
&lt;li>&lt;strong>技术实现&lt;/strong> ：通常结合数据驱动设计（如参数化测试数据），通过多组输入数据覆盖等价类和边界值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>业务流程用例（端到端、涉及多个接口和流程的测试）
&lt;ul>
&lt;li>&lt;strong>定义&lt;/strong> ：模拟真实用户操作路径，串联多个接口验证端到端业务逻辑。例如“创建商品→创建优惠券→创建活动→下单支付”的全流程测试&lt;/li>
&lt;li>&lt;strong>特点&lt;/strong> ：&lt;/li>
&lt;li>&lt;strong>场景化&lt;/strong> ：基于用户使用的功能场景设计，关注接口间的数据传递与状态流转。&lt;/li>
&lt;li>&lt;strong>风险覆盖&lt;/strong> ：重点验证流程中的关键节点（如订单状态变更、库存扣减）和异常分支（如支付超时回滚）&lt;/li>
&lt;li>&lt;strong>依赖管理&lt;/strong> ：通过关键字驱动设计（如“获取Token”“查询订单状态”）复用基础功能用例，降低冗余代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>测试数据（/data）
&lt;ul>
&lt;li>存放测试数据&lt;/li>
&lt;li>提供测试数据的脚本&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>工具(/utils)
&lt;ul>
&lt;li>工具类集合&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>数据驱动设计&lt;/li>
&lt;/ol>
&lt;p>　　参数化测试数据（Excel、csv、数据库）&lt;/p></description></item><item><title>编程语言测试</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/test-python/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/test-python/</guid><description>&lt;h1 id="编程语言测试">
&lt;a class="header-anchor" href="#%e7%bc%96%e7%a8%8b%e8%af%ad%e8%a8%80%e6%b5%8b%e8%af%95">&lt;/a>
编程语言测试
&lt;/h1>&lt;p>测试在子目录中的文件处理。&lt;/p>
&lt;h2 id="测试内容">
&lt;a class="header-anchor" href="#%e6%b5%8b%e8%af%95%e5%86%85%e5%ae%b9">&lt;/a>
测试内容
&lt;/h2>&lt;p>验证 Python 脚本能否正确处理多层目录结构。&lt;/p></description></item><item><title>大模型概述笔记</title><link>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%A6%82%E8%BF%B0%E7%AC%94%E8%AE%B0/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%A4%A7%E6%A8%A1%E5%9E%8B%E6%A6%82%E8%BF%B0%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>大模型概述笔记&lt;/p>
&lt;p>AGI:通用人工智能，能模拟人类抽象推理，因果理解等能力，解决未知环境的复杂问题，是人工智能的终极目标之一。大模型是AI发展的里程碑，也是实现AGI的重要步骤。&lt;/p></description></item><item><title>构建fastapi步骤</title><link>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E6%9E%84%E5%BB%BAfastapi+vue%E9%A1%B9%E7%9B%AEdockerfile/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E6%9E%84%E5%BB%BAfastapi+vue%E9%A1%B9%E7%9B%AEdockerfile/</guid><description>&lt;h3 id="构建fastapi步骤">
&lt;a class="header-anchor" href="#%e6%9e%84%e5%bb%bafastapi%e6%ad%a5%e9%aa%a4">&lt;/a>
构建fastapi步骤
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="mf">1.&lt;/span>&lt;span class="err">在&lt;/span>&lt;span class="n">fast_api项目下&lt;/span>&lt;span class="err">，创建文件&lt;/span>&lt;span class="n">gunicorn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">py&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">其内容如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">workers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span> &lt;span class="c1"># 定义同时开启的处理请求的进程数量，根据网站流量适当调整&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">worker_class&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;gevent&amp;#34;&lt;/span> &lt;span class="c1"># 采用gevent库，支持异步处理请求，提高吞吐量&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">bind&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0.0.0.0:80&amp;#34;&lt;/span> &lt;span class="c1"># 监听IP放宽，以便于Docker之间、Docker和宿主机之间的通信&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">2.&lt;/span>&lt;span class="n">python依赖存于项目requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt文件内&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">3.&lt;/span>&lt;span class="n">fast_api项目下&lt;/span>&lt;span class="err">，构建&lt;/span>&lt;span class="n">Dockerfile&lt;/span>&lt;span class="err">，其内容如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FROM&lt;/span> &lt;span class="n">python&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">3.7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WORKDIR&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">app&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">COPY&lt;/span> &lt;span class="n">requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span> &lt;span class="o">./&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RUN&lt;/span> &lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">no&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dir&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="n">requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">pypi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tuna&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tsinghua&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">edu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cn&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">COPY&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;gunicorn&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;fast_api:app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;./gunicorn.conf.py&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">4.&lt;/span>&lt;span class="n">fast_api项目根目录终端&lt;/span>&lt;span class="err">，执行：&lt;/span> &lt;span class="n">docker&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">tools_flask&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="err">打包为镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#此处的fast_api为后端项目文件名称含fastapi的实现逻辑，注意文件名不要用“api.py”与已有模块冲突，运行不起来。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">5.&lt;/span>&lt;span class="err">运行&lt;/span>&lt;span class="n">docker&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">dit&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="mi">5000&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">80&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="n">tools&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">flask&lt;/span> &lt;span class="n">tools_flask&lt;/span> &lt;span class="err">启动为容器&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dockerfile内容">
&lt;a class="header-anchor" href="#dockerfile%e5%86%85%e5%ae%b9">&lt;/a>
&lt;strong>dockerfile内容&lt;/strong>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">FROM&lt;/span> &lt;span class="n">python&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">3.9&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WORKDIR&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">src&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">app&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">tools&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">tools_flask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ENV&lt;/span> &lt;span class="n">TZ&lt;/span> &lt;span class="n">Asia&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">Shanghai&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RUN&lt;/span> &lt;span class="n">ln&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">fs&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">share&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">zoneinfo&lt;/span>&lt;span class="o">/$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">TZ&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">localtime&lt;/span> \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">echo&lt;/span> &lt;span class="o">$&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">TZ&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">timezone&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">COPY&lt;/span> &lt;span class="n">requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span> &lt;span class="o">./&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">RUN&lt;/span> &lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">no&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dir&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="n">requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="n">https&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">pypi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tuna&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tsinghua&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">edu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cn&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">COPY&lt;/span> &lt;span class="o">.&lt;/span> &lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;uvicorn&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;fastapi_index:app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--host&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;0.0.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;--port&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;80&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="构建vue的步骤">
&lt;a class="header-anchor" href="#%e6%9e%84%e5%bb%bavue%e7%9a%84%e6%ad%a5%e9%aa%a4">&lt;/a>
&lt;strong>构建vue的步骤&lt;/strong>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="mf">1.&lt;/span>&lt;span class="err">在项目&lt;/span>&lt;span class="n">tools_vue根目录&lt;/span>&lt;span class="err">，创建&lt;/span>&lt;span class="n">nginx夹&lt;/span>&lt;span class="err">，该文件夹下新建文件&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="err">。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf内容如下&lt;/span>&lt;span class="err">：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">server_name&lt;/span> &lt;span class="n">localhost&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#charset koi8-r;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">access_log&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">host&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">access&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">error_log&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">location&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">root&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">share&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">index&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">html&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">htm&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#error_page 404 /404.html;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># redirect server error pages to the static page /50x.html&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">error_page&lt;/span> &lt;span class="mi">500&lt;/span> &lt;span class="mi">502&lt;/span> &lt;span class="mi">503&lt;/span> &lt;span class="mi">504&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">location&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="mi">50&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">html&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">root&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">share&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">2.&lt;/span>&lt;span class="n">tools_vue项目根目录终端&lt;/span>&lt;span class="err">，执行&lt;/span>&lt;span class="n">npm&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="err">，打包生成&lt;/span>&lt;span class="n">dist文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">3.&lt;/span>&lt;span class="err">在项目&lt;/span>&lt;span class="n">tools_vue根目录构建Dockerfile文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">FROM&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">COPY&lt;/span> &lt;span class="n">dist&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">share&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">efctools&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">COPY&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">conf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">conf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">4.&lt;/span>&lt;span class="n">tools_vue项目根目录终端&lt;/span>&lt;span class="err">，执行：&lt;/span> &lt;span class="n">docker&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">tools_vue2&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="err">打包为镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mf">5.&lt;/span>&lt;span class="err">运行&lt;/span>&lt;span class="n">docker&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="mi">3002&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">80&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">name&lt;/span> &lt;span class="n">tools&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">vue&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">v2&lt;/span> &lt;span class="n">tools_vue2&lt;/span> &lt;span class="err">启动为容器&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="dockerfile内容-1">
&lt;a class="header-anchor" href="#dockerfile%e5%86%85%e5%ae%b9-1">&lt;/a>
dockerfile内容
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">FROM nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">COPY dist/ /usr/share/nginx/html/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">COPY nginx/default.conf /etc/nginx/conf.d/default.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>回滚到指定提交</title><link>https://bluespace3.github.io/post/git/git%E6%93%8D%E4%BD%9C/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/git/git%E6%93%8D%E4%BD%9C/</guid><description>&lt;h4 id="回滚到指定提交">
&lt;a class="header-anchor" href="#%e5%9b%9e%e6%bb%9a%e5%88%b0%e6%8c%87%e5%ae%9a%e6%8f%90%e4%ba%a4">&lt;/a>
回滚到指定提交
&lt;/h4>&lt;ol>
&lt;li>git reset &amp;ndash;hard c1ac53850b0314a20e97f669bafc8bb67a3a1124&lt;/li>
&lt;li>git push&lt;/li>
&lt;/ol>
&lt;h4 id="放弃变更强制提交">
&lt;a class="header-anchor" href="#%e6%94%be%e5%bc%83%e5%8f%98%e6%9b%b4%e5%bc%ba%e5%88%b6%e6%8f%90%e4%ba%a4">&lt;/a>
放弃变更强制提交
&lt;/h4>&lt;ul>
&lt;li>git reset &amp;ndash;hard ; git pull &amp;ndash;force&lt;/li>
&lt;/ul>
&lt;h4 id="子模块的使用">
&lt;a class="header-anchor" href="#%e5%ad%90%e6%a8%a1%e5%9d%97%e7%9a%84%e4%bd%bf%e7%94%a8">&lt;/a>
子模块的使用
&lt;/h4>&lt;p>&lt;img src="https://bluespace3.github.io/images/361743670309_.pic.jpg" alt="子模块使用">&lt;/p></description></item><item><title>机器学习</title><link>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</guid><description>&lt;p>机器学习&lt;/p>
&lt;p>步骤：&lt;/p>
&lt;p>准备历史数据-&amp;gt;创建模型并训练历史数据-&amp;gt;新数据输入预测结果&lt;/p>
&lt;p>机器学习的分类：&lt;/p>
&lt;p>监督学习：数据带结果/标签&lt;/p>
&lt;p>无监督学习：一大堆没有标签结果，让机器自行分类检测。&lt;/p>
&lt;p>自监督学习：无需人工标注，通过数据本身结果生成伪标签或辅助任务(通常办法)&lt;/p>
&lt;p>强化学习：不断尝试和环境互动得到的反馈改变行为做出最有决策AIRgo。&lt;/p>
&lt;p>模型训练的3大阶段&lt;/p>
&lt;p>1.预训练-&amp;gt;海量无标注的文本，进行自监督学习。&lt;/p>
&lt;p>2.SFT监督微调。-&amp;gt;使用有标注的数据对基座模型进行微调，让模型能够适用特定任务，最终得到一个有偏好的模型。&lt;/p>
&lt;p>3.RLHF强化学习，-&amp;gt;基于人类反馈的期望进行学习(奖励模型)。&lt;/p></description></item><item><title>量化交易策略知识库</title><link>https://bluespace3.github.io/post/quant_trading/strategy/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/quant_trading/strategy/</guid><description>&lt;h1 id="量化交易策略知识库">
&lt;a class="header-anchor" href="#%e9%87%8f%e5%8c%96%e4%ba%a4%e6%98%93%e7%ad%96%e7%95%a5%e7%9f%a5%e8%af%86%e5%ba%93">&lt;/a>
量化交易策略知识库
&lt;/h1>&lt;h2 id="核心策略">
&lt;a class="header-anchor" href="#%e6%a0%b8%e5%bf%83%e7%ad%96%e7%95%a5">&lt;/a>
核心策略
&lt;/h2>&lt;p>本系统采用多因子综合评分策略，结合技术面、基本面和消息面分析。&lt;/p>
&lt;h3 id="技术面分析指标">
&lt;a class="header-anchor" href="#%e6%8a%80%e6%9c%af%e9%9d%a2%e5%88%86%e6%9e%90%e6%8c%87%e6%a0%87">&lt;/a>
技术面分析指标
&lt;/h3>&lt;ul>
&lt;li>MACD指标：判断趋势转折点&lt;/li>
&lt;li>RSI指标：判断超买超卖状态&lt;/li>
&lt;li>KDJ指标：判断股价趋势&lt;/li>
&lt;li>布林带：判断价格波动区间&lt;/li>
&lt;li>成交量分析：确认价格变动的有效性&lt;/li>
&lt;/ul>
&lt;h3 id="基本面分析要素">
&lt;a class="header-anchor" href="#%e5%9f%ba%e6%9c%ac%e9%9d%a2%e5%88%86%e6%9e%90%e8%a6%81%e7%b4%a0">&lt;/a>
基本面分析要素
&lt;/h3>&lt;ul>
&lt;li>财务指标分析：盈利能力、偿债能力、运营能力&lt;/li>
&lt;li>行业地位评估：市场份额、竞争优势&lt;/li>
&lt;li>盈利能力评估：营收增长、利润增长&lt;/li>
&lt;/ul>
&lt;h3 id="消息面分析方法">
&lt;a class="header-anchor" href="#%e6%b6%88%e6%81%af%e9%9d%a2%e5%88%86%e6%9e%90%e6%96%b9%e6%b3%95">&lt;/a>
消息面分析方法
&lt;/h3>&lt;ul>
&lt;li>新闻情感分析：判断市场情绪&lt;/li>
&lt;li>政策影响评估：分析政策对行业的影响&lt;/li>
&lt;li>市场情绪监控：跟踪市场热点和资金流向&lt;/li>
&lt;/ul></description></item><item><title>什么是Hugo？</title><link>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/hugo%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/hugo%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid><description>&lt;h2 id="什么是hugo">
&lt;a class="header-anchor" href="#%e4%bb%80%e4%b9%88%e6%98%afhugo">&lt;/a>
什么是Hugo？
&lt;/h2>&lt;p>Hugo是一个用Go语言编写的快速、现代的静态网站生成器。它可以将Markdown文件转换为HTML页面，非常适合构建文档网站、博客等。&lt;/p>
&lt;h2 id="hugo的主要特点">
&lt;a class="header-anchor" href="#hugo%e7%9a%84%e4%b8%bb%e8%a6%81%e7%89%b9%e7%82%b9">&lt;/a>
Hugo的主要特点
&lt;/h2>&lt;ul>
&lt;li>极快的构建速度&lt;/li>
&lt;li>丰富的主题支持&lt;/li>
&lt;li>简单的Markdown内容管理&lt;/li>
&lt;li>强大的模板系统&lt;/li>
&lt;li>内置的短代码功能&lt;/li>
&lt;/ul>
&lt;h2 id="安装hugo">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85hugo">&lt;/a>
安装Hugo
&lt;/h2>&lt;p>在Windows上安装Hugo的步骤：&lt;/p>
&lt;ol>
&lt;li>下载Hugo的Windows版本&lt;/li>
&lt;li>解压到指定目录&lt;/li>
&lt;li>将Hugo的可执行文件路径添加到系统环境变量&lt;/li>
&lt;/ol>
&lt;h2 id="创建新站点">
&lt;a class="header-anchor" href="#%e5%88%9b%e5%bb%ba%e6%96%b0%e7%ab%99%e7%82%b9">&lt;/a>
创建新站点
&lt;/h2>&lt;p>使用以下命令创建一个新的Hugo站点：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new site mydocs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下载插件">
&lt;a class="header-anchor" href="#%e4%b8%8b%e8%bd%bd%e6%8f%92%e4%bb%b6">&lt;/a>
下载插件
&lt;/h2>&lt;h2 id="添加内容">
&lt;a class="header-anchor" href="#%e6%b7%bb%e5%8a%a0%e5%86%85%e5%ae%b9">&lt;/a>
添加内容
&lt;/h2>&lt;p>在content目录下创建Markdown文件来添加内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new blog/my-first-post.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行开发服务器">
&lt;a class="header-anchor" href="#%e8%bf%90%e8%a1%8c%e5%bc%80%e5%8f%91%e6%9c%8d%e5%8a%a1%e5%99%a8">&lt;/a>
运行开发服务器
&lt;/h2>&lt;p>使用以下命令启动开发服务器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server -D --environment development &lt;span class="c1">#如果未设置环境变量则不需要指定环境。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="部署网站">
&lt;a class="header-anchor" href="#%e9%83%a8%e7%bd%b2%e7%bd%91%e7%ab%99">&lt;/a>
部署网站
&lt;/h2>&lt;p>使用以下命令生成静态文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>然后将public目录下的文件部署到Web服务器即可，注意每次推送前运行hugo更新public文件夹&lt;/li>
&lt;li>若有更新域名，请删除public后，再运行hugo重新生成public，否则会出现路由错误的情况。&lt;/li>
&lt;li>为了方便新建.sh脚本文件，命名为.command.sh&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 判断是否已初始化Git仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -d &lt;span class="s2">&amp;#34;.git&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;未检测到Git仓库，正在初始化...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Git仓库已初始化&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建.gitignore文件，排除不需要版本控制的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; .gitignore &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">resources/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">.DS_Store
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">node_modules/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">.hugo_build.lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加所有文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 提交更改&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;更新博客&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 检查是否已关联远程仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">REMOTE_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>git remote get-url origin 2&amp;gt;/dev/null&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$REMOTE_URL&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;未检测到远程仓库，正在添加...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git remote add origin https://github.com/bluespace3/bluespace3.github.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;已关联远程仓库：&lt;/span>&lt;span class="nv">$REMOTE_URL&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 推送到GitHub&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main --force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>终端运行 ..command.sh&lt;/li>
&lt;/ol>
&lt;h2 id="更新维护">
&lt;a class="header-anchor" href="#%e6%9b%b4%e6%96%b0%e7%bb%b4%e6%8a%a4">&lt;/a>
更新维护
&lt;/h2>&lt;p>后期维护有许多要留意的地方否则容易踩坑。&lt;/p></description></item><item><title>什么是MCP？</title><link>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/mcp-intro/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/mcp-intro/</guid><description>&lt;h2 id="什么是mcp">
&lt;a class="header-anchor" href="#%e4%bb%80%e4%b9%88%e6%98%afmcp">&lt;/a>
什么是MCP？
&lt;/h2>&lt;p>MCP（Model Context Protocol）是一种用于扩展和增强开发工具功能的协议。它允许开发者创建和使用MCP服务器，这些服务器可以提供额外的工具和资源，以提高开发效率和灵活性。&lt;/p>
&lt;h2 id="mcp的安装">
&lt;a class="header-anchor" href="#mcp%e7%9a%84%e5%ae%89%e8%a3%85">&lt;/a>
MCP的安装
&lt;/h2>&lt;p>MCP的安装通常包括以下步骤：&lt;/p>
&lt;ol>
&lt;li>安装MCP客户端：根据使用的开发工具，安装相应的MCP客户端插件或扩展。&lt;/li>
&lt;li>创建MCP服务器：使用提供的工具或模板创建一个新的MCP服务器项目。&lt;/li>
&lt;li>配置MCP服务器：在MCP服务器项目中添加所需的工具和资源，并进行相应的配置。&lt;/li>
&lt;li>运行MCP服务器：启动MCP服务器，使其与MCP客户端进行通信。&lt;/li>
&lt;/ol>
&lt;h2 id="使用示例">
&lt;a class="header-anchor" href="#%e4%bd%bf%e7%94%a8%e7%a4%ba%e4%be%8b">&lt;/a>
使用示例
&lt;/h2>&lt;p>以下是一个简单的MCP服务器使用示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="err">#&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="err">/usr/bin/env node&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Server&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@modelcontextprotocol/sdk/server/index.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">StdioServerTransport&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@modelcontextprotocol/sdk/server/stdio.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">server&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Server&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;example-mcp-server&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">version&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;0.1.0&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">capabilities&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tools&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exampleTool&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;这是一个示例工具&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inputSchema&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;要显示的消息&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setRequestHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;exampleTool&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">content&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`您输入的消息是：&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">transport&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">StdioServerTransport&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">await&lt;/span> &lt;span class="nx">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">transport&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MCP服务器正在运行&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="热门mcp工具推荐">
&lt;a class="header-anchor" href="#%e7%83%ad%e9%97%a8mcp%e5%b7%a5%e5%85%b7%e6%8e%a8%e8%8d%90">&lt;/a>
热门MCP工具推荐
&lt;/h2>&lt;p>以下是一些目前热门的MCP工具：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>代码生成工具&lt;/strong>：根据项目需求自动生成代码模板和结构，提高开发效率。&lt;/li>
&lt;li>&lt;strong>API文档生成工具&lt;/strong>：自动从代码中提取API信息并生成详细的文档，方便团队成员查阅。&lt;/li>
&lt;li>&lt;strong>代码质量检查工具&lt;/strong>：对代码进行静态分析，检查潜在的错误和问题，提高代码质量。&lt;/li>
&lt;li>&lt;strong>自动化测试工具&lt;/strong>：自动生成和执行测试用例，确保代码的正确性和稳定性。&lt;/li>
&lt;/ul>
&lt;p>通过使用这些热门MCP工具，开发者可以大大提高开发效率和代码质量，更好地完成项目开发任务。&lt;/p>
&lt;h2 id="总结">
&lt;a class="header-anchor" href="#%e6%80%bb%e7%bb%93">&lt;/a>
总结
&lt;/h2>&lt;p>MCP是一种强大的开发工具扩展协议，可以帮助开发者创建和使用各种工具和资源。通过本指南，您已经了解了MCP的基本使用方法，接下来可以探索更多高级功能和热门工具。&lt;/p></description></item><item><title>什么是pytest？</title><link>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/pytest-intro/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/pytest-intro/</guid><description>&lt;h2 id="什么是pytest">
&lt;a class="header-anchor" href="#%e4%bb%80%e4%b9%88%e6%98%afpytest">&lt;/a>
什么是pytest？
&lt;/h2>&lt;p>pytest是一个功能强大且易于使用的Python测试框架。它可以帮助开发者编写简洁、可读性强的测试代码，并提供丰富的插件支持。&lt;/p>
&lt;h2 id="pytest的主要特点">
&lt;a class="header-anchor" href="#pytest%e7%9a%84%e4%b8%bb%e8%a6%81%e7%89%b9%e7%82%b9">&lt;/a>
pytest的主要特点
&lt;/h2>&lt;ul>
&lt;li>简洁的测试用例编写方式&lt;/li>
&lt;li>自动发现测试用例&lt;/li>
&lt;li>支持参数化测试&lt;/li>
&lt;li>强大的断言功能&lt;/li>
&lt;li>丰富的插件生态系统&lt;/li>
&lt;/ul>
&lt;h2 id="安装pytest">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85pytest">&lt;/a>
安装pytest
&lt;/h2>&lt;p>使用以下命令安装pytest：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install pytest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编写测试用例">
&lt;a class="header-anchor" href="#%e7%bc%96%e5%86%99%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b">&lt;/a>
编写测试用例
&lt;/h2>&lt;p>一个简单的pytest测试用例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_addition&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_subtraction&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行测试">
&lt;a class="header-anchor" href="#%e8%bf%90%e8%a1%8c%e6%b5%8b%e8%af%95">&lt;/a>
运行测试
&lt;/h2>&lt;p>使用以下命令运行pytest测试：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pytest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="参数化测试">
&lt;a class="header-anchor" href="#%e5%8f%82%e6%95%b0%e5%8c%96%e6%b5%8b%e8%af%95">&lt;/a>
参数化测试
&lt;/h2>&lt;p>pytest支持参数化测试，可以使用&lt;code>@pytest.mark.parametrize&lt;/code>装饰器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pytest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@pytest.mark.parametrize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test_input,expected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;3+5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2+4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;6*9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_input&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">expected&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">expected&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="总结">
&lt;a class="header-anchor" href="#%e6%80%bb%e7%bb%93">&lt;/a>
总结
&lt;/h2>&lt;p>pytest是一个功能强大且易于使用的Python测试框架，可以帮助开发者编写简洁、可读性强的测试代码。通过本指南，您已经了解了pytest的基本使用方法，接下来可以探索更多高级功能。&lt;/p></description></item><item><title>使用 GitHub 作为免费图床的文档</title><link>https://bluespace3.github.io/post/git/%E4%BD%BF%E7%94%A8gihub%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/git/%E4%BD%BF%E7%94%A8gihub%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</guid><description>&lt;h2 id="使用-github-作为免费图床的文档">
&lt;a class="header-anchor" href="#%e4%bd%bf%e7%94%a8-github-%e4%bd%9c%e4%b8%ba%e5%85%8d%e8%b4%b9%e5%9b%be%e5%ba%8a%e7%9a%84%e6%96%87%e6%a1%a3">&lt;/a>
使用 GitHub 作为免费图床的文档
&lt;/h2>&lt;p>最近就想找一款免费的图床来放置自己的图片，逛了一圈下来发现GitHub可以白嫖，于是乎，就有了这篇文章。&lt;/p>
&lt;p>GitHub 是一个非常流行的代码托管平台，除了代码存储外，你还可以使用 GitHub 来托管静态资源，比如图片。通过将图片上传到 GitHub 的仓库，你可以轻松获取图片的 URL，从而在网页或文档中嵌入这些图片。以下是如何使用 GitHub 作为免费图床的详细步骤。&lt;/p>
&lt;h3 id="步骤-1-创建-github-仓库">
&lt;a class="header-anchor" href="#%e6%ad%a5%e9%aa%a4-1-%e5%88%9b%e5%bb%ba-github-%e4%bb%93%e5%ba%93">&lt;/a>
步骤 1: 创建 GitHub 仓库
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>登录到 &lt;a href="https://github.com/">GitHub&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击右上角的 &amp;ldquo;+&amp;rdquo; 按钮，然后选择 &amp;ldquo;New repository&amp;rdquo;。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>填写仓库的名称（例如：&lt;code>my-image-hosting&lt;/code>），并设置为公开（Public）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击 &amp;ldquo;Create repository&amp;rdquo; 创建仓库。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-cdd72cbacf64cf512b0426eb2362d3e6_1440w.jpg" alt="">&lt;/p>
&lt;h3 id="步骤-2-github获取个人的token">
&lt;a class="header-anchor" href="#%e6%ad%a5%e9%aa%a4-2-github%e8%8e%b7%e5%8f%96%e4%b8%aa%e4%ba%ba%e7%9a%84token">&lt;/a>
步骤 2: GitHub获取个人的Token
&lt;/h3>&lt;ol>
&lt;li>访问：&lt;a href="https://github.com/settings/tokens">settings-tokens&lt;/a> ，点击&lt;strong>Generate new token&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://picx.zhimg.com/v2-2148c04aa5bc07ccea01b2273ba65033_1440w.jpg" alt="">&lt;/p>
&lt;p>2.设置 token 属性 ，Expiration：永不过期，Select scopes：&lt;code>repo&lt;/code> 一定要全选，其他的无所谓 ，点击最下方&lt;strong>创建&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://pica.zhimg.com/v2-ef2f47f1c64e0b095e040cf103ea8b62_1440w.jpg" alt="">&lt;/p>
&lt;ol>
&lt;li>就会获得一个token字符串， &lt;strong>⚠️ 注意：一定要收藏好 token，因为只会显示一次！&lt;/strong>，关掉这个页面就再也看不见了。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!IMPORTANT] &lt;strong>后续会继续使用这个token!!!!&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://pica.zhimg.com/v2-7efb7778246d4e3964471f46c290f790_1440w.jpg" alt="">&lt;/p>
&lt;h3 id="步骤-3-下载picgo">
&lt;a class="header-anchor" href="#%e6%ad%a5%e9%aa%a4-3-%e4%b8%8b%e8%bd%bdpicgo">&lt;/a>
步骤 3: 下载PicGo
&lt;/h3>&lt;ol>
&lt;li>在PicGo最新页面上下载它的安装包。&lt;a href="https://github.com/Molunerfinn/PicGo/releases">PicGo下载页面&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://picx.zhimg.com/v2-4e1070ec6988ea104dd9f339af322d4b_1440w.jpg" alt="">&lt;/p>
&lt;ol>
&lt;li>
&lt;p>安装PicGo。无需赘述&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置GitHub&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://picx.zhimg.com/v2-86772b08f48e060e991b724d7d11b677_1440w.jpg" alt="">&lt;/p>
&lt;p>​&lt;/p>
&lt;ol>
&lt;li>&lt;strong>PicGo 上传区配置选中你的配置&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://pic4.zhimg.com/v2-01a76c0126a75365b9bdc2e2163edda7_1440w.jpg" alt="">&lt;/p></description></item><item><title>提示词技巧</title><link>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8A%80%E5%B7%A7/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/aigc%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8A%80%E5%B7%A7/</guid><description>&lt;p>提示词技巧
总结：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/bluespace3/images/master/20250329152414.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/bluespace3/images/master/20250329153529.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/bluespace3/images/master/20250329153627.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/bluespace3/images/master/20250329153708.png" alt="">
&lt;img src="https://raw.githubusercontent.com/bluespace3/images/master/20250329153716.png" alt="">&lt;/p>
&lt;p>官方提示词库：
&lt;a href="https://api-docs.deepseek.com/zh-cn/prompt-library">https://api-docs.deepseek.com/zh-cn/prompt-library&lt;/a>&lt;/p></description></item><item><title>系统设计与开发者文档</title><link>https://bluespace3.github.io/post/quant_trading/system_design/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/quant_trading/system_design/</guid><description>&lt;h1 id="系统设计与开发者文档">
&lt;a class="header-anchor" href="#%e7%b3%bb%e7%bb%9f%e8%ae%be%e8%ae%a1%e4%b8%8e%e5%bc%80%e5%8f%91%e8%80%85%e6%96%87%e6%a1%a3">&lt;/a>
系统设计与开发者文档
&lt;/h1>&lt;p>本文档为量化交易系统的核心开发者提供全面的技术参考，涵盖了系统架构、核心模块、API接口、部署运维以及未来的发展规划。&lt;/p>
&lt;h2 id="1-系统架构">
&lt;a class="header-anchor" href="#1-%e7%b3%bb%e7%bb%9f%e6%9e%b6%e6%9e%84">&lt;/a>
1. 系统架构
&lt;/h2>&lt;p>本系统采用模块化设计，主要由数据层、分析层、策略层和应用层组成。&lt;/p>
&lt;h3 id="11-核心模块">
&lt;a class="header-anchor" href="#11-%e6%a0%b8%e5%bf%83%e6%a8%a1%e5%9d%97">&lt;/a>
1.1. 核心模块
&lt;/h3>&lt;ul>
&lt;li>&lt;code>main.py&lt;/code>: 自选股分析流程的入口。&lt;/li>
&lt;li>&lt;code>recommendation_system.py&lt;/code>: AI智能推荐流程的入口。&lt;/li>
&lt;li>&lt;code>health_check.py&lt;/code>: Flask应用的入口，提供 &lt;code>/health&lt;/code> 和 &lt;code>/run&lt;/code> API端点。&lt;/li>
&lt;li>&lt;code>src/&lt;/code>: 包含所有核心逻辑的目录。
&lt;ul>
&lt;li>&lt;code>config.py&lt;/code>: 集中管理所有配置。&lt;/li>
&lt;li>&lt;code>data_loader.py&lt;/code> (&lt;code>DataLoader&lt;/code>): 负责从&lt;code>akshare&lt;/code>获取数据并存入数据库。&lt;/li>
&lt;li>&lt;code>db.py&lt;/code> (&lt;code>DatabaseManager&lt;/code>): 管理SQLite数据库。&lt;/li>
&lt;li>&lt;code>analysis_engine.py&lt;/code> (&lt;code>AnalysisEngine&lt;/code>): 负责计算技术指标。&lt;/li>
&lt;li>&lt;code>gemini_analyzer.py&lt;/code> (&lt;code>GeminiAnalyzer&lt;/code>): 与Gemini API交互，进行AI分析。&lt;/li>
&lt;li>&lt;code>strategy_engine.py&lt;/code> (&lt;code>StrategyEngine&lt;/code>): 核心策略模块，汇总分析并生成信号。&lt;/li>
&lt;li>&lt;code>market_regime.py&lt;/code> (&lt;code>MarketRegime&lt;/code>): 判断市场宏观状态（牛/熊/震荡）。&lt;/li>
&lt;li>&lt;code>logger.py&lt;/code>: 提供统一的日志服务。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>send_email.py&lt;/code>: 生成HTML邮件报告并发送。&lt;/li>
&lt;/ul>
&lt;h3 id="12-数据流">
&lt;a class="header-anchor" href="#12-%e6%95%b0%e6%8d%ae%e6%b5%81">&lt;/a>
1.2. 数据流
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>数据获取&lt;/strong>: &lt;code>DataLoader&lt;/code> 从 &lt;code>akshare&lt;/code> 获取数据。&lt;/li>
&lt;li>&lt;strong>数据存储&lt;/strong>: &lt;code>DatabaseManager&lt;/code> 将数据存入SQLite数据库 (&lt;code>data/stock_data.db&lt;/code>)。&lt;/li>
&lt;li>&lt;strong>市场状态判断&lt;/strong>: &lt;code>MarketRegime&lt;/code> 分析市场指数，确定宏观环境。&lt;/li>
&lt;li>&lt;strong>技术分析&lt;/strong>: &lt;code>AnalysisEngine&lt;/code> 基于历史数据计算技术指标。&lt;/li>
&lt;li>&lt;strong>AI分析&lt;/strong>: &lt;code>GeminiAnalyzer&lt;/code> 调用Gemini API获取基本面和消息面分析。&lt;/li>
&lt;li>&lt;strong>策略决策&lt;/strong>: &lt;code>StrategyEngine&lt;/code> 结合所有分析结果，并根据市场状态动态调整权重，生成最终决策。&lt;/li>
&lt;li>&lt;strong>结果输出&lt;/strong>: 通过日志、邮件 (&lt;code>send_email.py&lt;/code>) 和API (&lt;code>health_check.py&lt;/code>) 输出。&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="2-策略评分与决策体系-v3">
&lt;a class="header-anchor" href="#2-%e7%ad%96%e7%95%a5%e8%af%84%e5%88%86%e4%b8%8e%e5%86%b3%e7%ad%96%e4%bd%93%e7%b3%bb-v3">&lt;/a>
2. 策略、评分与决策体系 (V3)
&lt;/h2>&lt;p>本量化交易系统的核心决策逻辑，通过对技术面、基本面和AI市场情绪面三个维度进行独立的量化评分，并结合&lt;strong>市场状态动态加权&lt;/strong>，最终生成交易信号。&lt;/p></description></item><item><title>项目结构：</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E9%9D%9E%E5%90%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python%E9%9D%9E%E5%90%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99/</guid><description>&lt;h2 id="项目结构">
&lt;a class="header-anchor" href="#%e9%a1%b9%e7%9b%ae%e7%bb%93%e6%9e%84">&lt;/a>
项目结构：
&lt;/h2>&lt;p>&lt;img src="https://guangpuyun.feishu.cn/space/api/box/stream/download/asynccode/?code=N2E4ZjQ0N2I5MmEwYWExMjg1YmVmOTcyZTBhNTk1ZTlfdXlaSzZjU09wSE5mR1AyYTBuYVg1SElQcHJIUENSVWpfVG9rZW46S3AyMmI4bFN1b2VjeG54V251Q2NzMHBhbm5nXzE3NDI0NjExMTk6MTc0MjQ2NDcxOV9WNA" alt="">&lt;/p>
&lt;h2 id="问题">
&lt;a class="header-anchor" href="#%e9%97%ae%e9%a2%98">&lt;/a>
问题：
&lt;/h2>&lt;p>执行文件调用dir1，间接调用dir2。执行时报错：“ModuleNotFoundError: No module named &amp;lsquo;dir1.dir2&amp;rsquo;;”&lt;/p>
&lt;h2 id="解决方法">
&lt;a class="header-anchor" href="#%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95">&lt;/a>
解决方法：
&lt;/h2>&lt;p>dir1文件导包时做处理。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>主函数加入这四行，将项目的根目录(webapp)的路径加入到系统PATH中；
import os,sys&lt;/p>
&lt;p>from pathlib import Path&lt;/p>
&lt;p>sys.path[0] = str(Path(sys.path[0]).parent.parent)&lt;/p>
&lt;p>sys.path.append(os.getcwd())&lt;/p>
&lt;/li>
&lt;li>
&lt;p>且导包从项目执行入口文件同级开始写&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://guangpuyun.feishu.cn/space/api/box/stream/download/asynccode/?code=MzlhZjJjZjgzNzk4YjdjNzU2ZWQ1ZDdjMjA5ODI0MDZfTzN2ZmlQOVM0a1BERU95VkY1amZ5bTFXMEJsc09pTExfVG9rZW46UlgyTmJCdHdLb0I5Z2d4VktJcmNEbDNvblljXzE3NDI0NjExMTk6MTc0MjQ2NDcxOV9WNA" alt="">&lt;/p></description></item><item><title>一、核心语法精要</title><link>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/md%E6%A0%BC%E5%BC%8F%E7%AC%94%E8%AE%B0%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/md%E6%A0%BC%E5%BC%8F%E7%AC%94%E8%AE%B0%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid><description>&lt;h2 id="一核心语法精要">
&lt;a class="header-anchor" href="#%e4%b8%80%e6%a0%b8%e5%bf%83%e8%af%ad%e6%b3%95%e7%b2%be%e8%a6%81">&lt;/a>
一、核心语法精要
&lt;/h2>&lt;h3 id="1-标题与段落">
&lt;a class="header-anchor" href="#1-%e6%a0%87%e9%a2%98%e4%b8%8e%e6%ae%b5%e8%90%bd">&lt;/a>
1. 标题与段落
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="gh"># 主标题（H1）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gh">&lt;/span>&lt;span class="gu">## 二级标题（H2）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>普通段落直接换行书写，空行分隔段落
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">2.&lt;/span> 列表系统
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">无序列表项
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[x] 已完成任务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[ ] 待办事项
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">有序列表
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">第二项
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">3.&lt;/span> 代码展示
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">```python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">def hello_hugo():
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">print(&amp;#34;Welcome to Hugo Blog!&amp;#34;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>二、Hugo增强特性&lt;/p>
&lt;ol>
&lt;li>短代码应用
{{&amp;lt; highlight python &amp;ldquo;linenos=table&amp;rdquo; /&amp;gt;}}
def hugo_shortcode():
return &amp;ldquo;Hugo特色功能&amp;rdquo;
{{&amp;lt;/ /highlight &amp;gt;}}&lt;/li>
&lt;li>响应式图片
{{&amp;lt; image
src=&amp;quot;/images/md-example.png&amp;quot;
alt=&amp;ldquo;Markdown示例&amp;rdquo;
caption=&amp;ldquo;图1. 文档结构示意图&amp;rdquo;
width=&amp;ldquo;80%&amp;rdquo;
&lt;blockquote>
&lt;p>}}&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">&lt;span class="gu">### 1. 基础语法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gu">&lt;/span>```markdown
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">替代文字&lt;/span>](&lt;span class="na">图片路径&lt;/span>)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">示例：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">![&lt;span class="nt">技术架构图&lt;/span>](&lt;span class="na">/images/tech-arch.png&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>三、可视化元素
流程图示例&lt;/p>
&lt;pre class="mermaid">graph TD
A[开始] --> B{判断}
B -->|条件1| C[操作1]
B -->|条件2| D[操作2]
&lt;/pre>
&lt;p>数据表格&lt;/p></description></item><item><title>一.Go简介</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80--%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E9%85%8D/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/go%E8%AF%AD%E8%A8%80--%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E9%85%8D/</guid><description>&lt;h3 id="一go简介">
&lt;a class="header-anchor" href="#%e4%b8%80go%e7%ae%80%e4%bb%8b">&lt;/a>
一.Go简介
&lt;/h3>&lt;p>Go 语言（又称 Golang）是由 Google 开发的一种开源&lt;a href="https://so.csdn.net/so/search?q=%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80&amp;amp;spm=1001.2101.3001.7020">编程语言&lt;/a>，于 2009 年正式对外发布。下面从多个方面为你介绍它：&lt;/p>
&lt;h4 id="设计目标">
&lt;a class="header-anchor" href="#%e8%ae%be%e8%ae%a1%e7%9b%ae%e6%a0%87">&lt;/a>
设计目标
&lt;/h4>&lt;p>Go 语言的设计初衷是为了解决大规模&lt;a href="https://so.csdn.net/so/search?q=%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91&amp;amp;spm=1001.2101.3001.7020">软件开发&lt;/a>中的一些问题，比如编译速度慢、并发编程复杂、代码可维护性差等。所以它结合了静态语言的性能优势和动态语言的开发效率。&lt;/p>
&lt;h4 id="特点">
&lt;a class="header-anchor" href="#%e7%89%b9%e7%82%b9">&lt;/a>
特点
&lt;/h4>&lt;ul>
&lt;li>&lt;strong>高效的编译和执行&lt;/strong>：Go 语言拥有快速的编译速度，这使得开发过程更加流畅。同时，它的执行效率也很高，能充分利用现代多核处理器的性能。&lt;/li>
&lt;li>&lt;strong>内置并发支持&lt;/strong>：Go 语言原生支持并发编程，通过&lt;code>goroutine&lt;/code>和&lt;code>channel&lt;/code>可以很方便地实现高并发程序。&lt;code>goroutine&lt;/code>是一种轻量级的线程，占用资源少，创建和销毁的开销小；&lt;code>channel&lt;/code>则用于&lt;code>goroutine&lt;/code>之间的通信和同步。&lt;/li>
&lt;li>&lt;strong>垃圾回收机制&lt;/strong>：它具备自动垃圾回收功能，开发者无需手动管理内存，减少了内存泄漏的风险，提高了开发效率。&lt;/li>
&lt;li>&lt;strong>丰富的标准库&lt;/strong>：标准库涵盖了网络编程、文件操作、加密解密等多个领域，为开发者提供了便利，减少了对第三方库的依赖。&lt;/li>
&lt;li>&lt;strong>跨平台支持&lt;/strong>：可以在不同的操作系统和硬件平台上编译和运行，方便开发跨平台的应用程序。&lt;/li>
&lt;/ul>
&lt;h4 id="应用场景">
&lt;a class="header-anchor" href="#%e5%ba%94%e7%94%a8%e5%9c%ba%e6%99%af">&lt;/a>
应用场景
&lt;/h4>&lt;ul>
&lt;li>&lt;strong>云计算与容器编排&lt;/strong>：像 Docker 和 Kubernetes 这类知名项目，就是用 Go 语言开发的。&lt;/li>
&lt;li>&lt;strong>网络编程&lt;/strong>：由于其出色的并发性能和网络库，Go 语言非常适合开发网络服务器、代理服务器等。&lt;/li>
&lt;li>&lt;strong>分布式系统&lt;/strong>：在分布式系统中，Go 语言的并发模型和网络编程能力使其能够高效地处理大量的并发请求。&lt;/li>
&lt;/ul>
&lt;h3 id="二go语言安装与配置">
&lt;a class="header-anchor" href="#%e4%ba%8cgo%e8%af%ad%e8%a8%80%e5%ae%89%e8%a3%85%e4%b8%8e%e9%85%8d%e7%bd%ae">&lt;/a>
二、Go语言安装与配置
&lt;/h3>&lt;p>Go语言支持以下系统：Linux、Mac、Windows。&lt;/p>
&lt;p>安装包下载地址：&lt;a href="https://go.dev/" title="The Go Programming Language">The Go Programming Language&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i-blog.csdnimg.cn/direct/a7dff5ff7bda44cc8408d8355ec1ceb1.png" alt="">&lt;/p>
&lt;h3 id="windows">
&lt;a class="header-anchor" href="#windows">&lt;/a>
windows
&lt;/h3>&lt;p>直接安装系统下载安装即可！&lt;/p>
&lt;h3 id="linux">
&lt;a class="header-anchor" href="#linux">&lt;/a>
Linux
&lt;/h3>&lt;h5 id="将下载的二进制包解压至usrlocal目录">
&lt;a class="header-anchor" href="#%e5%b0%86%e4%b8%8b%e8%bd%bd%e7%9a%84%e4%ba%8c%e8%bf%9b%e5%88%b6%e5%8c%85%e8%a7%a3%e5%8e%8b%e8%87%b3usrlocal%e7%9b%ae%e5%bd%95">&lt;/a>
将下载的二进制包解压至/usr/local目录
&lt;/h5>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cobol" data-lang="cobol">&lt;span class="line">&lt;span class="cl">&lt;span class="c">tar -C&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nv">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nv">local&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nv">xzf&lt;/span> &lt;span class="nv">go1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nv">linux-amd64&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nv">tar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nv">gz&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="nv">AI&lt;/span>&lt;span class="err">写代码
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="将-usrlocalgobin-目录添加至-path-环境变量">
&lt;a class="header-anchor" href="#%e5%b0%86-usrlocalgobin-%e7%9b%ae%e5%bd%95%e6%b7%bb%e5%8a%a0%e8%87%b3-path-%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f">&lt;/a>
将 /usr/local/go/bin 目录添加至 PATH 环境变量：
&lt;/h5>&lt;p>可以编辑 /etc/profile，并将以下命令添加该文件的末尾，这样就可以永久生效：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">export&lt;/span> &lt;span class="no">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="vg">$PATH&lt;/span>&lt;span class="ss">:/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">go&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="no">AI写代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后执行&lt;/p></description></item><item><title>柚子网https://www.uu-zz.com/</title><link>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/scrapy%E7%88%AC%E6%9F%9A%E5%AD%90%E7%BD%91%E7%A4%BA%E4%BE%8B/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/scrapy%E7%88%AC%E6%9F%9A%E5%AD%90%E7%BD%91%E7%A4%BA%E4%BE%8B/</guid><description>&lt;p>柚子网https://www.uu-zz.com/&lt;/p>
&lt;p>爬取页码&lt;/p>
&lt;p>遍历页面内对应的视频集的链接&lt;/p>
&lt;p>&lt;img src="https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/O1YCbvbQBoiZYHxxbO7cqOi6nKb?preview_type=16" alt="">&lt;/p>
&lt;p>遍历视频内子视频链接&lt;/p>
&lt;p>&lt;img src="https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/CKMPbtR4souEnDxWowNcxAuenNc?preview_type=16" alt="">!&lt;/p>
&lt;p>&lt;a href="https://security.feishu.cn/link/safety?target=https%3A%2F%2Fwww.uu-zz.com%2F%2B%E5%AD%90%E8%A7%86%E9%A2%91%E9%93%BE%E6%8E%A5&amp;amp;scene=ccm&amp;amp;logParams=%7B%22location%22%3A%22ccm_mindnote%22%7D&amp;amp;lang=zh-CN">https://www.uu-zz.com/+子视频链接&lt;/a>，发送get请求&lt;/p>
&lt;p>&lt;img src="https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/ClLDbx3s5o29xpxWKrncnG3Enzg?preview_type=16" alt="">!&lt;/p>
&lt;p>获得m3u8文件，储存在数据库&lt;/p></description></item><item><title>在Mac终端中，有几种方法可以连续删除命令：</title><link>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/mac%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E9%80%9F%E8%AE%B0/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/mac%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E9%80%9F%E8%AE%B0/</guid><description>&lt;p>在Mac终端中，有几种方法可以连续删除命令：&lt;/p>
&lt;ol>
&lt;li>使用 Ctrl + W ：删除光标前的一个单词&lt;/li>
&lt;li>使用 Ctrl + U ：删除光标前的整行内容&lt;/li>
&lt;li>使用 Ctrl + K ：删除光标后的整行内容&lt;/li>
&lt;li>使用 Option + Delete ：删除光标前的一个单词（与 Ctrl + W 类似）
这些快捷键可以帮助你快速删除命令内容，提高终端操作效率。&lt;/li>
&lt;/ol></description></item><item><title>这是一个测试知识库文件</title><link>https://bluespace3.github.io/post/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%8C%AB%E5%92%AA/test_knowledge_base/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%8C%AB%E5%92%AA/test_knowledge_base/</guid><description>&lt;h1 id="这是一个测试知识库文件">
&lt;a class="header-anchor" href="#%e8%bf%99%e6%98%af%e4%b8%80%e4%b8%aa%e6%b5%8b%e8%af%95%e7%9f%a5%e8%af%86%e5%ba%93%e6%96%87%e4%bb%b6">&lt;/a>
这是一个测试知识库文件
&lt;/h1>&lt;p>这是一个关于人工智能的段落。人工智能是计算机科学的一个分支，旨在创建能够像人类一样思考和学习的智能机器。&lt;/p>
&lt;p>另一个关于机器学习的段落。机器学习是人工智能的一个子集，它使系统能够从数据中学习，而无需明确编程。山咪爱黏人。山咪名字的来源是为了纪念他的两个主人是登上认识的。山咪完成了两针疫苗，还没有绝育。&lt;/p></description></item><item><title>这是一篇加密的文章</title><link>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/encrypted-example/</link><pubDate>Fri, 05 Sep 2025 14:48:25 +0000</pubDate><guid>https://bluespace3.github.io/post/%E6%95%99%E7%A8%8B/encrypted-example/</guid><description>&lt;h2 id="这是一篇加密的文章">
&lt;a class="header-anchor" href="#%e8%bf%99%e6%98%af%e4%b8%80%e7%af%87%e5%8a%a0%e5%af%86%e7%9a%84%e6%96%87%e7%ab%a0">&lt;/a>
这是一篇加密的文章
&lt;/h2>&lt;p>只有输入正确的密码才能查看这篇文章的内容。&lt;/p>
&lt;h3 id="如何设置文章加密">
&lt;a class="header-anchor" href="#%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae%e6%96%87%e7%ab%a0%e5%8a%a0%e5%af%86">&lt;/a>
如何设置文章加密
&lt;/h3>&lt;p>在文章的前置参数中添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">encrypted&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;你的密码&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就可以为文章添加密码保护了。&lt;/p>
&lt;h3 id="密码保护的工作原理">
&lt;a class="header-anchor" href="#%e5%af%86%e7%a0%81%e4%bf%9d%e6%8a%a4%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86">&lt;/a>
密码保护的工作原理
&lt;/h3>&lt;ol>
&lt;li>当用户访问加密文章时，会显示密码输入框&lt;/li>
&lt;li>用户输入正确的密码后，文章内容才会显示&lt;/li>
&lt;li>密码验证在浏览器端进行，不需要服务器支持&lt;/li>
&lt;li>使用sessionStorage保存解锁状态，避免刷新页面后需要重新输入密码&lt;/li>
&lt;/ol>
&lt;h3 id="注意事项">
&lt;a class="header-anchor" href="#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9">&lt;/a>
注意事项
&lt;/h3>&lt;ul>
&lt;li>这种加密方式只是前端加密，不能防止真正的黑客攻击&lt;/li>
&lt;li>适合用于简单的内容保护，不适合保护高度敏感的信息&lt;/li>
&lt;li>密码直接保存在文章的前置参数中，所以不要使用您在其他地方使用的重要密码&lt;/li>
&lt;/ul></description></item></channel></rss>