<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>教程 on 蓝色空间号-新世界的探索者</title>
    <link>http://localhost:1313/tags/%E6%95%99%E7%A8%8B/</link>
    <description>Recent content in 教程 on 蓝色空间号-新世界的探索者</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 06 Apr 2025 09:59:32 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E6%95%99%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gemma 3的本地部署</title>
      <link>http://localhost:1313/post/gemma-3%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 06 Apr 2025 09:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/gemma-3%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;Gemma 3 被谷歌称为目前最强的开源视觉模型之一。 该模型支持超过35种语言，能够分析文本、图像和短视频。值得注意的是，Gemma 3 的视觉编码器经过升级，支持高分辨率和非方形图像，并引入了 ShieldGemma 2 图像安全分类器，用于过滤被分类为性暗示、危险或暴力的内容。这些特性使得 Gemma 3 成为当前最强大的开源视觉模型之一。&lt;/p&gt;&#xA;&lt;h4 id=&#34;最新的-gemma-3-多模态开源模型新功能&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9c%80%e6%96%b0%e7%9a%84-gemma-3-%e5%a4%9a%e6%a8%a1%e6%80%81%e5%bc%80%e6%ba%90%e6%a8%a1%e5%9e%8b%e6%96%b0%e5%8a%9f%e8%83%bd&#34;&gt;&lt;/a&gt;&#xD;&#xA;最新的 Gemma 3 多模态开源模型新功能&#xD;&#xA;&lt;/h4&gt;&lt;p&gt;使用世界上最好的单加速器模型进行构建： Gemma 3 以其尺寸提供最先进的性能，在 LMArena 排行榜的初步人类偏好评估中胜过 Llama3-405B、DeepSeek-V3 和 o3-mini。这可以帮助您创建可安装在单个 GPU 或 TPU 主机上的引人入胜的用户体验。&#xA;以 140 种语言走向全球：构建使用客户语言的应用程序。Gemma 3 提供对超过 35 种语言的开箱即用支持和对超过 140 种语言的预训练支持。&#xA;打造具备高级文本和视觉推理能力的AI：轻松构建分析图片、文本、短视频等应用，开启交互智能化新可能1。&#xA;使用扩展的上下文窗口处理复杂任务： Gemma 3 提供 128k 令牌上下文窗口，让您的应用程序处理和理解大量信息。&#xA;使用函数调用创建 AI 驱动的工作流程： Gemma 3 支持函数调用和结构化输出，以帮助您自动执行任务并构建代理体验。&#xA;通过量化模型更快地实现高性能： Gemma 3 引入了官方量化版本，减少了模型大小和计算要求，同时保持了高精度。&lt;/p&gt;&#xA;&lt;p&gt;本地安装，单显卡可以选择1b，4b，12b，27b，推荐选择27b，因为Gemma 3 27B 处于帕累托最佳点.&lt;/p&gt;&#xA;&lt;h4 id=&#34;本地部署gemma-3开源大模型&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9c%ac%e5%9c%b0%e9%83%a8%e7%bd%b2gemma-3%e5%bc%80%e6%ba%90%e5%a4%a7%e6%a8%a1%e5%9e%8b&#34;&gt;&lt;/a&gt;&#xD;&#xA;&lt;strong&gt;本地部署Gemma 3开源大模型：&lt;/strong&gt;&#xD;&#xA;&lt;/h4&gt;&lt;p&gt;1、下载官方 Ollama 【 &lt;strong&gt;&lt;a href=&#34;https://ollama.com/&#34;&gt;点击前往&lt;/a&gt;&lt;/strong&gt; 】 ，并通过下方的安装命令执行下载：&lt;/p&gt;&#xA;&lt;p&gt;普通用户建议选择4b和12b，显卡好的可以上27b&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git 常用命令记录</title>
      <link>http://localhost:1313/post/git%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 06 Apr 2025 09:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/git%E6%93%8D%E4%BD%9C/</guid>
      <description>&lt;h4 id=&#34;回滚到指定提交&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%9b%9e%e6%bb%9a%e5%88%b0%e6%8c%87%e5%ae%9a%e6%8f%90%e4%ba%a4&#34;&gt;&lt;/a&gt;&#xD;&#xA;回滚到指定提交&#xD;&#xA;&lt;/h4&gt;&lt;ol&gt;&#xA;&lt;li&gt;git reset &amp;ndash;hard c1ac53850b0314a20e97f669bafc8bb67a3a1124&lt;/li&gt;&#xA;&lt;li&gt;git push&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h4 id=&#34;放弃变更强制提交&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%94%be%e5%bc%83%e5%8f%98%e6%9b%b4%e5%bc%ba%e5%88%b6%e6%8f%90%e4%ba%a4&#34;&gt;&lt;/a&gt;&#xD;&#xA;放弃变更强制提交&#xD;&#xA;&lt;/h4&gt;&lt;ul&gt;&#xA;&lt;li&gt;git reset &amp;ndash;hard ; git pull &amp;ndash;force&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;子模块的使用&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ad%90%e6%a8%a1%e5%9d%97%e7%9a%84%e4%bd%bf%e7%94%a8&#34;&gt;&lt;/a&gt;&#xD;&#xA;子模块的使用&#xD;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/361743670309_.pic.jpg&#34; alt=&#34;子模块使用&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown文档编写不完全指南</title>
      <link>http://localhost:1313/post/md%E6%A0%BC%E5%BC%8F%E7%AC%94%E8%AE%B0%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 03 Apr 2025 16:21:23 +0800</pubDate>
      <guid>http://localhost:1313/post/md%E6%A0%BC%E5%BC%8F%E7%AC%94%E8%AE%B0%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h2 id=&#34;一核心语法精要&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%80%e6%a0%b8%e5%bf%83%e8%af%ad%e6%b3%95%e7%b2%be%e8%a6%81&#34;&gt;&lt;/a&gt;&#xD;&#xA;一、核心语法精要&#xD;&#xA;&lt;/h2&gt;&lt;h3 id=&#34;1-标题与段落&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#1-%e6%a0%87%e9%a2%98%e4%b8%8e%e6%ae%b5%e8%90%bd&#34;&gt;&lt;/a&gt;&#xD;&#xA;1. 标题与段落&#xD;&#xA;&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;# 主标题（H1）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gh&#34;&gt;&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;## 二级标题（H2）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;&lt;/span&gt;普通段落直接换行书写，空行分隔段落&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;2.&lt;/span&gt; 列表系统&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;无序列表项&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[x] 已完成任务&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[ ] 待办事项&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;有序列表&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;第二项&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;3.&lt;/span&gt; 代码展示&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;```python&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;def hello_hugo():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;print(&amp;#34;Welcome to Hugo Blog!&amp;#34;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;二、Hugo增强特性&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;短代码应用&#xA;{{&amp;lt; highlight python &amp;ldquo;linenos=table&amp;rdquo; /&amp;gt;}}&#xA;def hugo_shortcode():&#xA;return &amp;ldquo;Hugo特色功能&amp;rdquo;&#xA;{{&amp;lt;/ /highlight &amp;gt;}}&lt;/li&gt;&#xA;&lt;li&gt;响应式图片&#xA;{{&amp;lt; image&#xA;src=&amp;quot;/images/md-example.png&amp;quot;&#xA;alt=&amp;ldquo;Markdown示例&amp;rdquo;&#xA;caption=&amp;ldquo;图1. 文档结构示意图&amp;rdquo;&#xA;width=&amp;ldquo;80%&amp;rdquo;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;}}&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;### 1. 基础语法&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;gu&#34;&gt;&lt;/span&gt;```markdown&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;![&lt;span class=&#34;nt&#34;&gt;替代文字&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;图片路径&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;示例：&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;![&lt;span class=&#34;nt&#34;&gt;技术架构图&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;/images/tech-arch.png&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;三、可视化元素&#xA;流程图示例&lt;/p&gt;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;graph TD&#xD;&#xA;A[开始] --&gt; B{判断}&#xD;&#xA;B --&gt;|条件1| C[操作1]&#xD;&#xA;B --&gt;|条件2| D[操作2]&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&lt;p&gt;数据表格&lt;/p&gt;</description>
    </item>
    <item>
      <title>提示词技巧</title>
      <link>http://localhost:1313/post/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sat, 29 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8A%80%E5%B7%A7/</guid>
      <description>&lt;p&gt;提示词技巧&#xA;总结：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluespace3/images/master/20250329152414.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluespace3/images/master/20250329153529.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluespace3/images/master/20250329153627.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bluespace3/images/master/20250329153708.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://raw.githubusercontent.com/bluespace3/images/master/20250329153716.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;官方提示词库：&#xA;&lt;a href=&#34;https://api-docs.deepseek.com/zh-cn/prompt-library&#34;&gt;https://api-docs.deepseek.com/zh-cn/prompt-library&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>加密文章示例</title>
      <link>http://localhost:1313/post/encrypted-example/</link>
      <pubDate>Tue, 25 Mar 2025 12:00:00 +0800</pubDate>
      <guid>http://localhost:1313/post/encrypted-example/</guid>
      <description>&lt;h2 id=&#34;这是一篇加密的文章&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bf%99%e6%98%af%e4%b8%80%e7%af%87%e5%8a%a0%e5%af%86%e7%9a%84%e6%96%87%e7%ab%a0&#34;&gt;&lt;/a&gt;&#xD;&#xA;这是一篇加密的文章&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;只有输入正确的密码才能查看这篇文章的内容。&lt;/p&gt;&#xA;&lt;h3 id=&#34;如何设置文章加密&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae%e6%96%87%e7%ab%a0%e5%8a%a0%e5%af%86&#34;&gt;&lt;/a&gt;&#xD;&#xA;如何设置文章加密&#xD;&#xA;&lt;/h3&gt;&lt;p&gt;在文章的前置参数中添加以下内容：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;encrypted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;你的密码&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就可以为文章添加密码保护了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;密码保护的工作原理&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%af%86%e7%a0%81%e4%bf%9d%e6%8a%a4%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86&#34;&gt;&lt;/a&gt;&#xD;&#xA;密码保护的工作原理&#xD;&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;当用户访问加密文章时，会显示密码输入框&lt;/li&gt;&#xA;&lt;li&gt;用户输入正确的密码后，文章内容才会显示&lt;/li&gt;&#xA;&lt;li&gt;密码验证在浏览器端进行，不需要服务器支持&lt;/li&gt;&#xA;&lt;li&gt;使用sessionStorage保存解锁状态，避免刷新页面后需要重新输入密码&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;注意事项&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9&#34;&gt;&lt;/a&gt;&#xD;&#xA;注意事项&#xD;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;这种加密方式只是前端加密，不能防止真正的黑客攻击&lt;/li&gt;&#xA;&lt;li&gt;适合用于简单的内容保护，不适合保护高度敏感的信息&lt;/li&gt;&#xA;&lt;li&gt;密码直接保存在文章的前置参数中，所以不要使用您在其他地方使用的重要密码&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>将github变为免费图床</title>
      <link>http://localhost:1313/post/%E4%BD%BF%E7%94%A8gihub%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</link>
      <pubDate>Fri, 21 Mar 2025 23:00:32 +0800</pubDate>
      <guid>http://localhost:1313/post/%E4%BD%BF%E7%94%A8gihub%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</guid>
      <description>&lt;h2 id=&#34;使用-github-作为免费图床的文档&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bd%bf%e7%94%a8-github-%e4%bd%9c%e4%b8%ba%e5%85%8d%e8%b4%b9%e5%9b%be%e5%ba%8a%e7%9a%84%e6%96%87%e6%a1%a3&#34;&gt;&lt;/a&gt;&#xD;&#xA;使用 GitHub 作为免费图床的文档&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;最近就想找一款免费的图床来放置自己的图片，逛了一圈下来发现GitHub可以白嫖，于是乎，就有了这篇文章。&lt;/p&gt;&#xA;&lt;p&gt;GitHub 是一个非常流行的代码托管平台，除了代码存储外，你还可以使用 GitHub 来托管静态资源，比如图片。通过将图片上传到 GitHub 的仓库，你可以轻松获取图片的 URL，从而在网页或文档中嵌入这些图片。以下是如何使用 GitHub 作为免费图床的详细步骤。&lt;/p&gt;&#xA;&lt;h3 id=&#34;步骤-1-创建-github-仓库&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a4-1-%e5%88%9b%e5%bb%ba-github-%e4%bb%93%e5%ba%93&#34;&gt;&lt;/a&gt;&#xD;&#xA;步骤 1: 创建 GitHub 仓库&#xD;&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;登录到 &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击右上角的 &amp;ldquo;+&amp;rdquo; 按钮，然后选择 &amp;ldquo;New repository&amp;rdquo;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;填写仓库的名称（例如：&lt;code&gt;my-image-hosting&lt;/code&gt;），并设置为公开（Public）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;点击 &amp;ldquo;Create repository&amp;rdquo; 创建仓库。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pic3.zhimg.com/v2-cdd72cbacf64cf512b0426eb2362d3e6_1440w.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;步骤-2-github获取个人的token&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a4-2-github%e8%8e%b7%e5%8f%96%e4%b8%aa%e4%ba%ba%e7%9a%84token&#34;&gt;&lt;/a&gt;&#xD;&#xA;步骤 2: GitHub获取个人的Token&#xD;&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;访问：&lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;settings-tokens&lt;/a&gt; ，点击&lt;strong&gt;Generate new token&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picx.zhimg.com/v2-2148c04aa5bc07ccea01b2273ba65033_1440w.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;2.设置 token 属性 ，Expiration：永不过期，Select scopes：&lt;code&gt;repo&lt;/code&gt; 一定要全选，其他的无所谓 ，点击最下方&lt;strong&gt;创建&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pica.zhimg.com/v2-ef2f47f1c64e0b095e040cf103ea8b62_1440w.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;就会获得一个token字符串， &lt;strong&gt;⚠️ 注意：一定要收藏好 token，因为只会显示一次！&lt;/strong&gt;，关掉这个页面就再也看不见了。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;[!IMPORTANT] &lt;strong&gt;后续会继续使用这个token!!!!&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pica.zhimg.com/v2-7efb7778246d4e3964471f46c290f790_1440w.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;步骤-3-下载picgo&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%ad%a5%e9%aa%a4-3-%e4%b8%8b%e8%bd%bdpicgo&#34;&gt;&lt;/a&gt;&#xD;&#xA;步骤 3: 下载PicGo&#xD;&#xA;&lt;/h3&gt;&lt;ol&gt;&#xA;&lt;li&gt;在PicGo最新页面上下载它的安装包。&lt;a href=&#34;https://github.com/Molunerfinn/PicGo/releases&#34;&gt;PicGo下载页面&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picx.zhimg.com/v2-4e1070ec6988ea104dd9f339af322d4b_1440w.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;安装PicGo。无需赘述&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;配置GitHub&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://picx.zhimg.com/v2-86772b08f48e060e991b724d7d11b677_1440w.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;PicGo 上传区配置选中你的配置&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pic4.zhimg.com/v2-01a76c0126a75365b9bdc2e2163edda7_1440w.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>测试平台教程</title>
      <link>http://localhost:1313/post/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%88%86%E4%BA%AB/</link>
      <pubDate>Fri, 21 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%88%86%E4%BA%AB/</guid>
      <description>&lt;p&gt;一、基本介绍：（）&#xA;桌面端工具（一年左右），使用python的wxpython框架编写，使用pyinstaller打包为桌面exe文件；缺点：体积大，不便于分享；&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/image_0fa5b6bdd33056f5c14c2ba21dca4298.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;web端应用（10月初至今）：flask+vue实现；优点，通过脚本实现热更新；链接形式便于分享。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/image_554bf84092b63f4dfeef955bec300c72.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;二、功能介绍：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/image_d8f9cc72d69a56ab872809e6e0c32ca7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;三、技术实现&lt;/p&gt;&#xA;&lt;p&gt;测试平台采用前后端分离的方式实现:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;后端由flask框架实现；&#xA;（1）flask项目结构&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/image_08bf969bb5e6e6a6c2866b5ecd815b9a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（2）在项目入口文件中构建接口&#xA;Flask：用于创建一个flask应用,app = Flask(&lt;strong&gt;name&lt;/strong&gt;)&#xA;CORS:解决跨域问题，cors = CORS(app)&#xA;request:接受请求的参数，request.args.get()；phone = request.json[]&#xA;jsonify:以json格式返回结果：jsonify({&amp;ldquo;data&amp;rdquo;: res})&#xA;接口的基本组成：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/image_1e0619b874f00563f4df88a914e7b216.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;构建一个接口的基本步骤：&#xA;导包：Flask、CORS、request、jsonify&#xA;在app.route()装饰器中定义接口的请求类型、url路径&#xA;写一个接口函数&#xA;获取入参（可选）&#xA;get请求 request.args.get()&#xA;post请求 request.json[]&#xA;对得到的参数进行基本校验：如参数类型校验、字段长度、是否空、鉴权等。&#xA;根据传参进行逻辑处理，调用对应功能，得到结果&#xA;构建响应头（可选，返回类型是文件时必须）&#xA;构建结果，使用jsonify将返回结果构建成一个js （可选）&#xA;return结果&#xA;启动flask&#xA;app.run(ip,port,debug=True),其中debug=True代表以调试模式启动，代码改动后自动重启；debug默认为False。&#xA;包的管理 requirements.txt&#xA;代码中引入了的包，需要填写在该文件中，格式：“ 包名==版本号”&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./images/image_ddafd5dad0788c85d978475b2b619b09.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;（3）采用gunnicorn+gevent部署flask项目&#xA;介绍：&#xA;一个HTTP 服务器，可以增加项目的并发，通常和gevent一起使用。&#xA;安装gunicorn和gevent：&#xA;pip install gunicorn  -i  &lt;a href=&#34;https://pypi.tuna.tsinghua.edu.cn/simple&#34;&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/a&gt;&#xA;pip install gevent-i  &lt;a href=&#34;https://pypi.tuna.tsinghua.edu.cn/simple&#34;&gt;https://pypi.tuna.tsinghua.edu.cn/simple&lt;/a&gt;&#xA;配置文件 gunicorn.conf.py&#xA;workers = 10   定义同时开启的处理请求的进程数量，根据网站流量适当调整&#xA;worker_class = &amp;ldquo;gevent&amp;rdquo;   采用gevent库，支持异步处理请求，提高吞吐量&#xA;bind = &amp;ldquo;0.0.0.0:80&amp;rdquo;     监听IP放宽，以便于Docker之间、Docker和宿主机之间的通信,docker部署固定&#xA;采用启动服务：&#xA;gunicorn flask_index:app -c ./gunicorn.conf.py&#xA;注意：Gunicorn只能运行在Linux环境中，不支持windows平台，因此在windows调试的时候不要用这个方式启动flask；&#xA;2. 前端：vue 、node.js（前端的包管理工具，类似python的pip包管理工具）、vue-cli（vue项目的脚手架）、element-ui、echats提供页面交互;&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker常用命令</title>
      <link>http://localhost:1313/post/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;docker pull ubuntu 载入ubuntu 镜像&lt;/p&gt;&#xA;&lt;p&gt;docker pull training/webapp  # 载入镜像&lt;/p&gt;&#xA;&lt;p&gt;docker pull python:3.7 安装python镜像&lt;/p&gt;&#xA;&lt;p&gt;docker pull nginx 安装nginx镜像&lt;/p&gt;&#xA;&lt;p&gt;docker run -it python:3.7 /bin/bash 进入python镜像&lt;/p&gt;&#xA;&lt;p&gt;连接不上时，终端输入：&lt;/p&gt;&#xA;&lt;p&gt;1.cd &amp;ldquo;C:\Program Files\Docker\Docker&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;2.DockerCli.exe -SwitchDaemon&lt;/p&gt;&#xA;&lt;p&gt;docker run -it ubuntu /bin/bash 启用进入容器&lt;/p&gt;&#xA;&lt;p&gt;exit退出容器&lt;/p&gt;&#xA;&lt;p&gt;docker run -d -P training/webapp python app.py 后台启用容器并随机映射到本机端口&lt;/p&gt;&#xA;&lt;p&gt;docker run -d -p 5000:5000 training/webapp python app.py后台启用容器并指定映射到&lt;/p&gt;&#xA;&lt;p&gt;docker logs -f id 查看应用日志&lt;/p&gt;&#xA;&lt;p&gt;docker logs  -f -t &amp;ndash;tail=100 dockerid 动态查看最新100条日志&lt;/p&gt;&#xA;&lt;p&gt;docker top  id 查看容器内部应用进程&lt;/p&gt;&#xA;&lt;p&gt;docker ps -a 查看所有容器(可查容器id)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git submodule</title>
      <link>http://localhost:1313/post/git-submodule/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/git-submodule/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#J6CDd7QvkohJ3mxEKt3czp31nOe&#34;&gt;Git submodule添加子项目_库&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnEitqaRgfOoIdSuxwNhUaIc&#34;&gt;Git归并策略&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnel4BHYYT4Lw7SQHLqNXyue&#34;&gt;添加&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnrHxc9hpZYK1WtRbYlUQ91f&#34;&gt;删除&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;输入“/”快速插入内容&lt;/p&gt;&#xA;&lt;p&gt;添加图标&lt;/p&gt;&#xA;&lt;p&gt;添加封面&lt;/p&gt;&#xA;&lt;p&gt;展示文档信息&lt;/p&gt;&#xA;&lt;p&gt;Git submodule添加子项目_库&lt;/p&gt;&#xA;&lt;p&gt;开发过程中，经常会有一些通用的部分希望抽取出来做成一个公共库来提供给别的工程来使用，而公共代码库的版本管理是个麻烦的事情。git submodule命令就可以解决这个问题。&lt;/p&gt;&#xA;&lt;p&gt;Git归并策略&lt;/p&gt;&#xA;&lt;p&gt;Git归并有两种策略：递归，章鱼。&lt;/p&gt;&#xA;&lt;p&gt;1.递归策略：当分支数只有两个的时候。&lt;/p&gt;&#xA;&lt;p&gt;2.章鱼策略：当分支数大于两个的时候。&lt;/p&gt;&#xA;&lt;p&gt;Git会自动选择归并的方法。&lt;/p&gt;&#xA;&lt;p&gt;3.子树策略：是Git另一种归并方法。（submodule）&lt;/p&gt;&#xA;&lt;p&gt;它可以把另一个子项目，嵌入到当前项目。而且会非常聪明的合并这些子项目。&lt;/p&gt;&#xA;&lt;p&gt;添加&lt;/p&gt;&#xA;&lt;p&gt;为当前工程添加submodule，命令如下：&lt;/p&gt;&#xA;&lt;p&gt;git submodule add 仓库地址 路径&lt;/p&gt;&#xA;&lt;p&gt;其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。&lt;/p&gt;&#xA;&lt;p&gt;注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone）&lt;/p&gt;&#xA;&lt;p&gt;示例:&lt;/p&gt;&#xA;&lt;p&gt;git submodule add -f &lt;a href=&#34;http://git.cs/Cmblife_iOS_Internal/modulesLib.git&#34;&gt;http://git.cs/Cmblife_iOS_Internal/modulesLib.git&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;-f 是强制的意思，一般不需要加&lt;/p&gt;&#xA;&lt;p&gt;命令执行完成，会在当前工程根路径下生成一个名为“.gitmodules”的文件，其中记录了子模块的信息。添加完成以后，再将子模块所在的文件夹添加到工程中即可。&lt;/p&gt;&#xA;&lt;p&gt;删除&lt;/p&gt;&#xA;&lt;p&gt;submodule的删除稍微麻烦点：首先，要在“.gitmodules”文件中删除相应配置信息。然后，执行“git rm –cached ”命令将子模块所在的文件从git中删除。&lt;/p&gt;&#xA;&lt;p&gt;下载的工程带有submodule&lt;/p&gt;&#xA;&lt;p&gt;当使用git clone下来的工程中带有submodule时，初始的时候，submodule的内容并不会自动下载下来的，此时，只需执行如下命令：&lt;/p&gt;&#xA;&lt;p&gt;git submodule update –init –recursive&lt;/p&gt;&#xA;&lt;p&gt;即可将子模块内容下载下来后工程才不会缺少相应的文件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>git子项目</title>
      <link>http://localhost:1313/post/git%E6%B7%BB%E5%8A%A0%E5%AD%90%E9%A1%B9%E7%9B%AE/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/git%E6%B7%BB%E5%8A%A0%E5%AD%90%E9%A1%B9%E7%9B%AE/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;项目中添加子项目&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1、git clone 父项目url&lt;/li&gt;&#xA;&lt;li&gt;2、cd 父项目对应目录下：git submodule add &amp;lt;子项目地址&amp;gt;&lt;/li&gt;&#xA;&lt;li&gt;3、git commit ;git push&lt;/li&gt;&#xA;&lt;li&gt;4、此时子项目下的子项目是空的，需要cd到父目录cmd执行：&#xA;git submodule update &amp;ndash;init &amp;ndash;recursive&#xA;或者执行：git submodule init 然后执行cd&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;clone含嵌套项目的项目&#xA;&lt;ul&gt;&#xA;&lt;li&gt;git clone 父项目url &amp;ndash;recurse-submodules&#xA;不加&amp;ndash;recurse-submodules，克隆的子项目是空的&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Hugo静态网站生成器入门指南</title>
      <link>http://localhost:1313/post/hugo%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/hugo%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h2 id=&#34;什么是hugo&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%afhugo&#34;&gt;&lt;/a&gt;&#xD;&#xA;什么是Hugo？&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;Hugo是一个用Go语言编写的快速、现代的静态网站生成器。它可以将Markdown文件转换为HTML页面，非常适合构建文档网站、博客等。&lt;/p&gt;&#xA;&lt;h2 id=&#34;hugo的主要特点&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#hugo%e7%9a%84%e4%b8%bb%e8%a6%81%e7%89%b9%e7%82%b9&#34;&gt;&lt;/a&gt;&#xD;&#xA;Hugo的主要特点&#xD;&#xA;&lt;/h2&gt;&lt;ul&gt;&#xA;&lt;li&gt;极快的构建速度&lt;/li&gt;&#xA;&lt;li&gt;丰富的主题支持&lt;/li&gt;&#xA;&lt;li&gt;简单的Markdown内容管理&lt;/li&gt;&#xA;&lt;li&gt;强大的模板系统&lt;/li&gt;&#xA;&lt;li&gt;内置的短代码功能&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;安装hugo&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%ae%89%e8%a3%85hugo&#34;&gt;&lt;/a&gt;&#xD;&#xA;安装Hugo&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;在Windows上安装Hugo的步骤：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;下载Hugo的Windows版本&lt;/li&gt;&#xA;&lt;li&gt;解压到指定目录&lt;/li&gt;&#xA;&lt;li&gt;将Hugo的可执行文件路径添加到系统环境变量&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;创建新站点&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e5%88%9b%e5%bb%ba%e6%96%b0%e7%ab%99%e7%82%b9&#34;&gt;&lt;/a&gt;&#xD;&#xA;创建新站点&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;使用以下命令创建一个新的Hugo站点：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new site mydocs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;下载插件&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e4%b8%8b%e8%bd%bd%e6%8f%92%e4%bb%b6&#34;&gt;&lt;/a&gt;&#xD;&#xA;下载插件&#xD;&#xA;&lt;/h2&gt;&lt;h2 id=&#34;添加内容&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%b7%bb%e5%8a%a0%e5%86%85%e5%ae%b9&#34;&gt;&lt;/a&gt;&#xD;&#xA;添加内容&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;在content目录下创建Markdown文件来添加内容：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new blog/my-first-post.md&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;运行开发服务器&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%bf%90%e8%a1%8c%e5%bc%80%e5%8f%91%e6%9c%8d%e5%8a%a1%e5%99%a8&#34;&gt;&lt;/a&gt;&#xD;&#xA;运行开发服务器&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;使用以下命令启动开发服务器：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server -D --environment development &lt;span class=&#34;c1&#34;&gt;#如果未设置环境变量则不需要指定环境。&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;部署网站&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%83%a8%e7%bd%b2%e7%bd%91%e7%ab%99&#34;&gt;&lt;/a&gt;&#xD;&#xA;部署网站&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;使用以下命令生成静态文件：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;&#xA;&lt;li&gt;然后将public目录下的文件部署到Web服务器即可，注意每次推送前运行hugo更新public文件夹&lt;/li&gt;&#xA;&lt;li&gt;若有更新域名，请删除public后，再运行hugo重新生成public，否则会出现路由错误的情况。&lt;/li&gt;&#xA;&lt;li&gt;为了方便新建.sh脚本文件，命名为.command.sh&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 判断是否已初始化Git仓库&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; ! -d &lt;span class=&#34;s2&#34;&gt;&amp;#34;.git&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;未检测到Git仓库，正在初始化...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Git仓库已初始化&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 创建.gitignore文件，排除不需要版本控制的文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt; .gitignore &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;resources/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;.DS_Store&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;node_modules/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;.hugo_build.lock&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 添加所有文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 提交更改&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;更新博客&amp;#34;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 检查是否已关联远程仓库&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;REMOTE_URL&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;git remote get-url origin 2&amp;gt;/dev/null&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; -z &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$REMOTE_URL&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;未检测到远程仓库，正在添加...&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    git remote add origin https://github.com/bluespace3/bluespace3.github.io&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;已关联远程仓库：&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$REMOTE_URL&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 推送到GitHub&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin main --force&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;终端运行 ..command.sh&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;更新维护&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e6%9b%b4%e6%96%b0%e7%bb%b4%e6%8a%a4&#34;&gt;&lt;/a&gt;&#xD;&#xA;更新维护&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;后期维护有许多要留意的地方否则容易踩坑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>linux安装python</title>
      <link>http://localhost:1313/post/linux%E5%AE%89%E8%A3%85python/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/linux%E5%AE%89%E8%A3%85python/</guid>
      <description>&lt;p&gt;#依赖包&lt;/p&gt;&#xA;&lt;p&gt;yum -y groupinstall &amp;ldquo;Development tools&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel&lt;/p&gt;&#xA;&lt;p&gt;#下载 Python3&lt;/p&gt;&#xA;&lt;p&gt;wget &lt;a href=&#34;https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz&#34;&gt;https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;#创建文件夹&lt;/p&gt;&#xA;&lt;p&gt;mkdir /usr/local/python3&lt;/p&gt;&#xA;&lt;p&gt;#解压编译安装&lt;/p&gt;&#xA;&lt;p&gt;tar -xvJf  Python-3.6.2.tar.xz&lt;/p&gt;&#xA;&lt;p&gt;cd Python-3.6.2&lt;/p&gt;&#xA;&lt;p&gt;./configure &amp;ndash;prefix=/usr/local/python3&lt;/p&gt;&#xA;&lt;p&gt;make &amp;amp;&amp;amp; make install&lt;/p&gt;&#xA;&lt;p&gt;#给个软链&lt;/p&gt;&#xA;&lt;p&gt;ln -sf /usr/local/python3/bin/python3 /usr/bin/python3&lt;/p&gt;&#xA;&lt;p&gt;ln -sf /usr/local/python3/bin/pip3 /usr/bin/pip3&lt;/p&gt;</description>
    </item>
    <item>
      <title>python常见踩坑记录</title>
      <link>http://localhost:1313/post/python%E9%9D%9E%E5%90%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/python%E9%9D%9E%E5%90%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99/</guid>
      <description>&lt;h2 id=&#34;项目结构&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%a1%b9%e7%9b%ae%e7%bb%93%e6%9e%84&#34;&gt;&lt;/a&gt;&#xD;&#xA;项目结构：&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://guangpuyun.feishu.cn/space/api/box/stream/download/asynccode/?code=N2E4ZjQ0N2I5MmEwYWExMjg1YmVmOTcyZTBhNTk1ZTlfdXlaSzZjU09wSE5mR1AyYTBuYVg1SElQcHJIUENSVWpfVG9rZW46S3AyMmI4bFN1b2VjeG54V251Q2NzMHBhbm5nXzE3NDI0NjExMTk6MTc0MjQ2NDcxOV9WNA&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e9%97%ae%e9%a2%98&#34;&gt;&lt;/a&gt;&#xD;&#xA;问题：&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;执行文件调用dir1，间接调用dir2。执行时报错：“ModuleNotFoundError: No module named &amp;lsquo;dir1.dir2&amp;rsquo;;”&lt;/p&gt;&#xA;&lt;h2 id=&#34;解决方法&#34;&gt;&#xD;&#xA;&lt;a class=&#34;header-anchor&#34; href=&#34;#%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95&#34;&gt;&lt;/a&gt;&#xD;&#xA;解决方法：&#xD;&#xA;&lt;/h2&gt;&lt;p&gt;dir1文件导包时做处理。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;主函数加入这四行，将项目的根目录(webapp)的路径加入到系统PATH中；&#xA;import os,sys&lt;/p&gt;&#xA;&lt;p&gt;from pathlib import Path&lt;/p&gt;&#xA;&lt;p&gt;sys.path[0] = str(Path(sys.path[0]).parent.parent)&lt;/p&gt;&#xA;&lt;p&gt;sys.path.append(os.getcwd())&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;且导包从项目执行入口文件同级开始写&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guangpuyun.feishu.cn/space/api/box/stream/download/asynccode/?code=MzlhZjJjZjgzNzk4YjdjNzU2ZWQ1ZDdjMjA5ODI0MDZfTzN2ZmlQOVM0a1BERU95VkY1amZ5bTFXMEJsc09pTExfVG9rZW46UlgyTmJCdHdLb0I5Z2d4VktJcmNEbDNvblljXzE3NDI0NjExMTk6MTc0MjQ2NDcxOV9WNA&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>python的os模块使用</title>
      <link>http://localhost:1313/post/python%E4%B8%AD%E7%9A%84os%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/python%E4%B8%AD%E7%9A%84os%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;os.listdir(path)&#xA;获取文件夹下全部文件，的列表&lt;/li&gt;&#xA;&lt;li&gt;os.path.join(path1,path2)&#xA;将路径path1和路径path2拼接成新的路径，path1//path2&lt;/li&gt;&#xA;&lt;li&gt;base_dir = os.path.dirname(os.path.abspath(&lt;strong&gt;file&lt;/strong&gt;))&#xA;获取当前文件的绝对路径&lt;/li&gt;&#xA;&lt;li&gt;input_file = os.path.join(base_dir, &lt;strong&gt;&amp;quot;../resource/swaggerApi/clinic-ysb-app_OpenAPI.json&amp;quot;&lt;/strong&gt;)&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>scrapy爬柚子网示例</title>
      <link>http://localhost:1313/post/scrapy%E7%88%AC%E6%9F%9A%E5%AD%90%E7%BD%91%E7%A4%BA%E4%BE%8B/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/scrapy%E7%88%AC%E6%9F%9A%E5%AD%90%E7%BD%91%E7%A4%BA%E4%BE%8B/</guid>
      <description>&lt;p&gt;柚子网https://www.uu-zz.com/&lt;/p&gt;&#xA;&lt;p&gt;爬取页码&lt;/p&gt;&#xA;&lt;p&gt;遍历页面内对应的视频集的链接&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/O1YCbvbQBoiZYHxxbO7cqOi6nKb?preview_type=16&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;遍历视频内子视频链接&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/CKMPbtR4souEnDxWowNcxAuenNc?preview_type=16&#34; alt=&#34;&#34;&gt;!&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://security.feishu.cn/link/safety?target=https%3A%2F%2Fwww.uu-zz.com%2F%2B%E5%AD%90%E8%A7%86%E9%A2%91%E9%93%BE%E6%8E%A5&amp;amp;scene=ccm&amp;amp;logParams=%7B%22location%22%3A%22ccm_mindnote%22%7D&amp;amp;lang=zh-CN&#34;&gt;https://www.uu-zz.com/+子视频链接&lt;/a&gt;，发送get请求&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/ClLDbx3s5o29xpxWKrncnG3Enzg?preview_type=16&#34; alt=&#34;&#34;&gt;!&lt;/p&gt;&#xA;&lt;p&gt;获得m3u8文件，储存在数据库&lt;/p&gt;</description>
    </item>
    <item>
      <title>unnitest</title>
      <link>http://localhost:1313/post/unnitest%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate>
      <guid>http://localhost:1313/post/unnitest%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;一、引入&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.导包，import unnitest&lt;/li&gt;&#xA;&lt;li&gt;2.编写测试类，继承unnitest&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;二、运行&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;1.unnitest.main(),运行全部用例&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;2.测试套：testsuite&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;创建：suite=unnitest.Testsuite()&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;测试套添加用例：suite.addtTest（类（方法））&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;img src=&#34;images/1742460595596.png&#34; alt=&#34;1742460595596&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;运行：runner=unnitest.TextTestRunner()&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;运行：runner.run(suite)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;*运行必须在命令行运行否则是运行全部用例&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;三、生成报告&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;image/unnitest%E7%AC%94%E8%AE%B0/1742460643666.png&#34; alt=&#34;1742460643666&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1.将HTMLTestRunner.py文件放到项目文件夹下&lt;/li&gt;&#xA;&lt;li&gt;2.导包：如左图&lt;/li&gt;&#xA;&lt;li&gt;3.创建测试套，参考上方&lt;/li&gt;&#xA;&lt;li&gt;4.创建测试报告文件，且以测试套运行（参考左图）&lt;/li&gt;&#xA;&lt;li&gt;&lt;img src=&#34;image/unnitest%E7%AC%94%E8%AE%B0/1742460677985.png&#34; alt=&#34;1742460677985&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;与pytest的异同&lt;/li&gt;&#xA;&lt;li&gt;&lt;img src=&#34;image/unnitest%E7%AC%94%E8%AE%B0/1742460760547.png&#34; alt=&#34;1742460760547&#34;&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;pytest以mark方式组织用例（而非套件）&lt;img src=&#34;image/unnitest%E7%AC%94%E8%AE%B0/1742460791823.png&#34; alt=&#34;1742460791823&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;面试相关&lt;img src=&#34;image/unnitest%E7%AC%94%E8%AE%B0/1742460820437.png&#34; alt=&#34;1742460820437&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;pycharm关闭pytest测试模式&lt;img src=&#34;image/unnitest%E7%AC%94%E8%AE%B0/1742460849632.png&#34; alt=&#34;1742460849632&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
