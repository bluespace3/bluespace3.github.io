<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/css/xml-style.css" type="text/css"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on 蓝色空间号-新世界的探索者</title><link>https://bluespace3.github.io/</link><description>Recent content in Hugo on 蓝色空间号-新世界的探索者</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 25 Mar 2025 12:00:00 +0800</lastBuildDate><atom:link href="https://bluespace3.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>加密文章示例</title><link>https://bluespace3.github.io/post/encrypted-example/</link><pubDate>Tue, 25 Mar 2025 12:00:00 +0800</pubDate><guid>https://bluespace3.github.io/post/encrypted-example/</guid><description>&lt;h2 id="这是一篇加密的文章">
&lt;a class="header-anchor" href="#%e8%bf%99%e6%98%af%e4%b8%80%e7%af%87%e5%8a%a0%e5%af%86%e7%9a%84%e6%96%87%e7%ab%a0">&lt;/a>
这是一篇加密的文章
&lt;/h2>&lt;p>只有输入正确的密码才能查看这篇文章的内容。&lt;/p>
&lt;h3 id="如何设置文章加密">
&lt;a class="header-anchor" href="#%e5%a6%82%e4%bd%95%e8%ae%be%e7%bd%ae%e6%96%87%e7%ab%a0%e5%8a%a0%e5%af%86">&lt;/a>
如何设置文章加密
&lt;/h3>&lt;p>在文章的前置参数中添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">encrypted&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;你的密码&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就可以为文章添加密码保护了。&lt;/p>
&lt;h3 id="密码保护的工作原理">
&lt;a class="header-anchor" href="#%e5%af%86%e7%a0%81%e4%bf%9d%e6%8a%a4%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86">&lt;/a>
密码保护的工作原理
&lt;/h3>&lt;ol>
&lt;li>当用户访问加密文章时，会显示密码输入框&lt;/li>
&lt;li>用户输入正确的密码后，文章内容才会显示&lt;/li>
&lt;li>密码验证在浏览器端进行，不需要服务器支持&lt;/li>
&lt;li>使用sessionStorage保存解锁状态，避免刷新页面后需要重新输入密码&lt;/li>
&lt;/ol>
&lt;h3 id="注意事项">
&lt;a class="header-anchor" href="#%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9">&lt;/a>
注意事项
&lt;/h3>&lt;ul>
&lt;li>这种加密方式只是前端加密，不能防止真正的黑客攻击&lt;/li>
&lt;li>适合用于简单的内容保护，不适合保护高度敏感的信息&lt;/li>
&lt;li>密码直接保存在文章的前置参数中，所以不要使用您在其他地方使用的重要密码&lt;/li>
&lt;/ul></description></item><item><title>Hugo静态网站生成器入门指南</title><link>https://bluespace3.github.io/post/hugo%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/hugo%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99%E7%94%9F%E6%88%90%E5%99%A8%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</guid><description>&lt;h2 id="什么是hugo">
&lt;a class="header-anchor" href="#%e4%bb%80%e4%b9%88%e6%98%afhugo">&lt;/a>
什么是Hugo？
&lt;/h2>&lt;p>Hugo是一个用Go语言编写的快速、现代的静态网站生成器。它可以将Markdown文件转换为HTML页面，非常适合构建文档网站、博客等。&lt;/p>
&lt;h2 id="hugo的主要特点">
&lt;a class="header-anchor" href="#hugo%e7%9a%84%e4%b8%bb%e8%a6%81%e7%89%b9%e7%82%b9">&lt;/a>
Hugo的主要特点
&lt;/h2>&lt;ul>
&lt;li>极快的构建速度&lt;/li>
&lt;li>丰富的主题支持&lt;/li>
&lt;li>简单的Markdown内容管理&lt;/li>
&lt;li>强大的模板系统&lt;/li>
&lt;li>内置的短代码功能&lt;/li>
&lt;/ul>
&lt;h2 id="安装hugo">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85hugo">&lt;/a>
安装Hugo
&lt;/h2>&lt;p>在Windows上安装Hugo的步骤：&lt;/p>
&lt;ol>
&lt;li>下载Hugo的Windows版本&lt;/li>
&lt;li>解压到指定目录&lt;/li>
&lt;li>将Hugo的可执行文件路径添加到系统环境变量&lt;/li>
&lt;/ol>
&lt;h2 id="创建新站点">
&lt;a class="header-anchor" href="#%e5%88%9b%e5%bb%ba%e6%96%b0%e7%ab%99%e7%82%b9">&lt;/a>
创建新站点
&lt;/h2>&lt;p>使用以下命令创建一个新的Hugo站点：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new site mydocs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下载插件">
&lt;a class="header-anchor" href="#%e4%b8%8b%e8%bd%bd%e6%8f%92%e4%bb%b6">&lt;/a>
下载插件
&lt;/h2>&lt;h2 id="添加内容">
&lt;a class="header-anchor" href="#%e6%b7%bb%e5%8a%a0%e5%86%85%e5%ae%b9">&lt;/a>
添加内容
&lt;/h2>&lt;p>在content目录下创建Markdown文件来添加内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new blog/my-first-post.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行开发服务器">
&lt;a class="header-anchor" href="#%e8%bf%90%e8%a1%8c%e5%bc%80%e5%8f%91%e6%9c%8d%e5%8a%a1%e5%99%a8">&lt;/a>
运行开发服务器
&lt;/h2>&lt;p>使用以下命令启动开发服务器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server -D --environment development &lt;span class="c1">#如果未设置环境变量则不需要指定环境。&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="部署网站">
&lt;a class="header-anchor" href="#%e9%83%a8%e7%bd%b2%e7%bd%91%e7%ab%99">&lt;/a>
部署网站
&lt;/h2>&lt;p>使用以下命令生成静态文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>然后将public目录下的文件部署到Web服务器即可，注意每次推送前运行hugo更新public文件夹&lt;/li>
&lt;li>若有更新域名，请删除public后，再运行hugo重新生成public，否则会出现路由错误的情况。&lt;/li>
&lt;li>为了方便新建.sh脚本文件，命名为.command.sh&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 判断是否已初始化Git仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -d &lt;span class="s2">&amp;#34;.git&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;未检测到Git仓库，正在初始化...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Git仓库已初始化&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建.gitignore文件，排除不需要版本控制的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; .gitignore &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">resources/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">.DS_Store
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">node_modules/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">.hugo_build.lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加所有文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 提交更改&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;更新博客&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 检查是否已关联远程仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">REMOTE_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>git remote get-url origin 2&amp;gt;/dev/null&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$REMOTE_URL&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;未检测到远程仓库，正在添加...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git remote add origin https://github.com/bluespace3/bluespace3.github.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;已关联远程仓库：&lt;/span>&lt;span class="nv">$REMOTE_URL&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 推送到GitHub&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main --force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>终端运行 ..command.sh&lt;/li>
&lt;/ol>
&lt;h2 id="更新维护">
&lt;a class="header-anchor" href="#%e6%9b%b4%e6%96%b0%e7%bb%b4%e6%8a%a4">&lt;/a>
更新维护
&lt;/h2>&lt;p>后期维护有许多要留意的地方否则容易踩坑。&lt;/p></description></item></channel></rss>