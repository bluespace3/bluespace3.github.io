<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>蓝色空间号-新世界的探索者</title><link>https://ceshitian.github.io/archives/</link><description>Recent content on 蓝色空间号-新世界的探索者</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 20 Mar 2025 12:59:32 +0800</lastBuildDate><atom:link href="https://ceshitian.github.io/archives/index.xml" rel="self" type="application/rss+xml"/><item><title>linux常用命令</title><link>https://ceshitian.github.io/archives/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://ceshitian.github.io/archives/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;h3 id="文章目录">
&lt;a class="header-anchor" href="#%e6%96%87%e7%ab%a0%e7%9b%ae%e5%bd%95">&lt;/a>
文章目录
&lt;/h3>&lt;ul>
&lt;li>一、目录操作
&lt;ul>
&lt;li>1、批量操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>二、文件操作&lt;/li>
&lt;li>三、文件内容操作（查看日志，更改配置文件）
&lt;ul>
&lt;li>1、grep(检索文件内容)&lt;/li>
&lt;li>2、awk(数据统计)&lt;/li>
&lt;li>3、sed(替换文件内容)&lt;/li>
&lt;li>4、管道操作符 &lt;code>|&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>四、系统日志位置&lt;/li>
&lt;li>五、创建与删除软连接&lt;/li>
&lt;li>六、压缩和解压缩&lt;/li>
&lt;li>七、Linux下文件的详细信息&lt;/li>
&lt;li>八、常用的docker容器的命令：&lt;/li>
&lt;li>九、运维常用命令
&lt;ul>
&lt;li>1、查看服务器端口号是否可用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十、yum常用命令&lt;/li>
&lt;li>十一、其他命令
&lt;ul>
&lt;li>1、xargs&lt;/li>
&lt;li>2、curl语法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十二、Linux内核优化&lt;/li>
&lt;li>十三、用户权限操作
&lt;ul>
&lt;li>1、用户操作&lt;/li>
&lt;li>2、添加组&lt;/li>
&lt;li>3、sudo用户权限操作&lt;/li>
&lt;li>4、更换文件所有者&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十四、TOP
&lt;ul>
&lt;li>1、统计信息区&lt;/li>
&lt;li>2、进程信息区&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十五、文件安装
&lt;ul>
&lt;li>1、文件下载(lrzsz)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十六、文章PDF版本&lt;/li>
&lt;/ul>
&lt;p>Linux 系统目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Shell" data-lang="Shell">&lt;span class="line">&lt;span class="cl">├── bin -&amp;gt; usr/bin &lt;span class="c1"># 用于存放二进制命令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── boot &lt;span class="c1"># 内核及引导系统程序所在的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── dev &lt;span class="c1"># 所有设备文件的目录（如磁盘、光驱等）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── etc &lt;span class="c1"># 配置文件默认路径、服务启动命令存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── home &lt;span class="c1"># 用户家目录，root用户为/root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lib -&amp;gt; usr/lib &lt;span class="c1"># 32位库文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lib64 -&amp;gt; usr/lib64 &lt;span class="c1"># 64位库文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── media &lt;span class="c1"># 媒体文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── mnt &lt;span class="c1"># 临时挂载设备目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── opt &lt;span class="c1"># 自定义软件安装存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── proc &lt;span class="c1"># 进程及内核信息存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── root &lt;span class="c1"># Root用户家目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── run &lt;span class="c1"># 系统运行时产生临时文件，存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── sbin -&amp;gt; usr/sbin &lt;span class="c1"># 系统管理命令存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── srv &lt;span class="c1"># 服务启动之后需要访问的数据目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── sys &lt;span class="c1"># 系统使用目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tmp &lt;span class="c1"># 临时文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── usr &lt;span class="c1"># 系统命令和帮助文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── var &lt;span class="c1"># 存放内容易变的文件的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">12345678910111213141516171819&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="一目录操作">
&lt;a class="header-anchor" href="#%e4%b8%80%e7%9b%ae%e5%bd%95%e6%93%8d%e4%bd%9c">&lt;/a>
一、目录操作
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Shell" data-lang="Shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">pwd&lt;/span> 查看当前工作目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">clear 清除屏幕
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~ 当前用户目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> / 根目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> - 上一次访问的目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> .. 上一级目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">123456&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>查看目录内信息&lt;/strong>&lt;/p></description></item><item><title>playwright的python文档</title><link>https://ceshitian.github.io/archives/playwright%E7%9A%84python%E6%96%87%E6%A1%A3/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://ceshitian.github.io/archives/playwright%E7%9A%84python%E6%96%87%E6%A1%A3/</guid><description>&lt;h1 id="安装">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85">&lt;/a>
安装
&lt;/h1>&lt;h2 id="引言">
&lt;a class="header-anchor" href="#%e5%bc%95%e8%a8%80">&lt;/a>
引言
&lt;/h2>&lt;p>Playwright 是专门为满足端到端测试的需求而创建的。Playwright 支持包括 Chromium、WebKit 和 Firefox 在内的所有现代渲染引擎。在 Windows、Linux 和 macOS 上进行测试，无论是本地还是在 CI 上，无论是无头模式还是有头模式，都可以使用原生移动设备仿真。&lt;/p>
&lt;p>Playwright 库可以用作通用的浏览器自动化工具，为同步和异步 Python 提供了一套强大的 API 来自动化 Web 应用程序。&lt;/p>
&lt;p>本介绍描述了 Playwright Pytest 插件，这是编写端到端测试的推荐方式。&lt;/p>
&lt;p>&lt;strong>你将学到&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>如何安装 Playwright Pytest&lt;/li>
&lt;li>如何运行示例测试&lt;/li>
&lt;/ul>
&lt;h2 id="安装-playwright-pytest">
&lt;a class="header-anchor" href="#%e5%ae%89%e8%a3%85-playwright-pytest">&lt;/a>
安装 Playwright Pytest
&lt;/h2>&lt;p>Playwright 建议使用官方的 Playwright Pytest 插件来编写端到端测试。它提供了上下文隔离，并开箱即用地在多个浏览器配置上运行。&lt;/p>
&lt;p>首先，通过安装 Playwright 并运行示例测试来开始，亲眼看看它是如何工作的。&lt;/p>
&lt;ul>
&lt;li>PyPI&lt;/li>
&lt;li>Anaconda&lt;/li>
&lt;/ul>
&lt;p>安装所需的浏览器：&lt;/p>
&lt;h2 id="添加示例测试">
&lt;a class="header-anchor" href="#%e6%b7%bb%e5%8a%a0%e7%a4%ba%e4%be%8b%e6%b5%8b%e8%af%95">&lt;/a>
添加示例测试
&lt;/h2>&lt;p>在当前工作目录或遵循 &lt;code>test_&lt;/code> 前缀约定的子目录中创建一个文件，例如 &lt;code>test_example.py&lt;/code>，并在其中包含以下代码。确保你的测试名称也遵循 &lt;code>test_&lt;/code> 前缀约定。&lt;/p>
&lt;p>test_example.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">playwright.sync_api&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">expect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_has_title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">goto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://playwright.dev/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 期望标题“包含”一个子字符串。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_have_title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Playwright&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_get_started_link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">goto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://playwright.dev/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 点击“开始”链接。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_by_role&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Get started&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 期望页面有一个名为“安装”的标题。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_by_role&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;heading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Installation&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_be_visible&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行示例测试">
&lt;a class="header-anchor" href="#%e8%bf%90%e8%a1%8c%e7%a4%ba%e4%be%8b%e6%b5%8b%e8%af%95">&lt;/a>
运行示例测试
&lt;/h2>&lt;p>默认情况下，测试将在 Chromium 上运行。这可以通过 CLI 选项进行配置。测试以无头模式运行，这意味着在运行测试时不会打开浏览器 UI。测试结果和测试日志将在终端中显示。&lt;/p></description></item></channel></rss>