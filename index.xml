<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>蓝色空间号-新世界的探索者</title><link>https://bluespace3.github.io/algolia.json</link><description>Recent content on 蓝色空间号-新世界的探索者</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 25 Mar 2025 21:43:32 +0800</lastBuildDate><atom:link href="https://bluespace3.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>《金字塔原理》解析</title><link>https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/</link><pubDate>Tue, 25 Mar 2025 21:43:32 +0800</pubDate><guid>https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/</guid><description>&lt;h4 id="金字塔原理读书笔记全">《&lt;a href="https://so.csdn.net/so/search?q=%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86&amp;amp;spm=1001.2101.3001.7020">金字塔原理&lt;/a>》读书笔记（全）&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%b8%80-%e8%a1%a8%e8%be%be%e7%9a%84%e9%80%bb%e8%be%91">一、 表达的逻辑&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#1-%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e7%94%a8%e9%87%91%e5%ad%97%e5%a1%94">1. 为什么要用金字塔？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#2-%e9%87%91%e5%ad%97%e5%a1%94%e5%86%85%e9%83%a8%e7%bb%93%e6%9e%84">2. 金字塔内部结构&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#3-%e5%a6%82%e4%bd%95%e6%9e%84%e5%bb%ba%e9%87%91%e5%ad%97%e5%a1%94">3. 如何构建金字塔？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#4-%e5%ba%8f%e8%a8%80%e7%9a%84%e5%85%b7%e4%bd%93%e5%86%99%e6%b3%95">4. 序言的具体写法&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#5-%e6%bc%94%e7%bb%8e%e6%8e%a8%e7%90%86%e4%b8%8e%e5%bd%92%e7%ba%b3%e6%8e%a8%e7%90%86">5. 演绎推理与归纳推理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%ba%8c-%e6%80%9d%e8%80%83%e7%9a%84%e9%80%bb%e8%be%91">二、 思考的逻辑&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#6%e5%ba%94%e7%94%a8%e9%80%bb%e8%be%91%e9%a1%ba%e5%ba%8f">6.应用逻辑顺序&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%b8%80%e6%97%b6%e9%97%b4%e9%a1%ba%e5%ba%8f">（一）时间顺序&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%ba%8c%e7%bb%93%e6%9e%84%e9%a1%ba%e5%ba%8f">（二）结构顺序&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%b8%89%e7%a8%8b%e5%ba%a6%e9%a1%ba%e5%ba%8f">（三）程度顺序&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#7%e6%a6%82%e6%8b%ac%e8%bf%99%e7%a7%8d%e6%80%9d%e6%83%b3">7.概括这种思想&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%b8%80%e8%a1%8c%e5%8a%a8%e6%80%a7%e6%80%9d%e6%83%b3%e7%9a%84%e6%a6%82%e6%8b%ac%e8%af%b4%e6%98%8e%e9%87%87%e5%8f%96%e8%a1%8c%e5%8a%a8%e7%9a%84%e7%bb%93%e6%9e%9c%e7%9b%ae%e6%a0%87">（一）行动性思想的概括——说明采取行动的结果/目标&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%ba%8c%e6%8f%8f%e8%bf%b0%e6%80%a7%e6%80%9d%e6%83%b3%e7%9a%84%e6%a6%82%e6%8b%ac%e6%89%be%e5%87%ba%e5%90%84%e7%bb%93%e8%ae%ba%e4%b9%8b%e9%97%b4%e7%9a%84%e5%85%b1%e6%80%a7">（二）描述性思想的概括——找出各结论之间的共性&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%b8%89-%e8%a7%a3%e5%86%b3%e9%97%ae%e9%a2%98%e7%9a%84%e9%80%bb%e8%be%91">三、 解决问题的逻辑&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#8%e7%95%8c%e5%ae%9a%e9%97%ae%e9%a2%98">8.界定问题&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%b8%80%e7%95%8c%e5%ae%9a%e9%97%ae%e9%a2%98%e7%9a%84%e8%bf%9e%e7%bb%ad%e5%88%86%e6%9e%90%e6%b3%95">（一）界定问题的连续分析法：&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e4%ba%8c%e7%95%8c%e5%ae%9a%e9%97%ae%e9%a2%98%e7%9a%84%e6%a1%86%e6%9e%b6">（二）界定问题的框架&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#9%e7%bb%93%e6%9e%84%e5%8c%96%e5%88%86%e6%9e%90%e9%97%ae%e9%a2%98">9.结构化分析问题&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e5%9b%9b-%e6%bc%94%e7%a4%ba%e7%9a%84%e9%80%bb%e8%be%91">四、 演示的逻辑&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#10%e5%9c%a8%e4%b9%a6%e9%9d%a2%e4%b8%8a%e5%91%88%e7%8e%b0%e9%87%91%e5%ad%97%e5%a1%94">10.在书面上呈现金字塔&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#11%e5%9c%a8ppt%e4%b8%ad%e5%91%88%e7%8e%b0%e9%87%91%e5%ad%97%e5%a1%94">11.在PPT中呈现金字塔&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#12%e5%9c%a8%e5%ad%97%e9%87%8c%e8%a1%8c%e9%97%b4%e5%91%88%e7%8e%b0%e9%87%91%e5%ad%97%e5%a1%94">12.在字里行间呈现金字塔&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e8%af%bb%e5%90%8e%e5%bf%83%e5%be%97">读后心得&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bluespace3.github.io/post/%E9%87%91%E5%AD%97%E5%A1%94%E5%8E%9F%E7%90%86%E8%A7%A3%E6%9E%90/#%e9%83%a8%e5%88%86%e5%8f%82%e8%80%83%e7%ac%94%e8%ae%b0">部分参考笔记：&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">	《金字塔原理》资源EPUB：链接：https://pan.baidu.com/s/1-2uv0ktITGT51ft603KfCQ 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">	提取码：aioh 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">	
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">	《金字塔原理》资源PDF：链接：https://pan.baidu.com/s/1Z5WIpUSCm9qr7sJhDyf-sQ 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">	提取码：h1sk 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">12345AI写代码
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>金字塔原理是为了解决沟通、表达或是思考问题时思维混乱、分不清主次的问题。而其背后的方法论就是–搭建金字塔，以金字塔原理进行表达。&lt;br>
书分为四部分：&lt;/p>
&lt;ol>
&lt;li>表达的逻辑：说，使用金字塔原理的原因和具体构建方法；&lt;/li>
&lt;li>思考的逻辑：想，使用金字塔原理过程中的应用逻辑要素；&lt;/li>
&lt;li>解决问题的逻辑：做，在实例中界定、解构、分析、解决问题；&lt;/li>
&lt;li>演示的逻辑：表演，在PPT演示中和文字中呈现金字塔。&lt;br>
&lt;img src="https://i-blog.csdnimg.cn/blog_migrate/c3f84e145fab4e8498edd5048f269561.png" alt="在这里插入图片描述">&lt;/li>
&lt;/ol>
&lt;h2 id="一-表达的逻辑">一、 表达的逻辑&lt;/h2>
&lt;h3 id="1-为什么要用金字塔">1. 为什么要用金字塔？&lt;/h3>
&lt;p>究其原因是和人脑的思维逻辑有关系，人们思考的习惯方式倾向于对输入信息进行自动联想和关联，而对于那些没有逻辑或关联的内容习惯性忽略。所以金字塔结构表达，加强逻辑关联，可以让我们沟通更加高效。《金字塔原理》中指出，人类的思维结构一般有以下几个规律：&lt;/p>
&lt;ul>
&lt;li>大脑会自动将有相关联的信息进行归类；&lt;/li>
&lt;li>一次记忆不超过7个思想、概念或项目；&lt;/li>
&lt;li>在进行观点阐述时将背景、冲突、疑问等进行说明与解答可以更好地吸引读者注意力。&lt;/li>
&lt;/ul>
&lt;p>因此当我们在进行写作和演讲活动时，为了让受众更好地了解并接受我们所表达的观点我们必须：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>归类分组，将思想组织成金字塔&lt;/strong>：将关键词罗列出来，并组织归类；&lt;/li>
&lt;li>&lt;strong>找出逻辑关系，抽象概况&lt;/strong>：找到同类内容之后，我们需要对这部分共性内容进行抽象；&lt;/li>
&lt;li>&lt;strong>自上而下表达，结论先行&lt;/strong>：当我们先提出总的概念，再列出具体项目，即自上而下地呈现思想时，可以最有效的进行沟通和写作表达，类似于从收敛到发散的过程，脑图结构；&lt;/li>
&lt;li>&lt;strong>自下而上思考，总结概括&lt;/strong>：思维从底层开始构建，句子按照某种逻辑顺序组成段落，之后将段落组成章节，最后章节组成文章，金字塔最顶端的思想（中心思想、核心观点）代表整片文章观点。&lt;br>
&lt;img src="https://i-blog.csdnimg.cn/blog_migrate/362bfb90a78a3f267ddfe0333372fe20.png" alt="文章中思想应组成单一思想统领下的金字塔结构">&lt;br>
文章的思想有三种关联方式：向上、向下、横向。&lt;/li>
&lt;li>纵向：文章中每一层次上的思想必须是对下一层次思想的概括&lt;/li>
&lt;li>横向：每组中的思想必须同属于同一逻辑范畴&lt;/li>
&lt;li>横向：每组中思想必须按逻辑顺序组织&lt;/li>
&lt;/ul>
&lt;p>而思想的组织存在4种逻辑顺序：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>演绎顺序&lt;/strong>：大前提、小前提、结论&lt;/li>
&lt;li>&lt;strong>时间（步骤）顺序&lt;/strong>：第一、第二、第三&lt;/li>
&lt;li>&lt;strong>结构（空间）顺序&lt;/strong>：波士顿、纽约、华盛顿&lt;/li>
&lt;li>&lt;strong>程度（重要性）顺序&lt;/strong>：最重要、次重要&lt;/li>
&lt;/ul>
&lt;h3 id="2-金字塔内部结构">2. 金字塔内部结构&lt;/h3>
&lt;p>&lt;strong>纵向关系&lt;/strong>：纵向关系是疑问-回答式的表达方式，让读者产生”为什么这么做的想法“，类似于层层推理。&lt;br>
&lt;img src="https://i-blog.csdnimg.cn/blog_migrate/6293c4ba0f4ff6bdab25842805d19b58.png" alt="在这里插入图片描述">&lt;img src="https://i-blog.csdnimg.cn/blog_migrate/ac3217655f95ce686f2e87eb5ea0950a.png" alt="在这里插入图片描述">&lt;/p></description></item><item><title>gitlab配置cicd工作流</title><link>https://bluespace3.github.io/post/gitlab%E9%85%8D%E7%BD%AEcicd%E5%B7%A5%E4%BD%9C%E6%B5%81/</link><pubDate>Tue, 25 Mar 2025 12:00:00 +0800</pubDate><guid>https://bluespace3.github.io/post/gitlab%E9%85%8D%E7%BD%AEcicd%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid><description>&lt;h2 id="gitlab-cicd-简介">GitLab CI/CD 简介&lt;/h2>
&lt;p>GitLab CI/CD 是 GitLab 内置的持续集成/持续部署工具，它允许开发者在代码提交后自动执行一系列任务，如构建、测试和部署。通过配置 CI/CD 流程，可以大大提高开发效率，减少人为错误，并确保代码质量。&lt;/p>
&lt;h3 id="cicd-核心概念">CI/CD 核心概念&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>持续集成 (CI)&lt;/strong>: 开发人员频繁地将代码集成到主分支，每次集成都通过自动化构建和测试来验证，从而尽早发现问题。&lt;/li>
&lt;li>&lt;strong>持续交付 (CD)&lt;/strong>: 确保代码随时可以部署到生产环境，通常包括自动化测试和部署流程。&lt;/li>
&lt;li>&lt;strong>持续部署 (CD)&lt;/strong>: 将持续交付更进一步，自动将通过测试的代码部署到生产环境。&lt;/li>
&lt;/ul>
&lt;h2 id="gitlab-ciyml-配置文件">.gitlab-ci.yml 配置文件&lt;/h2>
&lt;p>GitLab CI/CD 的核心是 &lt;code>.gitlab-ci.yml&lt;/code> 文件，它定义了 CI/CD 流水线的结构和行为。该文件需要放在项目的根目录下。&lt;/p>
&lt;h3 id="基本结构">基本结构&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 定义阶段&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 定义作业&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build_job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Building the app&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">make build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test_job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Running tests&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">make test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy_job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;Deploying the app&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">make deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="关键组件">关键组件&lt;/h3>
&lt;ol>
&lt;li>&lt;strong>stages&lt;/strong>: 定义流水线的阶段，按顺序执行。&lt;/li>
&lt;li>&lt;strong>jobs&lt;/strong>: 定义在特定阶段执行的任务。&lt;/li>
&lt;li>&lt;strong>script&lt;/strong>: 在作业中执行的命令。&lt;/li>
&lt;li>&lt;strong>only/except&lt;/strong>: 控制作业何时运行（例如，只在特定分支上运行）。&lt;/li>
&lt;/ol>
&lt;h2 id="gitlab-runner">GitLab Runner&lt;/h2>
&lt;p>GitLab Runner 是执行 CI/CD 作业的代理，它可以安装在不同的环境中，如 Linux、Windows、macOS 等。&lt;/p></description></item><item><title>git操作</title><link>https://bluespace3.github.io/post/git%E6%93%8D%E4%BD%9C/</link><pubDate>Tue, 25 Mar 2025 12:00:00 +0800</pubDate><guid>https://bluespace3.github.io/post/git%E6%93%8D%E4%BD%9C/</guid><description>&lt;h2 id="git回滚操作">git回滚操作&lt;/h2>
&lt;h3 id="回滚到上一个版本">回滚到上一个版本&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git reset --hard HEAD^
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="回滚到指定版本">回滚到指定版本&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git reset --hard &amp;lt;commit_id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>加密文章示例</title><link>https://bluespace3.github.io/post/encrypted-example/</link><pubDate>Tue, 25 Mar 2025 12:00:00 +0800</pubDate><guid>https://bluespace3.github.io/post/encrypted-example/</guid><description>&lt;h2 id="这是一篇加密的文章">这是一篇加密的文章&lt;/h2>
&lt;p>只有输入正确的密码才能查看这篇文章的内容。&lt;/p>
&lt;h3 id="如何设置文章加密">如何设置文章加密&lt;/h3>
&lt;p>在文章的前置参数中添加以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">encrypted&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;你的密码&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这样就可以为文章添加密码保护了。&lt;/p>
&lt;h3 id="密码保护的工作原理">密码保护的工作原理&lt;/h3>
&lt;ol>
&lt;li>当用户访问加密文章时，会显示密码输入框&lt;/li>
&lt;li>用户输入正确的密码后，文章内容才会显示&lt;/li>
&lt;li>密码验证在浏览器端进行，不需要服务器支持&lt;/li>
&lt;li>使用sessionStorage保存解锁状态，避免刷新页面后需要重新输入密码&lt;/li>
&lt;/ol>
&lt;h3 id="注意事项">注意事项&lt;/h3>
&lt;ul>
&lt;li>这种加密方式只是前端加密，不能防止真正的黑客攻击&lt;/li>
&lt;li>适合用于简单的内容保护，不适合保护高度敏感的信息&lt;/li>
&lt;li>密码直接保存在文章的前置参数中，所以不要使用您在其他地方使用的重要密码&lt;/li>
&lt;/ul></description></item><item><title>将github变为免费图床</title><link>https://bluespace3.github.io/post/%E4%BD%BF%E7%94%A8gihub%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</link><pubDate>Fri, 21 Mar 2025 23:00:32 +0800</pubDate><guid>https://bluespace3.github.io/post/%E4%BD%BF%E7%94%A8gihub%E4%BD%9C%E4%B8%BA%E5%9B%BE%E5%BA%8A/</guid><description>&lt;h2 id="使用-github-作为免费图床的文档">使用 GitHub 作为免费图床的文档&lt;/h2>
&lt;p>最近就想找一款免费的图床来放置自己的图片，逛了一圈下来发现GitHub可以白嫖，于是乎，就有了这篇文章。&lt;/p>
&lt;p>GitHub 是一个非常流行的代码托管平台，除了代码存储外，你还可以使用 GitHub 来托管静态资源，比如图片。通过将图片上传到 GitHub 的仓库，你可以轻松获取图片的 URL，从而在网页或文档中嵌入这些图片。以下是如何使用 GitHub 作为免费图床的详细步骤。&lt;/p>
&lt;h3 id="步骤-1-创建-github-仓库">步骤 1: 创建 GitHub 仓库&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>登录到 &lt;a href="https://github.com/">GitHub&lt;/a>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击右上角的 &amp;ldquo;+&amp;rdquo; 按钮，然后选择 &amp;ldquo;New repository&amp;rdquo;。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>填写仓库的名称（例如：&lt;code>my-image-hosting&lt;/code>），并设置为公开（Public）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>点击 &amp;ldquo;Create repository&amp;rdquo; 创建仓库。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-cdd72cbacf64cf512b0426eb2362d3e6_1440w.jpg" alt="">&lt;/p>
&lt;h3 id="步骤-2-github获取个人的token">步骤 2: GitHub获取个人的Token&lt;/h3>
&lt;ol>
&lt;li>访问：&lt;a href="https://github.com/settings/tokens">settings-tokens&lt;/a> ，点击&lt;strong>Generate new token&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://picx.zhimg.com/v2-2148c04aa5bc07ccea01b2273ba65033_1440w.jpg" alt="">&lt;/p>
&lt;p>2.设置 token 属性 ，Expiration：永不过期，Select scopes：&lt;code>repo&lt;/code> 一定要全选，其他的无所谓 ，点击最下方&lt;strong>创建&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://pica.zhimg.com/v2-ef2f47f1c64e0b095e040cf103ea8b62_1440w.jpg" alt="">&lt;/p>
&lt;ol>
&lt;li>就会获得一个token字符串， &lt;strong>⚠️ 注意：一定要收藏好 token，因为只会显示一次！&lt;/strong>，关掉这个页面就再也看不见了。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!IMPORTANT] &lt;strong>后续会继续使用这个token!!!!&lt;/strong>&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://pica.zhimg.com/v2-7efb7778246d4e3964471f46c290f790_1440w.jpg" alt="">&lt;/p>
&lt;h3 id="步骤-3-下载picgo">步骤 3: 下载PicGo&lt;/h3>
&lt;ol>
&lt;li>在PicGo最新页面上下载它的安装包。&lt;a href="https://github.com/Molunerfinn/PicGo/releases">PicGo下载页面&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://picx.zhimg.com/v2-4e1070ec6988ea104dd9f339af322d4b_1440w.jpg" alt="">&lt;/p>
&lt;ol>
&lt;li>
&lt;p>安装PicGo。无需赘述&lt;/p>
&lt;/li>
&lt;li>
&lt;p>配置GitHub&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://picx.zhimg.com/v2-86772b08f48e060e991b724d7d11b677_1440w.jpg" alt="">&lt;/p>
&lt;p>​&lt;/p>
&lt;ol>
&lt;li>&lt;strong>PicGo 上传区配置选中你的配置&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://pic4.zhimg.com/v2-01a76c0126a75365b9bdc2e2163edda7_1440w.jpg" alt="">&lt;/p>
&lt;p>​ 选择完成配置之后就可以拖拉拽上传文件了。&lt;/p>
&lt;h3 id="步骤-4-typora中使用">步骤 4: &lt;a href="https://zhida.zhihu.com/search?content_id=253465306&amp;amp;content_type=Article&amp;amp;match_order=1&amp;amp;q=Typora&amp;amp;zhida_source=entity">Typora&lt;/a>中使用&lt;/h3>
&lt;ol>
&lt;li>打开Typora，在文件选项中选中偏好设置。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://pic3.zhimg.com/v2-b7c8c84a3f9046e6003ca2ca01e08540_1440w.jpg" alt="">&lt;/p></description></item><item><title>测试平台教程</title><link>https://bluespace3.github.io/post/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%88%86%E4%BA%AB/</link><pubDate>Fri, 21 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/%E6%B5%8B%E8%AF%95%E5%B9%B3%E5%8F%B0%E5%88%86%E4%BA%AB/</guid><description>&lt;p>一、基本介绍：（）
桌面端工具（一年左右），使用python的wxpython框架编写，使用pyinstaller打包为桌面exe文件；缺点：体积大，不便于分享；&lt;/p>
&lt;p>&lt;img src="./images/image_0fa5b6bdd33056f5c14c2ba21dca4298.png" alt="">&lt;/p>
&lt;p>web端应用（10月初至今）：flask+vue实现；优点，通过脚本实现热更新；链接形式便于分享。&lt;/p>
&lt;p>&lt;img src="./images/image_554bf84092b63f4dfeef955bec300c72.png" alt="">&lt;/p>
&lt;p>二、功能介绍：&lt;/p>
&lt;p>&lt;img src="./images/image_d8f9cc72d69a56ab872809e6e0c32ca7.png" alt="">&lt;/p>
&lt;p>三、技术实现&lt;/p>
&lt;p>测试平台采用前后端分离的方式实现:&lt;/p>
&lt;ol>
&lt;li>后端由flask框架实现；
（1）flask项目结构&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="./images/image_08bf969bb5e6e6a6c2866b5ecd815b9a.png" alt="">&lt;/p>
&lt;p>（2）在项目入口文件中构建接口
Flask：用于创建一个flask应用,app = Flask(&lt;strong>name&lt;/strong>)
CORS:解决跨域问题，cors = CORS(app)
request:接受请求的参数，request.args.get()；phone = request.json[]
jsonify:以json格式返回结果：jsonify({&amp;ldquo;data&amp;rdquo;: res})
接口的基本组成：&lt;/p>
&lt;p>&lt;img src="./images/image_1e0619b874f00563f4df88a914e7b216.png" alt="">&lt;/p>
&lt;p>构建一个接口的基本步骤：
导包：Flask、CORS、request、jsonify
在app.route()装饰器中定义接口的请求类型、url路径
写一个接口函数
获取入参（可选）
get请求 request.args.get()
post请求 request.json[]
对得到的参数进行基本校验：如参数类型校验、字段长度、是否空、鉴权等。
根据传参进行逻辑处理，调用对应功能，得到结果
构建响应头（可选，返回类型是文件时必须）
构建结果，使用jsonify将返回结果构建成一个js （可选）
return结果
启动flask
app.run(ip,port,debug=True),其中debug=True代表以调试模式启动，代码改动后自动重启；debug默认为False。
包的管理 requirements.txt
代码中引入了的包，需要填写在该文件中，格式：“ 包名==版本号”&lt;/p>
&lt;p>&lt;img src="./images/image_ddafd5dad0788c85d978475b2b619b09.png" alt="">&lt;/p>
&lt;p>（3）采用gunnicorn+gevent部署flask项目
介绍：
一个HTTP 服务器，可以增加项目的并发，通常和gevent一起使用。
安装gunicorn和gevent：
pip install gunicorn -i &lt;a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple&lt;/a>
pip install gevent-i &lt;a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple&lt;/a>
配置文件 gunicorn.conf.py
workers = 10 定义同时开启的处理请求的进程数量，根据网站流量适当调整
worker_class = &amp;ldquo;gevent&amp;rdquo; 采用gevent库，支持异步处理请求，提高吞吐量
bind = &amp;ldquo;0.0.0.0:80&amp;rdquo; 监听IP放宽，以便于Docker之间、Docker和宿主机之间的通信,docker部署固定
采用启动服务：
gunicorn flask_index:app -c ./gunicorn.conf.py
注意：Gunicorn只能运行在Linux环境中，不支持windows平台，因此在windows调试的时候不要用这个方式启动flask；
2. 前端：vue 、node.js（前端的包管理工具，类似python的pip包管理工具）、vue-cli（vue项目的脚手架）、element-ui、echats提供页面交互;&lt;/p></description></item><item><title>MCP入门指南</title><link>https://bluespace3.github.io/post/mcp-intro/</link><pubDate>Thu, 20 Mar 2025 13:48:29 +0800</pubDate><guid>https://bluespace3.github.io/post/mcp-intro/</guid><description>&lt;h2 id="什么是mcp">什么是MCP？&lt;/h2>
&lt;p>MCP（Model Context Protocol）是一种用于扩展和增强开发工具功能的协议。它允许开发者创建和使用MCP服务器，这些服务器可以提供额外的工具和资源，以提高开发效率和灵活性。&lt;/p>
&lt;h2 id="mcp的安装">MCP的安装&lt;/h2>
&lt;p>MCP的安装通常包括以下步骤：&lt;/p>
&lt;ol>
&lt;li>安装MCP客户端：根据使用的开发工具，安装相应的MCP客户端插件或扩展。&lt;/li>
&lt;li>创建MCP服务器：使用提供的工具或模板创建一个新的MCP服务器项目。&lt;/li>
&lt;li>配置MCP服务器：在MCP服务器项目中添加所需的工具和资源，并进行相应的配置。&lt;/li>
&lt;li>运行MCP服务器：启动MCP服务器，使其与MCP客户端进行通信。&lt;/li>
&lt;/ol>
&lt;h2 id="使用示例">使用示例&lt;/h2>
&lt;p>以下是一个简单的MCP服务器使用示例：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-typescript" data-lang="typescript">&lt;span class="line">&lt;span class="cl">&lt;span class="err">#&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="err">/usr/bin/env node&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">Server&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@modelcontextprotocol/sdk/server/index.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">StdioServerTransport&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="kr">from&lt;/span> &lt;span class="s1">&amp;#39;@modelcontextprotocol/sdk/server/stdio.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">server&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Server&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;example-mcp-server&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">version&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;0.1.0&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">capabilities&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tools&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">exampleTool&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;这是一个示例工具&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">inputSchema&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;object&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">properties&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">message&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">description&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;要显示的消息&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">required&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;message&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">setRequestHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;exampleTool&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">content&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">type&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">text&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`您输入的消息是：&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">transport&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">StdioServerTransport&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">await&lt;/span> &lt;span class="nx">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">transport&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;MCP服务器正在运行&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="热门mcp工具推荐">热门MCP工具推荐&lt;/h2>
&lt;p>以下是一些目前热门的MCP工具：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>代码生成工具&lt;/strong>：根据项目需求自动生成代码模板和结构，提高开发效率。&lt;/li>
&lt;li>&lt;strong>API文档生成工具&lt;/strong>：自动从代码中提取API信息并生成详细的文档，方便团队成员查阅。&lt;/li>
&lt;li>&lt;strong>代码质量检查工具&lt;/strong>：对代码进行静态分析，检查潜在的错误和问题，提高代码质量。&lt;/li>
&lt;li>&lt;strong>自动化测试工具&lt;/strong>：自动生成和执行测试用例，确保代码的正确性和稳定性。&lt;/li>
&lt;/ul>
&lt;p>通过使用这些热门MCP工具，开发者可以大大提高开发效率和代码质量，更好地完成项目开发任务。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>MCP是一种强大的开发工具扩展协议，可以帮助开发者创建和使用各种工具和资源。通过本指南，您已经了解了MCP的基本使用方法，接下来可以探索更多高级功能和热门工具。&lt;/p></description></item><item><title>pytest入门指南</title><link>https://bluespace3.github.io/post/pytest-intro/</link><pubDate>Thu, 20 Mar 2025 13:42:48 +0800</pubDate><guid>https://bluespace3.github.io/post/pytest-intro/</guid><description>&lt;h2 id="什么是pytest">什么是pytest？&lt;/h2>
&lt;p>pytest是一个功能强大且易于使用的Python测试框架。它可以帮助开发者编写简洁、可读性强的测试代码，并提供丰富的插件支持。&lt;/p>
&lt;h2 id="pytest的主要特点">pytest的主要特点&lt;/h2>
&lt;ul>
&lt;li>简洁的测试用例编写方式&lt;/li>
&lt;li>自动发现测试用例&lt;/li>
&lt;li>支持参数化测试&lt;/li>
&lt;li>强大的断言功能&lt;/li>
&lt;li>丰富的插件生态系统&lt;/li>
&lt;/ul>
&lt;h2 id="安装pytest">安装pytest&lt;/h2>
&lt;p>使用以下命令安装pytest：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pip install pytest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="编写测试用例">编写测试用例&lt;/h2>
&lt;p>一个简单的pytest测试用例如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_addition&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_subtraction&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行测试">运行测试&lt;/h2>
&lt;p>使用以下命令运行pytest测试：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">pytest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="参数化测试">参数化测试&lt;/h2>
&lt;p>pytest支持参数化测试，可以使用&lt;code>@pytest.mark.parametrize&lt;/code>装饰器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pytest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@pytest.mark.parametrize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;test_input,expected&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;3+5&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;2+4&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;6*9&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_input&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">expected&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assert&lt;/span> &lt;span class="nb">eval&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_input&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">expected&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>pytest是一个功能强大且易于使用的Python测试框架，可以帮助开发者编写简洁、可读性强的测试代码。通过本指南，您已经了解了pytest的基本使用方法，接下来可以探索更多高级功能。&lt;/p></description></item><item><title>docker常用命令</title><link>https://bluespace3.github.io/post/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/docker%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>docker pull ubuntu 载入ubuntu 镜像&lt;/p>
&lt;p>docker pull training/webapp # 载入镜像&lt;/p>
&lt;p>docker pull python:3.7 安装python镜像&lt;/p>
&lt;p>docker pull nginx 安装nginx镜像&lt;/p>
&lt;p>docker run -it python:3.7 /bin/bash 进入python镜像&lt;/p>
&lt;p>连接不上时，终端输入：&lt;/p>
&lt;p>1.cd &amp;ldquo;C:\Program Files\Docker\Docker&amp;rdquo;&lt;/p>
&lt;p>2.DockerCli.exe -SwitchDaemon&lt;/p>
&lt;p>docker run -it ubuntu /bin/bash 启用进入容器&lt;/p>
&lt;p>exit退出容器&lt;/p>
&lt;p>docker run -d -P training/webapp python app.py 后台启用容器并随机映射到本机端口&lt;/p>
&lt;p>docker run -d -p 5000:5000 training/webapp python app.py后台启用容器并指定映射到&lt;/p>
&lt;p>docker logs -f id 查看应用日志&lt;/p>
&lt;p>docker logs -f -t &amp;ndash;tail=100 dockerid 动态查看最新100条日志&lt;/p>
&lt;p>docker top id 查看容器内部应用进程&lt;/p>
&lt;p>docker ps -a 查看所有容器(可查容器id)&lt;/p></description></item><item><title>Git submodule</title><link>https://bluespace3.github.io/post/git-submodule/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/git-submodule/</guid><description>&lt;ul>
&lt;li>
&lt;ul>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#J6CDd7QvkohJ3mxEKt3czp31nOe">Git submodule添加子项目_库&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnEitqaRgfOoIdSuxwNhUaIc">Git归并策略&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnel4BHYYT4Lw7SQHLqNXyue">添加&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://guangpuyun.feishu.cn/docx/J6CDd7QvkohJ3mxEKt3czp31nOe#doxcnrHxc9hpZYK1WtRbYlUQ91f">删除&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>输入“/”快速插入内容&lt;/p>
&lt;p>添加图标&lt;/p>
&lt;p>添加封面&lt;/p>
&lt;p>展示文档信息&lt;/p>
&lt;p>Git submodule添加子项目_库&lt;/p>
&lt;p>开发过程中，经常会有一些通用的部分希望抽取出来做成一个公共库来提供给别的工程来使用，而公共代码库的版本管理是个麻烦的事情。git submodule命令就可以解决这个问题。&lt;/p>
&lt;p>Git归并策略&lt;/p>
&lt;p>Git归并有两种策略：递归，章鱼。&lt;/p>
&lt;p>1.递归策略：当分支数只有两个的时候。&lt;/p>
&lt;p>2.章鱼策略：当分支数大于两个的时候。&lt;/p>
&lt;p>Git会自动选择归并的方法。&lt;/p>
&lt;p>3.子树策略：是Git另一种归并方法。（submodule）&lt;/p>
&lt;p>它可以把另一个子项目，嵌入到当前项目。而且会非常聪明的合并这些子项目。&lt;/p>
&lt;p>添加&lt;/p>
&lt;p>为当前工程添加submodule，命令如下：&lt;/p>
&lt;p>git submodule add 仓库地址 路径&lt;/p>
&lt;p>其中，仓库地址是指子模块仓库地址，路径指将子模块放置在当前工程下的路径。&lt;/p>
&lt;p>注意：路径不能以 / 结尾（会造成修改不生效）、不能是现有工程已有的目录（不能順利 Clone）&lt;/p>
&lt;p>示例:&lt;/p>
&lt;p>git submodule add -f &lt;a href="http://git.cs/Cmblife_iOS_Internal/modulesLib.git">http://git.cs/Cmblife_iOS_Internal/modulesLib.git&lt;/a>&lt;/p>
&lt;p>-f 是强制的意思，一般不需要加&lt;/p>
&lt;p>命令执行完成，会在当前工程根路径下生成一个名为“.gitmodules”的文件，其中记录了子模块的信息。添加完成以后，再将子模块所在的文件夹添加到工程中即可。&lt;/p>
&lt;p>删除&lt;/p>
&lt;p>submodule的删除稍微麻烦点：首先，要在“.gitmodules”文件中删除相应配置信息。然后，执行“git rm –cached ”命令将子模块所在的文件从git中删除。&lt;/p>
&lt;p>下载的工程带有submodule&lt;/p>
&lt;p>当使用git clone下来的工程中带有submodule时，初始的时候，submodule的内容并不会自动下载下来的，此时，只需执行如下命令：&lt;/p>
&lt;p>git submodule update –init –recursive&lt;/p>
&lt;p>即可将子模块内容下载下来后工程才不会缺少相应的文件。&lt;/p></description></item><item><title>git子项目</title><link>https://bluespace3.github.io/post/git%E6%B7%BB%E5%8A%A0%E5%AD%90%E9%A1%B9%E7%9B%AE/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/git%E6%B7%BB%E5%8A%A0%E5%AD%90%E9%A1%B9%E7%9B%AE/</guid><description>&lt;ul>
&lt;li>项目中添加子项目
&lt;ul>
&lt;li>1、git clone 父项目url&lt;/li>
&lt;li>2、cd 父项目对应目录下：git submodule add &amp;lt;子项目地址&amp;gt;&lt;/li>
&lt;li>3、git commit ;git push&lt;/li>
&lt;li>4、此时子项目下的子项目是空的，需要cd到父目录cmd执行：
git submodule update &amp;ndash;init &amp;ndash;recursive
或者执行：git submodule init 然后执行git submodule update&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>clone含嵌套项目的项目
&lt;ul>
&lt;li>git clone 父项目url &amp;ndash;recurse-submodules
不加&amp;ndash;recurse-submodules，克隆的子项目是空的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Hugo静态网站生成器入门指南</title><link>https://bluespace3.github.io/post/hugo-intro/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/hugo-intro/</guid><description>&lt;h2 id="什么是hugo">什么是Hugo？&lt;/h2>
&lt;p>Hugo是一个用Go语言编写的快速、现代的静态网站生成器。它可以将Markdown文件转换为HTML页面，非常适合构建文档网站、博客等。&lt;/p>
&lt;h2 id="hugo的主要特点">Hugo的主要特点&lt;/h2>
&lt;ul>
&lt;li>极快的构建速度&lt;/li>
&lt;li>丰富的主题支持&lt;/li>
&lt;li>简单的Markdown内容管理&lt;/li>
&lt;li>强大的模板系统&lt;/li>
&lt;li>内置的短代码功能&lt;/li>
&lt;/ul>
&lt;h2 id="安装hugo">安装Hugo&lt;/h2>
&lt;p>在Windows上安装Hugo的步骤：&lt;/p>
&lt;ol>
&lt;li>下载Hugo的Windows版本&lt;/li>
&lt;li>解压到指定目录&lt;/li>
&lt;li>将Hugo的可执行文件路径添加到系统环境变量&lt;/li>
&lt;/ol>
&lt;h2 id="创建新站点">创建新站点&lt;/h2>
&lt;p>使用以下命令创建一个新的Hugo站点：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new site mydocs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="下载插件">下载插件&lt;/h2>
&lt;h2 id="添加内容">添加内容&lt;/h2>
&lt;p>在content目录下创建Markdown文件来添加内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo new blog/my-first-post.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行开发服务器">运行开发服务器&lt;/h2>
&lt;p>使用以下命令启动开发服务器：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo server -D
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="部署网站">部署网站&lt;/h2>
&lt;p>使用以下命令生成静态文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">hugo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>然后将public目录下的文件部署到Web服务器即可，注意每次推送前运行hugo更新public文件夹&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若有更新域名，请删除public后，再运行hugo重新生成public，否则会出现路由错误的情况。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>为了方便新建.sh脚本文件，命名为.command.sh&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 判断是否已初始化Git仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -d &lt;span class="s2">&amp;#34;.git&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;未检测到Git仓库，正在初始化...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Git仓库已初始化&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建.gitignore文件，排除不需要版本控制的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; .gitignore &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">resources/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">.DS_Store
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">node_modules/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">.hugo_build.lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加所有文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 提交更改&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;更新博客&amp;#34;&lt;/span> 
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 检查是否已关联远程仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">REMOTE_URL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>git remote get-url origin 2&amp;gt;/dev/null&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$REMOTE_URL&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;未检测到远程仓库，正在添加...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git remote add origin https://github.com/bluespace3/bluespace3.github.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;已关联远程仓库：&lt;/span>&lt;span class="nv">$REMOTE_URL&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 推送到GitHub&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main --force
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>终端运行 ..command.sh&lt;/li>
&lt;/ol>
&lt;h2 id="更新维护">更新维护&lt;/h2>
&lt;p>后期维护有许多要留意的地方否则容易踩坑。&lt;/p></description></item><item><title>linux安装python</title><link>https://bluespace3.github.io/post/linux%E5%AE%89%E8%A3%85python/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/linux%E5%AE%89%E8%A3%85python/</guid><description>&lt;p>#依赖包&lt;/p>
&lt;p>yum -y groupinstall &amp;ldquo;Development tools&amp;rdquo;&lt;/p>
&lt;p>yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel&lt;/p>
&lt;p>#下载 Python3&lt;/p>
&lt;p>wget &lt;a href="https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz">https://www.python.org/ftp/python/3.6.2/Python-3.6.2.tar.xz&lt;/a>&lt;/p>
&lt;p>#创建文件夹&lt;/p>
&lt;p>mkdir /usr/local/python3&lt;/p>
&lt;p>#解压编译安装&lt;/p>
&lt;p>tar -xvJf Python-3.6.2.tar.xz&lt;/p>
&lt;p>cd Python-3.6.2&lt;/p>
&lt;p>./configure &amp;ndash;prefix=/usr/local/python3&lt;/p>
&lt;p>make &amp;amp;&amp;amp; make install&lt;/p>
&lt;p>#给个软链&lt;/p>
&lt;p>ln -sf /usr/local/python3/bin/python3 /usr/bin/python3&lt;/p>
&lt;p>ln -sf /usr/local/python3/bin/pip3 /usr/bin/pip3&lt;/p></description></item><item><title>linux常用命令</title><link>https://bluespace3.github.io/post/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;h3 id="文章目录">文章目录&lt;/h3>
&lt;ul>
&lt;li>一、目录操作
&lt;ul>
&lt;li>1、批量操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>二、文件操作&lt;/li>
&lt;li>三、文件内容操作（查看日志，更改配置文件）
&lt;ul>
&lt;li>1、grep(检索文件内容)&lt;/li>
&lt;li>2、awk(数据统计)&lt;/li>
&lt;li>3、sed(替换文件内容)&lt;/li>
&lt;li>4、管道操作符 &lt;code>|&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>四、系统日志位置&lt;/li>
&lt;li>五、创建与删除软连接&lt;/li>
&lt;li>六、压缩和解压缩&lt;/li>
&lt;li>七、Linux下文件的详细信息&lt;/li>
&lt;li>八、常用的docker容器的命令：&lt;/li>
&lt;li>九、运维常用命令
&lt;ul>
&lt;li>1、查看服务器端口号是否可用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十、yum常用命令&lt;/li>
&lt;li>十一、其他命令
&lt;ul>
&lt;li>1、xargs&lt;/li>
&lt;li>2、curl语法&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十二、Linux内核优化&lt;/li>
&lt;li>十三、用户权限操作
&lt;ul>
&lt;li>1、用户操作&lt;/li>
&lt;li>2、添加组&lt;/li>
&lt;li>3、sudo用户权限操作&lt;/li>
&lt;li>4、更换文件所有者&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十四、TOP
&lt;ul>
&lt;li>1、统计信息区&lt;/li>
&lt;li>2、进程信息区&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十五、文件安装
&lt;ul>
&lt;li>1、文件下载(lrzsz)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>十六、文章PDF版本&lt;/li>
&lt;/ul>
&lt;p>Linux 系统目录&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Shell" data-lang="Shell">&lt;span class="line">&lt;span class="cl">├── bin -&amp;gt; usr/bin &lt;span class="c1"># 用于存放二进制命令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── boot &lt;span class="c1"># 内核及引导系统程序所在的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── dev &lt;span class="c1"># 所有设备文件的目录（如磁盘、光驱等）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── etc &lt;span class="c1"># 配置文件默认路径、服务启动命令存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── home &lt;span class="c1"># 用户家目录，root用户为/root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lib -&amp;gt; usr/lib &lt;span class="c1"># 32位库文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── lib64 -&amp;gt; usr/lib64 &lt;span class="c1"># 64位库文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── media &lt;span class="c1"># 媒体文件存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── mnt &lt;span class="c1"># 临时挂载设备目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── opt &lt;span class="c1"># 自定义软件安装存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── proc &lt;span class="c1"># 进程及内核信息存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── root &lt;span class="c1"># Root用户家目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── run &lt;span class="c1"># 系统运行时产生临时文件，存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── sbin -&amp;gt; usr/sbin &lt;span class="c1"># 系统管理命令存放目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── srv &lt;span class="c1"># 服务启动之后需要访问的数据目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── sys &lt;span class="c1"># 系统使用目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tmp &lt;span class="c1"># 临时文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── usr &lt;span class="c1"># 系统命令和帮助文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── var &lt;span class="c1"># 存放内容易变的文件的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">12345678910111213141516171819&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="一目录操作">一、目录操作&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Shell" data-lang="Shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">pwd&lt;/span> 查看当前工作目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">clear 清除屏幕
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~ 当前用户目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> / 根目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> - 上一次访问的目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> .. 上一级目录
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">123456&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>查看目录内信息&lt;/strong>&lt;/p></description></item><item><title>playwright的python文档</title><link>https://bluespace3.github.io/post/playwright%E7%9A%84python%E6%96%87%E6%A1%A3/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/playwright%E7%9A%84python%E6%96%87%E6%A1%A3/</guid><description>&lt;h1 id="安装">安装&lt;/h1>
&lt;h2 id="引言">引言&lt;/h2>
&lt;p>Playwright 是专门为满足端到端测试的需求而创建的。Playwright 支持包括 Chromium、WebKit 和 Firefox 在内的所有现代渲染引擎。在 Windows、Linux 和 macOS 上进行测试，无论是本地还是在 CI 上，无论是无头模式还是有头模式，都可以使用原生移动设备仿真。&lt;/p>
&lt;p>Playwright 库可以用作通用的浏览器自动化工具，为同步和异步 Python 提供了一套强大的 API 来自动化 Web 应用程序。&lt;/p>
&lt;p>本介绍描述了 Playwright Pytest 插件，这是编写端到端测试的推荐方式。&lt;/p>
&lt;p>&lt;strong>你将学到&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>如何安装 Playwright Pytest&lt;/li>
&lt;li>如何运行示例测试&lt;/li>
&lt;/ul>
&lt;h2 id="安装-playwright-pytest">安装 Playwright Pytest&lt;/h2>
&lt;p>Playwright 建议使用官方的 Playwright Pytest 插件来编写端到端测试。它提供了上下文隔离，并开箱即用地在多个浏览器配置上运行。&lt;/p>
&lt;p>首先，通过安装 Playwright 并运行示例测试来开始，亲眼看看它是如何工作的。&lt;/p>
&lt;ul>
&lt;li>PyPI&lt;/li>
&lt;li>Anaconda&lt;/li>
&lt;/ul>
&lt;p>安装所需的浏览器：&lt;/p>
&lt;h2 id="添加示例测试">添加示例测试&lt;/h2>
&lt;p>在当前工作目录或遵循 &lt;code>test_&lt;/code> 前缀约定的子目录中创建一个文件，例如 &lt;code>test_example.py&lt;/code>，并在其中包含以下代码。确保你的测试名称也遵循 &lt;code>test_&lt;/code> 前缀约定。&lt;/p>
&lt;p>test_example.py&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Python" data-lang="Python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">playwright.sync_api&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">expect&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_has_title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">goto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://playwright.dev/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 期望标题“包含”一个子字符串。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_have_title&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">compile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Playwright&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">test_get_started_link&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Page&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">goto&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://playwright.dev/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 点击“开始”链接。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_by_role&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Get started&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">click&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 期望页面有一个名为“安装”的标题。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">expect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_by_role&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;heading&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Installation&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_be_visible&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="运行示例测试">运行示例测试&lt;/h2>
&lt;p>默认情况下，测试将在 Chromium 上运行。这可以通过 CLI 选项进行配置。测试以无头模式运行，这意味着在运行测试时不会打开浏览器 UI。测试结果和测试日志将在终端中显示。&lt;/p></description></item><item><title>python常见踩坑记录</title><link>https://bluespace3.github.io/post/python%E9%9D%9E%E5%90%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/python%E9%9D%9E%E5%90%8C%E7%BA%A7%E7%9B%AE%E5%BD%95%E8%B0%83%E7%94%A8%E6%8A%A5%E9%94%99/</guid><description>&lt;h2 id="项目结构">项目结构：&lt;/h2>
&lt;p>&lt;img src="https://guangpuyun.feishu.cn/space/api/box/stream/download/asynccode/?code=N2E4ZjQ0N2I5MmEwYWExMjg1YmVmOTcyZTBhNTk1ZTlfdXlaSzZjU09wSE5mR1AyYTBuYVg1SElQcHJIUENSVWpfVG9rZW46S3AyMmI4bFN1b2VjeG54V251Q2NzMHBhbm5nXzE3NDI0NjExMTk6MTc0MjQ2NDcxOV9WNA" alt="">&lt;/p>
&lt;h2 id="问题">问题：&lt;/h2>
&lt;p>执行文件调用dir1，间接调用dir2。执行时报错：“ModuleNotFoundError: No module named &amp;lsquo;dir1.dir2&amp;rsquo;;”&lt;/p>
&lt;h2 id="解决方法">解决方法：&lt;/h2>
&lt;p>dir1文件导包时做处理。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>主函数加入这四行，将项目的根目录(webapp)的路径加入到系统PATH中；
import os,sys&lt;/p>
&lt;p>from pathlib import Path&lt;/p>
&lt;p>sys.path[0] = str(Path(sys.path[0]).parent.parent)&lt;/p>
&lt;p>sys.path.append(os.getcwd())&lt;/p>
&lt;/li>
&lt;li>
&lt;p>且导包从项目执行入口文件同级开始写&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://guangpuyun.feishu.cn/space/api/box/stream/download/asynccode/?code=MzlhZjJjZjgzNzk4YjdjNzU2ZWQ1ZDdjMjA5ODI0MDZfTzN2ZmlQOVM0a1BERU95VkY1amZ5bTFXMEJsc09pTExfVG9rZW46UlgyTmJCdHdLb0I5Z2d4VktJcmNEbDNvblljXzE3NDI0NjExMTk6MTc0MjQ2NDcxOV9WNA" alt="">&lt;/p></description></item><item><title>python的os模块使用</title><link>https://bluespace3.github.io/post/python%E4%B8%AD%E7%9A%84os%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/python%E4%B8%AD%E7%9A%84os%E5%87%BD%E6%95%B0%E7%94%A8%E6%B3%95/</guid><description>&lt;ul>
&lt;li>os.listdir(path)
获取文件夹下全部文件，的列表&lt;/li>
&lt;li>os.path.join(path1,path2)
将路径path1和路径path2拼接成新的路径，path1//path2&lt;/li>
&lt;li>base_dir = os.path.dirname(os.path.abspath(&lt;strong>file&lt;/strong>))
获取当前文件的绝对路径&lt;/li>
&lt;li>input_file = os.path.join(base_dir, &lt;strong>&amp;quot;../resource/swaggerApi/clinic-ysb-app_OpenAPI.json&amp;quot;&lt;/strong>)&lt;/li>
&lt;/ul></description></item><item><title>scrapy爬柚子网示例</title><link>https://bluespace3.github.io/post/scrapy%E7%88%AC%E6%9F%9A%E5%AD%90%E7%BD%91%E7%A4%BA%E4%BE%8B/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/scrapy%E7%88%AC%E6%9F%9A%E5%AD%90%E7%BD%91%E7%A4%BA%E4%BE%8B/</guid><description>&lt;p>柚子网https://www.uu-zz.com/&lt;/p>
&lt;p>爬取页码&lt;/p>
&lt;p>遍历页面内对应的视频集的链接&lt;/p>
&lt;p>&lt;img src="https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/O1YCbvbQBoiZYHxxbO7cqOi6nKb?preview_type=16" alt="">&lt;/p>
&lt;p>遍历视频内子视频链接&lt;/p>
&lt;p>&lt;img src="https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/CKMPbtR4souEnDxWowNcxAuenNc?preview_type=16" alt="">!&lt;/p>
&lt;p>&lt;a href="https://security.feishu.cn/link/safety?target=https%3A%2F%2Fwww.uu-zz.com%2F%2B%E5%AD%90%E8%A7%86%E9%A2%91%E9%93%BE%E6%8E%A5&amp;amp;scene=ccm&amp;amp;logParams=%7B%22location%22%3A%22ccm_mindnote%22%7D&amp;amp;lang=zh-CN">https://www.uu-zz.com/+子视频链接&lt;/a>，发送get请求&lt;/p>
&lt;p>&lt;img src="https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/preview/ClLDbx3s5o29xpxWKrncnG3Enzg?preview_type=16" alt="">!&lt;/p>
&lt;p>获得m3u8文件，储存在数据库&lt;/p></description></item><item><title>unnitest</title><link>https://bluespace3.github.io/post/unnitest%E7%AC%94%E8%AE%B0/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/unnitest%E7%AC%94%E8%AE%B0/</guid><description>&lt;ul>
&lt;li>一、引入
&lt;ul>
&lt;li>1.导包，import unnitest&lt;/li>
&lt;li>2.编写测试类，继承unnitest&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>二、运行
&lt;ul>
&lt;li>
&lt;p>1.unnitest.main(),运行全部用例&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2.测试套：testsuite&lt;/p>
&lt;ul>
&lt;li>
&lt;p>创建：suite=unnitest.Testsuite()&lt;/p>
&lt;/li>
&lt;li>
&lt;p>测试套添加用例：suite.addtTest（类（方法））&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;img src="images/1742460595596.png" alt="1742460595596">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行：runner=unnitest.TextTestRunner()&lt;/p>
&lt;ul>
&lt;li>运行：runner.run(suite)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>*运行必须在命令行运行否则是运行全部用例&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>三、生成报告&lt;/p>
&lt;p>&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460643666.png" alt="1742460643666">&lt;/p>
&lt;ul>
&lt;li>1.将HTMLTestRunner.py文件放到项目文件夹下&lt;/li>
&lt;li>2.导包：如左图&lt;/li>
&lt;li>3.创建测试套，参考上方&lt;/li>
&lt;li>4.创建测试报告文件，且以测试套运行（参考左图）&lt;/li>
&lt;li>&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460677985.png" alt="1742460677985">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>与pytest的异同&lt;/li>
&lt;li>&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460760547.png" alt="1742460760547">
&lt;ul>
&lt;li>pytest以mark方式组织用例（而非套件）&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460791823.png" alt="1742460791823">&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>面试相关&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460820437.png" alt="1742460820437">&lt;/li>
&lt;li>pycharm关闭pytest测试模式&lt;img src="image/unnitest%E7%AC%94%E8%AE%B0/1742460849632.png" alt="1742460849632">&lt;/li>
&lt;/ul></description></item><item><title>提示词技巧</title><link>https://bluespace3.github.io/post/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8A%80%E5%B7%A7/</link><pubDate>Thu, 20 Mar 2025 12:59:32 +0800</pubDate><guid>https://bluespace3.github.io/post/%E6%8F%90%E7%A4%BA%E8%AF%8D%E6%8A%80%E5%B7%A7/</guid><description>&lt;p>提示词技巧
总结：&lt;/p>
&lt;p>&lt;img src="./images/image_ba757d41c7a7ffe6c96cab21733204f5.png" alt="">&lt;/p>
&lt;p>&lt;img src="./images/image_8cbe461813a474391f33fb335ebab8f6.png" alt="">&lt;/p>
&lt;p>&lt;img src="./images/image_44d9cd55663dee910f36f6ba75153821.png" alt="">&lt;/p>
&lt;p>&lt;img src="./images/image_8dd7fba4e99a354d6df663aa57049cc0.png" alt="">&lt;/p>
&lt;p>&lt;img src="./images/image_9368612a92cd51d44b6d8ef31705d88a.png" alt="">&lt;/p>
&lt;p>官方提示词库：
&lt;a href="https://api-docs.deepseek.com/zh-cn/prompt-library">https://api-docs.deepseek.com/zh-cn/prompt-library&lt;/a>&lt;/p></description></item><item><title>go语言--安装和环境搭配</title><link>https://bluespace3.github.io/post/go%E8%AF%AD%E8%A8%80--%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E9%85%8D/</link><pubDate>Sat, 15 Mar 2025 11:00:00 -0700</pubDate><guid>https://bluespace3.github.io/post/go%E8%AF%AD%E8%A8%80--%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E6%90%AD%E9%85%8D/</guid><description>&lt;h3 id="一go简介">一.Go简介&lt;/h3>
&lt;p>Go 语言（又称 Golang）是由 Google 开发的一种开源&lt;a href="https://so.csdn.net/so/search?q=%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80&amp;amp;spm=1001.2101.3001.7020">编程语言&lt;/a>，于 2009 年正式对外发布。下面从多个方面为你介绍它：&lt;/p>
&lt;h4 id="设计目标">设计目标&lt;/h4>
&lt;p>Go 语言的设计初衷是为了解决大规模&lt;a href="https://so.csdn.net/so/search?q=%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91&amp;amp;spm=1001.2101.3001.7020">软件开发&lt;/a>中的一些问题，比如编译速度慢、并发编程复杂、代码可维护性差等。所以它结合了静态语言的性能优势和动态语言的开发效率。&lt;/p>
&lt;h4 id="特点">特点&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>高效的编译和执行&lt;/strong>：Go 语言拥有快速的编译速度，这使得开发过程更加流畅。同时，它的执行效率也很高，能充分利用现代多核处理器的性能。&lt;/li>
&lt;li>&lt;strong>内置并发支持&lt;/strong>：Go 语言原生支持并发编程，通过&lt;code>goroutine&lt;/code>和&lt;code>channel&lt;/code>可以很方便地实现高并发程序。&lt;code>goroutine&lt;/code>是一种轻量级的线程，占用资源少，创建和销毁的开销小；&lt;code>channel&lt;/code>则用于&lt;code>goroutine&lt;/code>之间的通信和同步。&lt;/li>
&lt;li>&lt;strong>垃圾回收机制&lt;/strong>：它具备自动垃圾回收功能，开发者无需手动管理内存，减少了内存泄漏的风险，提高了开发效率。&lt;/li>
&lt;li>&lt;strong>丰富的标准库&lt;/strong>：标准库涵盖了网络编程、文件操作、加密解密等多个领域，为开发者提供了便利，减少了对第三方库的依赖。&lt;/li>
&lt;li>&lt;strong>跨平台支持&lt;/strong>：可以在不同的操作系统和硬件平台上编译和运行，方便开发跨平台的应用程序。&lt;/li>
&lt;/ul>
&lt;h4 id="应用场景">应用场景&lt;/h4>
&lt;ul>
&lt;li>&lt;strong>云计算与容器编排&lt;/strong>：像 Docker 和 Kubernetes 这类知名项目，就是用 Go 语言开发的。&lt;/li>
&lt;li>&lt;strong>网络编程&lt;/strong>：由于其出色的并发性能和网络库，Go 语言非常适合开发网络服务器、代理服务器等。&lt;/li>
&lt;li>&lt;strong>分布式系统&lt;/strong>：在分布式系统中，Go 语言的并发模型和网络编程能力使其能够高效地处理大量的并发请求。&lt;/li>
&lt;/ul>
&lt;h3 id="二go语言安装与配置">二、Go语言安装与配置&lt;/h3>
&lt;p>Go语言支持以下系统：Linux、Mac、Windows。&lt;/p>
&lt;p>安装包下载地址：&lt;a href="https://go.dev/" title="The Go Programming Language">The Go Programming Language&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://i-blog.csdnimg.cn/direct/a7dff5ff7bda44cc8408d8355ec1ceb1.png" alt="">&lt;/p>
&lt;h3 id="windows">windows&lt;/h3>
&lt;p>直接安装系统下载安装即可！&lt;/p>
&lt;h3 id="linux">Linux&lt;/h3>
&lt;h5 id="将下载的二进制包解压至usrlocal目录">将下载的二进制包解压至/usr/local目录&lt;/h5>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cobol" data-lang="cobol">&lt;span class="line">&lt;span class="cl">&lt;span class="c">tar -C&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nv">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nv">local&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nv">xzf&lt;/span> &lt;span class="nv">go1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nv">linux-amd64&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nv">tar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nv">gz&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="nv">AI&lt;/span>&lt;span class="err">写代码
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="将-usrlocalgobin-目录添加至-path-环境变量">将 /usr/local/go/bin 目录添加至 PATH 环境变量：&lt;/h5>
&lt;p>可以编辑 /etc/profile，并将以下命令添加该文件的末尾，这样就可以永久生效：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="n">export&lt;/span> &lt;span class="no">PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="vg">$PATH&lt;/span>&lt;span class="ss">:/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">go&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="no">AI写代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cobol" data-lang="cobol">&lt;span class="line">&lt;span class="cl">&lt;span class="c">source&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nv">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nv">profileAI&lt;/span>&lt;span class="err">写代码
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="三编写基本测试用例">三.编写基本测试用例&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span> &lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, World!&amp;#34;&lt;/span>&lt;span class="p">)}&lt;/span>&lt;span class="nx">AI写代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://i-blog.csdnimg.cn/direct/18dc582244354f9883843fc711ddb6d2.png" alt="">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cobol" data-lang="cobol">&lt;span class="line">&lt;span class="cl">&lt;span class="c">go bui&lt;/span>&lt;span class="nv">ld&lt;/span> &lt;span class="err">文件名&lt;/span>&lt;span class="o">+&lt;/span> &lt;span class="err">运行程序&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kr">go&lt;/span> &lt;span class="nv">run文件名AI&lt;/span>&lt;span class="err">写代码
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>mac使用笔记</title><link>https://bluespace3.github.io/post/mac%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E9%80%9F%E8%AE%B0/</link><pubDate>Sat, 15 Mar 2025 11:00:00 -0700</pubDate><guid>https://bluespace3.github.io/post/mac%E7%94%B5%E8%84%91%E4%BD%BF%E7%94%A8%E9%80%9F%E8%AE%B0/</guid><description>&lt;p>在Mac终端中，有几种方法可以连续删除命令：&lt;/p>
&lt;ol>
&lt;li>使用 Ctrl + W ：删除光标前的一个单词&lt;/li>
&lt;li>使用 Ctrl + U ：删除光标前的整行内容&lt;/li>
&lt;li>使用 Ctrl + K ：删除光标后的整行内容&lt;/li>
&lt;li>使用 Option + Delete ：删除光标前的一个单词（与 Ctrl + W 类似）
这些快捷键可以帮助你快速删除命令内容，提高终端操作效率。&lt;/li>
&lt;/ol></description></item><item><title>数据库使用笔记</title><link>https://bluespace3.github.io/post/mysql----%E5%A4%8D%E5%90%88%E6%9F%A5%E8%AF%A2/</link><pubDate>Sat, 15 Mar 2025 11:00:00 -0700</pubDate><guid>https://bluespace3.github.io/post/mysql----%E5%A4%8D%E5%90%88%E6%9F%A5%E8%AF%A2/</guid><description>&lt;blockquote>
&lt;p>&lt;a href="https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E5%BA%93&amp;amp;spm=1001.2101.3001.7020">数据库&lt;/a>的查询是数据库使用中比较重要的环节，前面的基础查询比较简单，不做介绍，可自行查阅。本文主要介绍复合查询，并结合用例进行讲解。&lt;/p>&lt;/blockquote>
&lt;blockquote>
&lt;p>本文的用例依据Soctt模式的经典测试表，可以自行下载，也可以自己创建&lt;br>
链接：点这里跳转&lt;br>
自行创建步骤如下：&lt;/p>&lt;/blockquote>
&lt;h2 id="0预备工作">0、预备工作&lt;/h2>
&lt;h3 id="01-建表">0.1 建表&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">创建&lt;/span> &lt;span class="n">dept&lt;/span> &lt;span class="err">表（部门表）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CREATE&lt;/span> &lt;span class="n">TABLE&lt;/span> &lt;span class="nf">dept&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deptno&lt;/span> &lt;span class="n">INT&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">KEY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dname&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">14&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">loc&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门位置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">创建&lt;/span> &lt;span class="n">emp&lt;/span> &lt;span class="err">表（员工表）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CREATE&lt;/span> &lt;span class="n">TABLE&lt;/span> &lt;span class="nf">emp&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">empno&lt;/span> &lt;span class="n">INT&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">KEY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">员工编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ename&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">员工姓名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">job&lt;/span> &lt;span class="nf">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">职位&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mgr&lt;/span> &lt;span class="n">INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">上级经理编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hiredate&lt;/span> &lt;span class="n">DATE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">入职日期&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sal&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">工资&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">comm&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">奖金&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">deptno&lt;/span> &lt;span class="n">INT&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">部门编号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FOREIGN&lt;/span> &lt;span class="nf">KEY&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">deptno&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">REFERENCES&lt;/span> &lt;span class="nf">dept&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">deptno&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">创建&lt;/span> &lt;span class="n">salgrade&lt;/span> &lt;span class="err">表（工资等级表）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CREATE&lt;/span> &lt;span class="n">TABLE&lt;/span> &lt;span class="nf">salgrade&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">grade&lt;/span> &lt;span class="n">INT&lt;/span> &lt;span class="n">PRIMARY&lt;/span> &lt;span class="n">KEY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">工资等级&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">losal&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">最低工资&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hisal&lt;/span> &lt;span class="nf">DECIMAL&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span> &lt;span class="err">最高工资&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">1234567891011121314151617181920212223242526&lt;/span>&lt;span class="n">AI写代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="02-插入测试数据">0.2 插入测试数据&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">插入&lt;/span> &lt;span class="n">dept&lt;/span> &lt;span class="err">表数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INSERT&lt;/span> &lt;span class="n">INTO&lt;/span> &lt;span class="nf">dept&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">deptno&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dname&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">loc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ACCOUNTING&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">NEW&lt;/span> &lt;span class="n">YORK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">RESEARCH&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">DALLAS&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALES&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CHICAGO&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">OPERATIONS&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">BOSTON&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">插入&lt;/span> &lt;span class="n">emp&lt;/span> &lt;span class="err">表数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INSERT&lt;/span> &lt;span class="n">INTO&lt;/span> &lt;span class="nf">emp&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">empno&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ename&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">job&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mgr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hiredate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">comm&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">deptno&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7369&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SMITH&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7902&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1980&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">800.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7499&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ALLEN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">02&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1600.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">300.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7521&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">WARD&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">02&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">22&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1250.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">500.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7566&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">JONES&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MANAGER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">04&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">02&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2975.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7654&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MARTIN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">28&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1250.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1400.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">BLAKE&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MANAGER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">05&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2850.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7782&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLARK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MANAGER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">06&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">2450.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7788&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SCOTT&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ANALYST&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7566&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1982&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">3000.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7839&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">KING&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">PRESIDENT&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">11&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">17&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5000.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7844&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">TURNER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">SALESMAN&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">08&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1500.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">0.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7876&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ADAMS&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7788&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1983&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1100.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7900&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">JAMES&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7698&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">03&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">950.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">30&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7902&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">FORD&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">ANALYST&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7566&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1981&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">03&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">3000.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">7934&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">MILLER&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">CLERK&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">7782&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="mi">1982&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mo">01&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">23&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">1300.00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">--&lt;/span> &lt;span class="err">插入&lt;/span> &lt;span class="n">salgrade&lt;/span> &lt;span class="err">表数据&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">INSERT&lt;/span> &lt;span class="n">INTO&lt;/span> &lt;span class="nf">salgrade&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">grade&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">losal&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hisal&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">VALUES&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">700&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1200&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1201&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1400&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1401&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3000&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3001&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9999&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">12345678910111213141516171819202122232425262728293031&lt;/span>&lt;span class="n">AI写代码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建好以后，如果表的内容和下图一样，那基本就没问题了&lt;/p></description></item><item><title>关于本博客</title><link>https://bluespace3.github.io/about/</link><pubDate>Sun, 09 Mar 2025 20:12:52 +0800</pubDate><guid>https://bluespace3.github.io/about/</guid><description/></item><item><title>友情链接</title><link>https://bluespace3.github.io/friend/</link><pubDate>Thu, 09 Jun 2022 20:12:52 +0800</pubDate><guid>https://bluespace3.github.io/friend/</guid><description>&lt;h2 id="本站信息">本站信息&lt;/h2>
&lt;ul>
&lt;li>站名： 拔剑Sketon&lt;/li>
&lt;li>站长： 拔剑Sketon&lt;/li>
&lt;/ul>
&lt;h2 id="申请方法">申请方法&lt;/h2>
&lt;ul>
&lt;li>添加本站后，在本页留言，格式如下&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">```yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#您的名字&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#您的网址&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">desc&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#简短描述&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#一张图片&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">```&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="小伙伴们">小伙伴们&lt;/h2>
&lt;div class="friends-link">
 &lt;a href="" target="_blank">&lt;/a>
&lt;/div></description></item></channel></rss>